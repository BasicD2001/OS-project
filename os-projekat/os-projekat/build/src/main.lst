GAS LISTING /tmp/ccqHhILE.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 75736572 		.string	"userMain started!\n"
   9      4D61696E 
   9      20737461 
   9      72746564 
   9      210A00
  10 0013 00000000 		.align	3
  10      00
  11              	.LC1:
  12 0018 75736572 		.string	"userMain finished!\n"
  12      4D61696E 
  12      2066696E 
  12      69736865 
  12      64210A00 
  13              		.text
  14              		.align	2
  15              		.globl	_Z11userWrapperPv
  17              	_Z11userWrapperPv:
  18              	.LFB44:
  19              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../lib/hw.h"
   2:src/main.cpp  **** 
   3:src/main.cpp  **** #include "../h/riscv.hpp"
   4:src/main.cpp  **** #include "../h/syscall_c.hpp"
   5:src/main.cpp  **** #include "../h/syscall_cpp.hpp"
   6:src/main.cpp  **** #include "../h/tcb.hpp"
   7:src/main.cpp  **** #include "../h/userMain.hpp"
   8:src/main.cpp  **** #include "../test/printing.hpp"
   9:src/main.cpp  **** #include "../test/test1.hpp"
  10:src/main.cpp  **** #include "../h/test2.hpp"
  11:src/main.cpp  **** #include "../test/sem.hpp"
  12:src/main.cpp  **** 
  13:src/main.cpp  **** 
  14:src/main.cpp  **** 
  15:src/main.cpp  **** 
  16:src/main.cpp  **** 
  17:src/main.cpp  **** 
  18:src/main.cpp  **** 
  19:src/main.cpp  **** void userWrapper(void*)
  20:src/main.cpp  **** {
  20              		.loc 1 20 1
  21              		.cfi_startproc
  22 0000 130101FF 		addi	sp,sp,-16
  23              		.cfi_def_cfa_offset 16
  24 0004 23341100 		sd	ra,8(sp)
  25 0008 23308100 		sd	s0,0(sp)
  26              		.cfi_offset 1, -8
  27              		.cfi_offset 8, -16
  28 000c 13040101 		addi	s0,sp,16
  29              		.cfi_def_cfa 8, 0
GAS LISTING /tmp/ccqHhILE.s 			page 2


  21:src/main.cpp  ****   printString("userMain started!\n");
  30              		.loc 1 21 3
  31              		.loc 1 21 14 is_stmt 0
  32 0010 17050000 		lla	a0,.LC0
  32      13050500 
  33 0018 97000000 		call	_Z11printStringPKc@plt
  33      E7800000 
  34              	.LVL0:
  22:src/main.cpp  ****   userMain();
  35              		.loc 1 22 3 is_stmt 1
  36              		.loc 1 22 11 is_stmt 0
  37 0020 97000000 		call	_Z8userMainv@plt
  37      E7800000 
  38              	.LVL1:
  23:src/main.cpp  ****   printString("userMain finished!\n");
  39              		.loc 1 23 3 is_stmt 1
  40              		.loc 1 23 14 is_stmt 0
  41 0028 17050000 		lla	a0,.LC1
  41      13050500 
  42 0030 97000000 		call	_Z11printStringPKc@plt
  42      E7800000 
  43              	.LVL2:
  24:src/main.cpp  **** }
  44              		.loc 1 24 1
  45 0038 83308100 		ld	ra,8(sp)
  46              		.cfi_restore 1
  47 003c 03340100 		ld	s0,0(sp)
  48              		.cfi_restore 8
  49              		.cfi_def_cfa 2, 16
  50 0040 13010101 		addi	sp,sp,16
  51              		.cfi_def_cfa_offset 0
  52 0044 67800000 		jr	ra
  53              		.cfi_endproc
  54              	.LFE44:
  56              		.align	2
  57              		.globl	main
  59              	main:
  60              	.LFB45:
  25:src/main.cpp  **** 
  26:src/main.cpp  **** 
  27:src/main.cpp  **** void main(){
  61              		.loc 1 27 12 is_stmt 1
  62              		.cfi_startproc
  63 0048 130101FE 		addi	sp,sp,-32
  64              		.cfi_def_cfa_offset 32
  65 004c 233C1100 		sd	ra,24(sp)
  66 0050 23388100 		sd	s0,16(sp)
  67 0054 23349100 		sd	s1,8(sp)
  68              		.cfi_offset 1, -8
  69              		.cfi_offset 8, -16
  70              		.cfi_offset 9, -24
  71 0058 13040102 		addi	s0,sp,32
  72              		.cfi_def_cfa 8, 0
  28:src/main.cpp  **** 
  29:src/main.cpp  **** 
  30:src/main.cpp  **** 
  31:src/main.cpp  ****   thread_t mainThread=TCB::createThread(nullptr, nullptr, nullptr,true);
GAS LISTING /tmp/ccqHhILE.s 			page 3


  73              		.loc 1 31 3
  74              		.loc 1 31 40 is_stmt 0
  75 005c 93061000 		li	a3,1
  76 0060 13060000 		li	a2,0
  77 0064 93050000 		li	a1,0
  78 0068 13050000 		li	a0,0
  79 006c 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pmb@plt
  79      E7800000 
  80              	.LVL3:
  32:src/main.cpp  ****   TCB::running=mainThread;
  81              		.loc 1 32 3 is_stmt 1
  82              		.loc 1 32 15 is_stmt 0
  83 0074 97070000 		la	a5,_ZN3TCB7runningE
  83      83B70700 
  84 007c 23B0A700 		sd	a0,0(a5)
  33:src/main.cpp  **** 
  34:src/main.cpp  ****   Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
  85              		.loc 1 34 3 is_stmt 1
  86              		.loc 1 34 17 is_stmt 0
  87 0080 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  87      83B70700 
  88              	.LVL4:
  89              	.LBB10:
  90              	.LBB11:
  91              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** #include "../lib/hw.h"
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** class Riscv
   9:src/../h/riscv.hpp **** {
  10:src/../h/riscv.hpp **** public:
  11:src/../h/riscv.hpp **** 
  12:src/../h/riscv.hpp **** 
  13:src/../h/riscv.hpp ****        //citanje registra a0
  14:src/../h/riscv.hpp ****     static uint64 r_a0();
  15:src/../h/riscv.hpp ****     static uint64 r_a1();
  16:src/../h/riscv.hpp ****     static uint64 r_a2();
  17:src/../h/riscv.hpp ****     static uint64 r_a3();
  18:src/../h/riscv.hpp ****     static uint64 r_a4();
  19:src/../h/riscv.hpp ****     static uint64 r_a6();
  20:src/../h/riscv.hpp ****     static uint64 r_a7();
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  23:src/../h/riscv.hpp ****     static void popSppSpie();
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     // read register scause
  26:src/../h/riscv.hpp ****     static uint64 r_scause();
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     // write register scause
  29:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     // read register sepc
  32:src/../h/riscv.hpp ****     static uint64 r_sepc();
GAS LISTING /tmp/ccqHhILE.s 			page 4


  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     // write register sepc
  35:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     // read register stvec
  38:src/../h/riscv.hpp ****     static uint64 r_stvec();
  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp ****     // write register stvec
  41:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  42:src/../h/riscv.hpp **** 
  43:src/../h/riscv.hpp ****     // read register stval
  44:src/../h/riscv.hpp ****     static uint64 r_stval();
  45:src/../h/riscv.hpp **** 
  46:src/../h/riscv.hpp ****     // write register stval
  47:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  48:src/../h/riscv.hpp **** 
  49:src/../h/riscv.hpp ****     enum BitMaskSip
  50:src/../h/riscv.hpp ****     {
  51:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1), //software inter enable
  52:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),//trap enable
  53:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),//extern enable
  54:src/../h/riscv.hpp ****     };
  55:src/../h/riscv.hpp **** 
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // mask set register sip
  58:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     // mask clear register sip
  61:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp ****     // read register sip
  64:src/../h/riscv.hpp ****     static uint64 r_sip();
  65:src/../h/riscv.hpp **** 
  66:src/../h/riscv.hpp ****     // write register sip
  67:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  68:src/../h/riscv.hpp **** 
  69:src/../h/riscv.hpp ****     enum BitMaskSstatus
  70:src/../h/riscv.hpp ****     {
  71:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  72:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  73:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  74:src/../h/riscv.hpp ****     };
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // mask set register sstatus
  77:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     // mask clear register sstatus
  80:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp ****     // read register sstatus
  83:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp ****     // write register sstatus
  86:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp ****     // supervisor trap
  89:src/../h/riscv.hpp ****     static void supervisorTrap();
GAS LISTING /tmp/ccqHhILE.s 			page 5


  90:src/../h/riscv.hpp ****     /*
  91:src/../h/riscv.hpp ****     PREKIDNA RUTINA,PROCESOR POZIVA KADA SE POJAVI NEKI ZAHTEV ZA PREKIDOM ILI EXCEPTION
  92:src/../h/riscv.hpp ****     POZIVACE SE TEK KADA MI TO ZELIMO
  93:src/../h/riscv.hpp ****     */
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp **** private:
  96:src/../h/riscv.hpp **** 
  97:src/../h/riscv.hpp ****     // supervisor trap handler
  98:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  99:src/../h/riscv.hpp ****     //REGULISE TRAP
 100:src/../h/riscv.hpp **** 
 101:src/../h/riscv.hpp **** };
 102:src/../h/riscv.hpp **** 
 103:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 104:src/../h/riscv.hpp **** {
 105:src/../h/riscv.hpp ****     uint64 volatile scause;
 106:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 107:src/../h/riscv.hpp ****     return scause;
 108:src/../h/riscv.hpp **** }
 109:src/../h/riscv.hpp **** 
 110:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 111:src/../h/riscv.hpp **** {
 112:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 113:src/../h/riscv.hpp **** }
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 116:src/../h/riscv.hpp **** {
 117:src/../h/riscv.hpp ****     uint64 volatile sepc;
 118:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 119:src/../h/riscv.hpp ****     return sepc;
 120:src/../h/riscv.hpp **** }
 121:src/../h/riscv.hpp **** 
 122:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 123:src/../h/riscv.hpp **** {
 124:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 125:src/../h/riscv.hpp **** }
 126:src/../h/riscv.hpp **** 
 127:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 128:src/../h/riscv.hpp **** {
 129:src/../h/riscv.hpp ****     uint64 volatile stvec;
 130:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 131:src/../h/riscv.hpp ****     return stvec;
 132:src/../h/riscv.hpp **** }
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 135:src/../h/riscv.hpp **** {
 136:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  92              		.loc 2 136 5 is_stmt 1
  93              		.loc 2 136 69 is_stmt 0
  94              	#APP
  95              	# 136 "src/../h/riscv.hpp" 1
 137              	}
  96              		csrw stvec, a5
  97              	# 0 "" 2
  98              	.LVL5:
  99              	#NO_APP
 100              	.LBE11:
GAS LISTING /tmp/ccqHhILE.s 			page 6


 101              	.LBE10:
  35:src/main.cpp  ****   Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
 102              		.loc 1 35 3 is_stmt 1
 103              	.LBB12:
 104              	.LBB13:
 138:src/../h/riscv.hpp **** 
 139:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 140:src/../h/riscv.hpp **** {
 141:src/../h/riscv.hpp ****     uint64 volatile stval;
 142:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 143:src/../h/riscv.hpp ****     return stval;
 144:src/../h/riscv.hpp **** }
 145:src/../h/riscv.hpp **** 
 146:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 147:src/../h/riscv.hpp **** {
 148:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 149:src/../h/riscv.hpp **** }
 150:src/../h/riscv.hpp **** 
 151:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 152:src/../h/riscv.hpp **** {
 153:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 154:src/../h/riscv.hpp **** }
 155:src/../h/riscv.hpp **** 
 156:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 157:src/../h/riscv.hpp **** {
 158:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 159:src/../h/riscv.hpp **** }
 160:src/../h/riscv.hpp **** 
 161:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 162:src/../h/riscv.hpp **** {
 163:src/../h/riscv.hpp ****     uint64 volatile sip;
 164:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 165:src/../h/riscv.hpp ****     return sip;
 166:src/../h/riscv.hpp **** }
 167:src/../h/riscv.hpp **** 
 168:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 169:src/../h/riscv.hpp **** {
 170:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 171:src/../h/riscv.hpp **** }
 172:src/../h/riscv.hpp **** 
 173:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 174:src/../h/riscv.hpp **** {
 175:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 105              		.loc 2 175 5
 106              		.loc 2 175 68 is_stmt 0
 107 008c 93072000 		li	a5,2
 108              	#APP
 109              	# 175 "src/../h/riscv.hpp" 1
 176              	}
 110              		csrs sstatus, a5
 111              	# 0 "" 2
 112              	.LVL6:
 113              	#NO_APP
 114              	.LBE13:
 115              	.LBE12:
  36:src/main.cpp  **** 
  37:src/main.cpp  **** 
GAS LISTING /tmp/ccqHhILE.s 			page 7


  38:src/main.cpp  **** 
  39:src/main.cpp  **** 
  40:src/main.cpp  ****   thread_t userThread=TCB::createThread(&userWrapper, nullptr,
 116              		.loc 1 40 3 is_stmt 1
  41:src/main.cpp  ****   (uint64*)MemoryAllocator::createAllocator()->alloc(DEFAULT_STACK_SIZE*sizeof(uint64))
 117              		.loc 1 41 53 is_stmt 0
 118 0094 97000000 		call	_ZN15MemoryAllocator15createAllocatorEv@plt
 118      E7800000 
 119              	.LVL7:
 120 009c B7850000 		li	a1,32768
 121 00a0 97000000 		call	_ZN15MemoryAllocator5allocEm@plt
 121      E7800000 
 122              	.LVL8:
 123 00a8 13060500 		mv	a2,a0
  40:src/main.cpp  ****   (uint64*)MemoryAllocator::createAllocator()->alloc(DEFAULT_STACK_SIZE*sizeof(uint64))
 124              		.loc 1 40 40
 125 00ac 93060000 		li	a3,0
 126 00b0 93050000 		li	a1,0
 127 00b4 17050000 		lla	a0,_Z11userWrapperPv
 127      13050500 
 128 00bc 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pmb@plt
 128      E7800000 
 129              	.LVL9:
 130 00c4 93040500 		mv	s1,a0
 131              	.LVL10:
 132              	.L5:
  42:src/main.cpp  **** );
  43:src/main.cpp  **** 
  44:src/main.cpp  ****   while(!userThread->isFinished()){
 133              		.loc 1 44 3 is_stmt 1
 134              		.loc 1 44 9
 135              	.LBB14:
 136              	.LBB15:
 137              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by os on 3/3/25.
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** //Thread Control Block
   5:src/../h/tcb.hpp **** #ifndef _TCB_H
   6:src/../h/tcb.hpp **** #define _TCB_H
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** #include "../h/scheduler.hpp"
  10:src/../h/tcb.hpp **** #include "../h/syscall_c.hpp"
  11:src/../h/tcb.hpp **** 
  12:src/../h/tcb.hpp **** 
  13:src/../h/tcb.hpp **** //this is thread control block,information about every created thread
  14:src/../h/tcb.hpp **** class TCB {
  15:src/../h/tcb.hpp ****   public:
  16:src/../h/tcb.hpp **** 
  17:src/../h/tcb.hpp ****     ~TCB();
  18:src/../h/tcb.hpp **** 
  19:src/../h/tcb.hpp ****     friend class SemaforKernel;
  20:src/../h/tcb.hpp **** 
  21:src/../h/tcb.hpp ****     using ThreadFunction=void (*)(void*);
  22:src/../h/tcb.hpp **** 
  23:src/../h/tcb.hpp ****     bool isFinished() const{ return finished; }
GAS LISTING /tmp/ccqHhILE.s 			page 8


 138              		.loc 3 23 30
 139              		.loc 3 23 37 is_stmt 0
 140 00c8 83C78402 		lbu	a5,40(s1)
 141              	.LVL11:
 142              	.LBE15:
 143              	.LBE14:
 144              		.loc 1 44 9
 145 00cc 63980700 		bnez	a5,.L4
  45:src/main.cpp  **** 
  46:src/main.cpp  ****     thread_dispatch();
 146              		.loc 1 46 5 is_stmt 1
 147              		.loc 1 46 20 is_stmt 0
 148 00d0 97000000 		call	_Z15thread_dispatchv@plt
 148      E7800000 
 149              	.LVL12:
  44:src/main.cpp  **** 
 150              		.loc 1 44 3
 151 00d8 6FF01FFF 		j	.L5
 152              	.L4:
  47:src/main.cpp  **** 
  48:src/main.cpp  **** 
  49:src/main.cpp  ****   }
  50:src/main.cpp  **** 
  51:src/main.cpp  ****   delete userThread;
 153              		.loc 1 51 3 is_stmt 1
 154              		.loc 1 51 20 is_stmt 0
 155 00dc 63820402 		beqz	s1,.L3
 156              		.loc 1 51 10 discriminator 1
 157 00e0 13850400 		mv	a0,s1
 158 00e4 97000000 		call	_ZN3TCBD1Ev@plt
 158      E7800000 
 159              	.LVL13:
 160              	.LBB16:
 161              	.LBB17:
  24:src/../h/tcb.hpp **** 
  25:src/../h/tcb.hpp ****     void setFinished(bool finish){ finished=finish; }
  26:src/../h/tcb.hpp **** 
  27:src/../h/tcb.hpp ****    static TCB* createThread(ThreadFunction func, void* arg,uint64* stack,bool kernel=false);
  28:src/../h/tcb.hpp **** 
  29:src/../h/tcb.hpp ****    static TCB* running;
  30:src/../h/tcb.hpp **** 
  31:src/../h/tcb.hpp ****    static uint64 const STACK_SIZE = 1024;
  32:src/../h/tcb.hpp **** 
  33:src/../h/tcb.hpp ****     void* operator new(size_t size){ return MemoryAllocator::createAllocator()->alloc(size); }
  34:src/../h/tcb.hpp ****     void operator delete(void* p){ MemoryAllocator::createAllocator()->dealloc(p); }
 162              		.loc 3 34 36 is_stmt 1 discriminator 1
 163              		.loc 3 34 79 is_stmt 0 discriminator 1
 164 00ec 97000000 		call	_ZN15MemoryAllocator15createAllocatorEv@plt
 164      E7800000 
 165              	.LVL14:
 166 00f4 93850400 		mv	a1,s1
 167 00f8 97000000 		call	_ZN15MemoryAllocator7deallocEPv@plt
 167      E7800000 
 168              	.LVL15:
 169              	.LBE17:
 170              	.LBE16:
  52:src/main.cpp  **** 
GAS LISTING /tmp/ccqHhILE.s 			page 9


  53:src/main.cpp  ****   return;
 171              		.loc 1 53 3 is_stmt 1 discriminator 1
 172              	.L3:
  54:src/main.cpp  **** }
 173              		.loc 1 54 1 is_stmt 0
 174 0100 83308101 		ld	ra,24(sp)
 175              		.cfi_restore 1
 176 0104 03340101 		ld	s0,16(sp)
 177              		.cfi_restore 8
 178              		.cfi_def_cfa 2, 32
 179 0108 83348100 		ld	s1,8(sp)
 180              		.cfi_restore 9
 181              	.LVL16:
 182 010c 13010102 		addi	sp,sp,32
 183              		.cfi_def_cfa_offset 0
 184 0110 67800000 		jr	ra
 185              		.cfi_endproc
 186              	.LFE45:
 188              	.Letext0:
 189              		.file 4 "src/../lib/hw.h"
 190              		.file 5 "src/../h/../h/../h/../h/memallocator.hpp"
 191              		.file 6 "src/../h/syscall_c.hpp"
 192              		.file 7 "src/../test/printing.hpp"
 193              		.file 8 "src/../h/userMain.hpp"
GAS LISTING /tmp/ccqHhILE.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccqHhILE.s:17     .text:0000000000000000 _Z11userWrapperPv
     /tmp/ccqHhILE.s:21     .text:0000000000000000 .L0 
     /tmp/ccqHhILE.s:22     .text:0000000000000000 .L0 
     /tmp/ccqHhILE.s:23     .text:0000000000000004 .L0 
     /tmp/ccqHhILE.s:26     .text:000000000000000c .L0 
     /tmp/ccqHhILE.s:27     .text:000000000000000c .L0 
     /tmp/ccqHhILE.s:29     .text:0000000000000010 .L0 
     /tmp/ccqHhILE.s:31     .text:0000000000000010 .L0 
     /tmp/ccqHhILE.s:32     .text:0000000000000010 .L0 
     /tmp/ccqHhILE.s:36     .text:0000000000000020 .L0 
     /tmp/ccqHhILE.s:37     .text:0000000000000020 .L0 
     /tmp/ccqHhILE.s:40     .text:0000000000000028 .L0 
     /tmp/ccqHhILE.s:41     .text:0000000000000028 .L0 
     /tmp/ccqHhILE.s:45     .text:0000000000000038 .L0 
     /tmp/ccqHhILE.s:46     .text:000000000000003c .L0 
     /tmp/ccqHhILE.s:48     .text:0000000000000040 .L0 
     /tmp/ccqHhILE.s:49     .text:0000000000000040 .L0 
     /tmp/ccqHhILE.s:51     .text:0000000000000044 .L0 
     /tmp/ccqHhILE.s:53     .text:0000000000000048 .L0 
     /tmp/ccqHhILE.s:59     .text:0000000000000048 main
     /tmp/ccqHhILE.s:62     .text:0000000000000048 .L0 
     /tmp/ccqHhILE.s:63     .text:0000000000000048 .L0 
     /tmp/ccqHhILE.s:64     .text:000000000000004c .L0 
     /tmp/ccqHhILE.s:68     .text:0000000000000058 .L0 
     /tmp/ccqHhILE.s:69     .text:0000000000000058 .L0 
     /tmp/ccqHhILE.s:70     .text:0000000000000058 .L0 
     /tmp/ccqHhILE.s:72     .text:000000000000005c .L0 
     /tmp/ccqHhILE.s:74     .text:000000000000005c .L0 
     /tmp/ccqHhILE.s:75     .text:000000000000005c .L0 
     /tmp/ccqHhILE.s:82     .text:0000000000000074 .L0 
     /tmp/ccqHhILE.s:83     .text:0000000000000074 .L0 
     /tmp/ccqHhILE.s:86     .text:0000000000000080 .L0 
     /tmp/ccqHhILE.s:87     .text:0000000000000080 .L0 
     /tmp/ccqHhILE.s:93     .text:0000000000000088 .L0 
  src/../h/riscv.hpp:136    .text:0000000000000088 .L0 
     /tmp/ccqHhILE.s:105    .text:000000000000008c .L0 
     /tmp/ccqHhILE.s:106    .text:000000000000008c .L0 
     /tmp/ccqHhILE.s:107    .text:000000000000008c .L0 
     /tmp/ccqHhILE.s:117    .text:0000000000000094 .L0 
     /tmp/ccqHhILE.s:118    .text:0000000000000094 .L0 
     /tmp/ccqHhILE.s:125    .text:00000000000000ac .L0 
     /tmp/ccqHhILE.s:134    .text:00000000000000c8 .L0 
     /tmp/ccqHhILE.s:138    .text:00000000000000c8 .L0 
     /tmp/ccqHhILE.s:139    .text:00000000000000c8 .L0 
     /tmp/ccqHhILE.s:140    .text:00000000000000c8 .L0 
     /tmp/ccqHhILE.s:145    .text:00000000000000cc .L0 
     /tmp/ccqHhILE.s:147    .text:00000000000000d0 .L0 
     /tmp/ccqHhILE.s:148    .text:00000000000000d0 .L0 
     /tmp/ccqHhILE.s:151    .text:00000000000000d8 .L0 
     /tmp/ccqHhILE.s:154    .text:00000000000000dc .L0 
     /tmp/ccqHhILE.s:155    .text:00000000000000dc .L0 
     /tmp/ccqHhILE.s:157    .text:00000000000000e0 .L0 
     /tmp/ccqHhILE.s:163    .text:00000000000000ec .L0 
     /tmp/ccqHhILE.s:164    .text:00000000000000ec .L0 
     /tmp/ccqHhILE.s:173    .text:0000000000000100 .L0 
GAS LISTING /tmp/ccqHhILE.s 			page 11


     /tmp/ccqHhILE.s:174    .text:0000000000000100 .L0 
     /tmp/ccqHhILE.s:175    .text:0000000000000104 .L0 
     /tmp/ccqHhILE.s:177    .text:0000000000000108 .L0 
     /tmp/ccqHhILE.s:178    .text:0000000000000108 .L0 
     /tmp/ccqHhILE.s:180    .text:000000000000010c .L0 
     /tmp/ccqHhILE.s:183    .text:0000000000000110 .L0 
     /tmp/ccqHhILE.s:185    .text:0000000000000114 .L0 
     /tmp/ccqHhILE.s:194    .text:0000000000000114 .L0 
     /tmp/ccqHhILE.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccqHhILE.s:32     .text:0000000000000010 .L0 
     /tmp/ccqHhILE.s:11     .rodata.str1.8:0000000000000018 .LC1
     /tmp/ccqHhILE.s:41     .text:0000000000000028 .L0 
     /tmp/ccqHhILE.s:83     .text:0000000000000074 .L0 
     /tmp/ccqHhILE.s:87     .text:0000000000000080 .L0 
     /tmp/ccqHhILE.s:127    .text:00000000000000b4 .L0 
     /tmp/ccqHhILE.s:152    .text:00000000000000dc .L4
     /tmp/ccqHhILE.s:132    .text:00000000000000c8 .L5
     /tmp/ccqHhILE.s:172    .text:0000000000000100 .L3
     /tmp/ccqHhILE.s:1288   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccqHhILE.s:2522   .debug_str:00000000000006ef .LASF135
     /tmp/ccqHhILE.s:2410   .debug_str:00000000000003ed .LASF136
     /tmp/ccqHhILE.s:2338   .debug_str:000000000000018a .LASF137
     /tmp/ccqHhILE.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccqHhILE.s:188    .text:0000000000000114 .Letext0
     /tmp/ccqHhILE.s:2278   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccqHhILE.s:2440   .debug_str:00000000000004d9 .LASF0
     /tmp/ccqHhILE.s:2458   .debug_str:000000000000053a .LASF1
     /tmp/ccqHhILE.s:2422   .debug_str:000000000000045f .LASF2
     /tmp/ccqHhILE.s:2394   .debug_str:0000000000000361 .LASF4
     /tmp/ccqHhILE.s:2500   .debug_str:000000000000065c .LASF3
     /tmp/ccqHhILE.s:2308   .debug_str:0000000000000096 .LASF5
     /tmp/ccqHhILE.s:2462   .debug_str:000000000000055e .LASF6
     /tmp/ccqHhILE.s:2438   .debug_str:00000000000004c6 .LASF7
     /tmp/ccqHhILE.s:2538   .debug_str:0000000000000803 .LASF8
     /tmp/ccqHhILE.s:2380   .debug_str:00000000000002da .LASF9
     /tmp/ccqHhILE.s:2478   .debug_str:00000000000005b0 .LASF10
     /tmp/ccqHhILE.s:2526   .debug_str:00000000000007b8 .LASF11
     /tmp/ccqHhILE.s:2314   .debug_str:00000000000000b4 .LASF12
     /tmp/ccqHhILE.s:2286   .debug_str:0000000000000021 .LASF13
     /tmp/ccqHhILE.s:2324   .debug_str:000000000000010b .LASF14
     /tmp/ccqHhILE.s:2492   .debug_str:000000000000060d .LASF15
     /tmp/ccqHhILE.s:2340   .debug_str:00000000000001ad .LASF16
     /tmp/ccqHhILE.s:2454   .debug_str:0000000000000527 .LASF70
     /tmp/ccqHhILE.s:2344   .debug_str:00000000000001d7 .LASF138
     /tmp/ccqHhILE.s:2336   .debug_str:000000000000017e .LASF17
     /tmp/ccqHhILE.s:2414   .debug_str:0000000000000416 .LASF18
     /tmp/ccqHhILE.s:2310   .debug_str:000000000000009d .LASF19
     /tmp/ccqHhILE.s:2516   .debug_str:00000000000006e0 .LASF20
     /tmp/ccqHhILE.s:2300   .debug_str:0000000000000067 .LASF22
     /tmp/ccqHhILE.s:2518   .debug_str:00000000000006e5 .LASF21
     /tmp/ccqHhILE.s:2558   .debug_str:00000000000008ac .LASF23
     /tmp/ccqHhILE.s:2520   .debug_str:00000000000006ea .LASF24
     /tmp/ccqHhILE.s:2530   .debug_str:00000000000007cc .LASF25
     /tmp/ccqHhILE.s:2470   .debug_str:0000000000000598 .LASF26
     /tmp/ccqHhILE.s:2494   .debug_str:0000000000000623 .LASF27
     /tmp/ccqHhILE.s:2524   .debug_str:00000000000007b3 .LASF28
     /tmp/ccqHhILE.s:2460   .debug_str:000000000000054d .LASF29
GAS LISTING /tmp/ccqHhILE.s 			page 12


     /tmp/ccqHhILE.s:2476   .debug_str:00000000000005ab .LASF30
     /tmp/ccqHhILE.s:2396   .debug_str:0000000000000368 .LASF31
     /tmp/ccqHhILE.s:2528   .debug_str:00000000000007c7 .LASF32
     /tmp/ccqHhILE.s:2360   .debug_str:000000000000023c .LASF33
     /tmp/ccqHhILE.s:2490   .debug_str:0000000000000602 .LASF66
     /tmp/ccqHhILE.s:2556   .debug_str:0000000000000894 .LASF68
     /tmp/ccqHhILE.s:2288   .debug_str:0000000000000031 .LASF34
     /tmp/ccqHhILE.s:2510   .debug_str:00000000000006a0 .LASF35
     /tmp/ccqHhILE.s:2352   .debug_str:0000000000000216 .LASF38
     /tmp/ccqHhILE.s:2350   .debug_str:0000000000000201 .LASF40
     /tmp/ccqHhILE.s:2502   .debug_str:000000000000066e .LASF36
     /tmp/ccqHhILE.s:2482   .debug_str:00000000000005d1 .LASF37
     /tmp/ccqHhILE.s:2540   .debug_str:0000000000000813 .LASF39
     /tmp/ccqHhILE.s:2514   .debug_str:00000000000006cd .LASF41
     /tmp/ccqHhILE.s:2372   .debug_str:00000000000002a1 .LASF42
     /tmp/ccqHhILE.s:2342   .debug_str:00000000000001c3 .LASF43
     /tmp/ccqHhILE.s:2282   .debug_str:0000000000000009 .LASF44
     /tmp/ccqHhILE.s:2386   .debug_str:000000000000030a .LASF45
     /tmp/ccqHhILE.s:2306   .debug_str:000000000000008e .LASF46
     /tmp/ccqHhILE.s:2316   .debug_str:00000000000000c4 .LASF47
     /tmp/ccqHhILE.s:2564   .debug_str:00000000000008ce .LASF48
     /tmp/ccqHhILE.s:2362   .debug_str:000000000000024d .LASF49
     /tmp/ccqHhILE.s:2442   .debug_str:00000000000004e6 .LASF50
     /tmp/ccqHhILE.s:2552   .debug_str:000000000000087c .LASF51
     /tmp/ccqHhILE.s:2536   .debug_str:00000000000007fc .LASF52
     /tmp/ccqHhILE.s:2370   .debug_str:000000000000028e .LASF53
     /tmp/ccqHhILE.s:2376   .debug_str:00000000000002b4 .LASF54
     /tmp/ccqHhILE.s:2534   .debug_str:00000000000007ea .LASF55
     /tmp/ccqHhILE.s:2296   .debug_str:0000000000000057 .LASF56
     /tmp/ccqHhILE.s:2570   .debug_str:000000000000090a .LASF57
     /tmp/ccqHhILE.s:2562   .debug_str:00000000000008c3 .LASF58
     /tmp/ccqHhILE.s:2498   .debug_str:0000000000000644 .LASF59
     /tmp/ccqHhILE.s:2402   .debug_str:00000000000003ab .LASF60
     /tmp/ccqHhILE.s:2512   .debug_str:00000000000006b5 .LASF61
     /tmp/ccqHhILE.s:2322   .debug_str:0000000000000101 .LASF62
     /tmp/ccqHhILE.s:2390   .debug_str:0000000000000323 .LASF63
     /tmp/ccqHhILE.s:2428   .debug_str:0000000000000484 .LASF64
     /tmp/ccqHhILE.s:2384   .debug_str:00000000000002f4 .LASF65
     /tmp/ccqHhILE.s:2506   .debug_str:0000000000000681 .LASF67
     /tmp/ccqHhILE.s:2318   .debug_str:00000000000000d8 .LASF69
     /tmp/ccqHhILE.s:2542   .debug_str:000000000000081a .LASF108
     /tmp/ccqHhILE.s:2408   .debug_str:00000000000003cb .LASF110
     /tmp/ccqHhILE.s:2420   .debug_str:000000000000044f .LASF71
     /tmp/ccqHhILE.s:2446   .debug_str:00000000000004f6 .LASF89
     /tmp/ccqHhILE.s:2486   .debug_str:00000000000005f0 .LASF72
     /tmp/ccqHhILE.s:2434   .debug_str:00000000000004bb .LASF73
     /tmp/ccqHhILE.s:2284   .debug_str:0000000000000011 .LASF74
     /tmp/ccqHhILE.s:2544   .debug_str:000000000000082f .LASF75
     /tmp/ccqHhILE.s:2448   .debug_str:0000000000000500 .LASF76
     /tmp/ccqHhILE.s:2568   .debug_str:00000000000008ed .LASF78
     /tmp/ccqHhILE.s:2348   .debug_str:00000000000001f9 .LASF77
     /tmp/ccqHhILE.s:2378   .debug_str:00000000000002ba .LASF79
     /tmp/ccqHhILE.s:2298   .debug_str:000000000000005d .LASF84
     /tmp/ccqHhILE.s:2302   .debug_str:0000000000000078 .LASF80
     /tmp/ccqHhILE.s:2398   .debug_str:0000000000000379 .LASF81
     /tmp/ccqHhILE.s:2418   .debug_str:0000000000000433 .LASF92
     /tmp/ccqHhILE.s:2430   .debug_str:000000000000048e .LASF82
GAS LISTING /tmp/ccqHhILE.s 			page 13


     /tmp/ccqHhILE.s:2412   .debug_str:00000000000003fa .LASF83
     /tmp/ccqHhILE.s:2294   .debug_str:000000000000004e .LASF85
     /tmp/ccqHhILE.s:2504   .debug_str:0000000000000675 .LASF86
     /tmp/ccqHhILE.s:2328   .debug_str:000000000000011c .LASF87
     /tmp/ccqHhILE.s:2366   .debug_str:0000000000000274 .LASF88
     /tmp/ccqHhILE.s:2292   .debug_str:0000000000000046 .LASF90
     /tmp/ccqHhILE.s:2388   .debug_str:000000000000031e .LASF91
     /tmp/ccqHhILE.s:2484   .debug_str:00000000000005e4 .LASF93
     /tmp/ccqHhILE.s:2464   .debug_str:0000000000000571 .LASF94
     /tmp/ccqHhILE.s:2332   .debug_str:0000000000000159 .LASF95
     /tmp/ccqHhILE.s:2424   .debug_str:000000000000046d .LASF96
     /tmp/ccqHhILE.s:2566   .debug_str:00000000000008d6 .LASF97
     /tmp/ccqHhILE.s:2456   .debug_str:000000000000052d .LASF98
     /tmp/ccqHhILE.s:2432   .debug_str:0000000000000498 .LASF99
     /tmp/ccqHhILE.s:2550   .debug_str:000000000000086d .LASF139
     /tmp/ccqHhILE.s:2358   .debug_str:0000000000000234 .LASF140
     /tmp/ccqHhILE.s:2312   .debug_str:00000000000000a9 .LASF141
     /tmp/ccqHhILE.s:2546   .debug_str:0000000000000857 .LASF100
     /tmp/ccqHhILE.s:2304   .debug_str:0000000000000082 .LASF101
     /tmp/ccqHhILE.s:2508   .debug_str:0000000000000690 .LASF102
     /tmp/ccqHhILE.s:2488   .debug_str:00000000000005f5 .LASF103
     /tmp/ccqHhILE.s:2496   .debug_str:0000000000000634 .LASF104
     /tmp/ccqHhILE.s:2382   .debug_str:00000000000002e8 .LASF105
     /tmp/ccqHhILE.s:2452   .debug_str:0000000000000514 .LASF106
     /tmp/ccqHhILE.s:2320   .debug_str:00000000000000f4 .LASF107
     /tmp/ccqHhILE.s:2466   .debug_str:000000000000057c .LASF142
     /tmp/ccqHhILE.s:2444   .debug_str:00000000000004ed .LASF109
     /tmp/ccqHhILE.s:2364   .debug_str:0000000000000261 .LASF111
     /tmp/ccqHhILE.s:2334   .debug_str:0000000000000170 .LASF143
     /tmp/ccqHhILE.s:2392   .debug_str:0000000000000339 .LASF144
     /tmp/ccqHhILE.s:2450   .debug_str:0000000000000506 .LASF112
     /tmp/ccqHhILE.s:2400   .debug_str:0000000000000392 .LASF113
     /tmp/ccqHhILE.s:2472   .debug_str:000000000000059d .LASF114
     /tmp/ccqHhILE.s:2560   .debug_str:00000000000008bd .LASF115
     /tmp/ccqHhILE.s:2404   .debug_str:00000000000003b6 .LASF116
     /tmp/ccqHhILE.s:2548   .debug_str:0000000000000864 .LASF117
     /tmp/ccqHhILE.s:2330   .debug_str:0000000000000151 .LASF118
     /tmp/ccqHhILE.s:2532   .debug_str:00000000000007dd .LASF119
     /tmp/ccqHhILE.s:2280   .debug_str:0000000000000000 .LASF120
     /tmp/ccqHhILE.s:2468   .debug_str:0000000000000593 .LASF121
     /tmp/ccqHhILE.s:2474   .debug_str:00000000000005a6 .LASF122
     /tmp/ccqHhILE.s:60     .text:0000000000000048 .LFB45
     /tmp/ccqHhILE.s:186    .text:0000000000000114 .LFE45
     /tmp/ccqHhILE.s:2374   .debug_str:00000000000002a9 .LASF123
     /tmp/ccqHhILE.s:2229   .debug_loc:0000000000000000 .LLST0
     /tmp/ccqHhILE.s:2426   .debug_str:0000000000000479 .LASF124
     /tmp/ccqHhILE.s:2236   .debug_loc:0000000000000023 .LLST1
     /tmp/ccqHhILE.s:89     .text:0000000000000088 .LBB10
     /tmp/ccqHhILE.s:101    .text:000000000000008c .LBE10
     /tmp/ccqHhILE.s:103    .text:000000000000008c .LBB12
     /tmp/ccqHhILE.s:115    .text:0000000000000094 .LBE12
     /tmp/ccqHhILE.s:2243   .debug_loc:0000000000000046 .LLST2
     /tmp/ccqHhILE.s:135    .text:00000000000000c8 .LBB14
     /tmp/ccqHhILE.s:143    .text:00000000000000cc .LBE14
     /tmp/ccqHhILE.s:2251   .debug_loc:000000000000006a .LLST3
     /tmp/ccqHhILE.s:160    .text:00000000000000ec .LBB16
     /tmp/ccqHhILE.s:170    .text:0000000000000100 .LBE16
GAS LISTING /tmp/ccqHhILE.s 			page 14


     /tmp/ccqHhILE.s:2258   .debug_loc:000000000000008d .LLST4
     /tmp/ccqHhILE.s:165    .text:00000000000000f4 .LVL14
     /tmp/ccqHhILE.s:168    .text:0000000000000100 .LVL15
     /tmp/ccqHhILE.s:80     .text:0000000000000074 .LVL3
     /tmp/ccqHhILE.s:119    .text:000000000000009c .LVL7
     /tmp/ccqHhILE.s:122    .text:00000000000000a8 .LVL8
     /tmp/ccqHhILE.s:129    .text:00000000000000c4 .LVL9
     /tmp/ccqHhILE.s:149    .text:00000000000000d8 .LVL12
     /tmp/ccqHhILE.s:159    .text:00000000000000ec .LVL13
     /tmp/ccqHhILE.s:2354   .debug_str:000000000000021f .LASF125
     /tmp/ccqHhILE.s:2480   .debug_str:00000000000005bf .LASF126
     /tmp/ccqHhILE.s:18     .text:0000000000000000 .LFB44
     /tmp/ccqHhILE.s:54     .text:0000000000000048 .LFE44
     /tmp/ccqHhILE.s:34     .text:0000000000000020 .LVL0
     /tmp/ccqHhILE.s:38     .text:0000000000000028 .LVL1
     /tmp/ccqHhILE.s:43     .text:0000000000000038 .LVL2
     /tmp/ccqHhILE.s:2554   .debug_str:000000000000088f .LASF145
     /tmp/ccqHhILE.s:2326   .debug_str:0000000000000117 .LASF127
     /tmp/ccqHhILE.s:2436   .debug_str:00000000000004c0 .LASF128
     /tmp/ccqHhILE.s:2368   .debug_str:0000000000000279 .LASF129
     /tmp/ccqHhILE.s:2416   .debug_str:0000000000000423 .LASF131
     /tmp/ccqHhILE.s:2346   .debug_str:00000000000001e6 .LASF130
     /tmp/ccqHhILE.s:2290   .debug_str:000000000000003a .LASF132
     /tmp/ccqHhILE.s:2406   .debug_str:00000000000003be .LASF133
     /tmp/ccqHhILE.s:2356   .debug_str:000000000000022b .LASF134
     /tmp/ccqHhILE.s:131    .text:00000000000000c8 .LVL10
     /tmp/ccqHhILE.s:181    .text:000000000000010c .LVL16
     /tmp/ccqHhILE.s:98     .text:000000000000008c .LVL5
     /tmp/ccqHhILE.s:112    .text:0000000000000094 .LVL6
     /tmp/ccqHhILE.s:141    .text:00000000000000cc .LVL11
     /tmp/ccqHhILE.s:195    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Z11printStringPKc
_Z8userMainv
_ZN3TCB12createThreadEPFvPvES0_Pmb
_ZN3TCB7runningE
_ZN5Riscv14supervisorTrapEv
_ZN15MemoryAllocator15createAllocatorEv
_ZN15MemoryAllocator5allocEm
_Z15thread_dispatchv
_ZN3TCBD1Ev
_ZN15MemoryAllocator7deallocEPv
