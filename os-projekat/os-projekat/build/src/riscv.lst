GAS LISTING /tmp/ccxYSQ9Z.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB47:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** //
   2:src/riscv.cpp **** // Created by marko on 20.4.22..
   3:src/riscv.cpp **** //
   4:src/riscv.cpp **** 
   5:src/riscv.cpp **** #include "../h/riscv.hpp"
   6:src/riscv.cpp **** #include "../h/tcb.hpp"
   7:src/riscv.cpp **** #include "../lib/console.h"
   8:src/riscv.cpp **** #include "../h/SemaforKernel.hpp"
   9:src/riscv.cpp **** #include "../test/printing.hpp"
  10:src/riscv.cpp **** 
  11:src/riscv.cpp **** void Riscv::popSppSpie()
  12:src/riscv.cpp **** //VRACANJE PRETHODNIH PRIVILEGIJA KAO I PRETHODNOG STANJA STO SE TICE MASKIRANJA PREKIDA
  13:src/riscv.cpp **** /*mora da bude bude non inline,ne da se njen kod ugradjuje vec da se ona pozove
  14:src/riscv.cpp **** jer ako se ugradi na mesto poziva menja se ra*/
  15:src/riscv.cpp **** {
  12              		.loc 1 15 1
  13              		.cfi_startproc
  14 0000 130101FE 		addi	sp,sp,-32
  15              		.cfi_def_cfa_offset 32
  16 0004 233C8100 		sd	s0,24(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040102 		addi	s0,sp,32
  19              		.cfi_def_cfa 8, 0
  16:src/riscv.cpp ****     uint64 volatile sstatus;
  20              		.loc 1 16 5
  17:src/riscv.cpp ****     sstatus = r_sstatus();
  21              		.loc 1 17 5
  22              	.LBB104:
  23              	.LBB105:
  24              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** #include "../lib/hw.h"
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** class Riscv
   9:src/../h/riscv.hpp **** {
  10:src/../h/riscv.hpp **** public:
  11:src/../h/riscv.hpp **** 
  12:src/../h/riscv.hpp **** 
  13:src/../h/riscv.hpp ****        //citanje registra a0
  14:src/../h/riscv.hpp ****     static uint64 r_a0();
  15:src/../h/riscv.hpp ****     static uint64 r_a1();
  16:src/../h/riscv.hpp ****     static uint64 r_a2();
  17:src/../h/riscv.hpp ****     static uint64 r_a3();
GAS LISTING /tmp/ccxYSQ9Z.s 			page 2


  18:src/../h/riscv.hpp ****     static uint64 r_a4();
  19:src/../h/riscv.hpp ****     static uint64 r_a6();
  20:src/../h/riscv.hpp ****     static uint64 r_a7();
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  23:src/../h/riscv.hpp ****     static void popSppSpie();
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     // read register scause
  26:src/../h/riscv.hpp ****     static uint64 r_scause();
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     // write register scause
  29:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     // read register sepc
  32:src/../h/riscv.hpp ****     static uint64 r_sepc();
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     // write register sepc
  35:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     // read register stvec
  38:src/../h/riscv.hpp ****     static uint64 r_stvec();
  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp ****     // write register stvec
  41:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  42:src/../h/riscv.hpp **** 
  43:src/../h/riscv.hpp ****     // read register stval
  44:src/../h/riscv.hpp ****     static uint64 r_stval();
  45:src/../h/riscv.hpp **** 
  46:src/../h/riscv.hpp ****     // write register stval
  47:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  48:src/../h/riscv.hpp **** 
  49:src/../h/riscv.hpp ****     enum BitMaskSip
  50:src/../h/riscv.hpp ****     {
  51:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1), //software inter enable
  52:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),//trap enable
  53:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),//extern enable
  54:src/../h/riscv.hpp ****     };
  55:src/../h/riscv.hpp **** 
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // mask set register sip
  58:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     // mask clear register sip
  61:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp ****     // read register sip
  64:src/../h/riscv.hpp ****     static uint64 r_sip();
  65:src/../h/riscv.hpp **** 
  66:src/../h/riscv.hpp ****     // write register sip
  67:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  68:src/../h/riscv.hpp **** 
  69:src/../h/riscv.hpp ****     enum BitMaskSstatus
  70:src/../h/riscv.hpp ****     {
  71:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  72:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  73:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  74:src/../h/riscv.hpp ****     };
GAS LISTING /tmp/ccxYSQ9Z.s 			page 3


  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // mask set register sstatus
  77:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     // mask clear register sstatus
  80:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp ****     // read register sstatus
  83:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp ****     // write register sstatus
  86:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp ****     // supervisor trap
  89:src/../h/riscv.hpp ****     static void supervisorTrap();
  90:src/../h/riscv.hpp ****     /*
  91:src/../h/riscv.hpp ****     PREKIDNA RUTINA,PROCESOR POZIVA KADA SE POJAVI NEKI ZAHTEV ZA PREKIDOM ILI EXCEPTION
  92:src/../h/riscv.hpp ****     POZIVACE SE TEK KADA MI TO ZELIMO
  93:src/../h/riscv.hpp ****     */
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp **** private:
  96:src/../h/riscv.hpp **** 
  97:src/../h/riscv.hpp ****     // supervisor trap handler
  98:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  99:src/../h/riscv.hpp ****     //REGULISE TRAP
 100:src/../h/riscv.hpp **** 
 101:src/../h/riscv.hpp **** };
 102:src/../h/riscv.hpp **** 
 103:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 104:src/../h/riscv.hpp **** {
 105:src/../h/riscv.hpp ****     uint64 volatile scause;
 106:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 107:src/../h/riscv.hpp ****     return scause;
 108:src/../h/riscv.hpp **** }
 109:src/../h/riscv.hpp **** 
 110:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 111:src/../h/riscv.hpp **** {
 112:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 113:src/../h/riscv.hpp **** }
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 116:src/../h/riscv.hpp **** {
 117:src/../h/riscv.hpp ****     uint64 volatile sepc;
 118:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 119:src/../h/riscv.hpp ****     return sepc;
 120:src/../h/riscv.hpp **** }
 121:src/../h/riscv.hpp **** 
 122:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 123:src/../h/riscv.hpp **** {
 124:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 125:src/../h/riscv.hpp **** }
 126:src/../h/riscv.hpp **** 
 127:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 128:src/../h/riscv.hpp **** {
 129:src/../h/riscv.hpp ****     uint64 volatile stvec;
 130:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 131:src/../h/riscv.hpp ****     return stvec;
GAS LISTING /tmp/ccxYSQ9Z.s 			page 4


 132:src/../h/riscv.hpp **** }
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 135:src/../h/riscv.hpp **** {
 136:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 137:src/../h/riscv.hpp **** }
 138:src/../h/riscv.hpp **** 
 139:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 140:src/../h/riscv.hpp **** {
 141:src/../h/riscv.hpp ****     uint64 volatile stval;
 142:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 143:src/../h/riscv.hpp ****     return stval;
 144:src/../h/riscv.hpp **** }
 145:src/../h/riscv.hpp **** 
 146:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 147:src/../h/riscv.hpp **** {
 148:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 149:src/../h/riscv.hpp **** }
 150:src/../h/riscv.hpp **** 
 151:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 152:src/../h/riscv.hpp **** {
 153:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 154:src/../h/riscv.hpp **** }
 155:src/../h/riscv.hpp **** 
 156:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 157:src/../h/riscv.hpp **** {
 158:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 159:src/../h/riscv.hpp **** }
 160:src/../h/riscv.hpp **** 
 161:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 162:src/../h/riscv.hpp **** {
 163:src/../h/riscv.hpp ****     uint64 volatile sip;
 164:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 165:src/../h/riscv.hpp ****     return sip;
 166:src/../h/riscv.hpp **** }
 167:src/../h/riscv.hpp **** 
 168:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 169:src/../h/riscv.hpp **** {
 170:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 171:src/../h/riscv.hpp **** }
 172:src/../h/riscv.hpp **** 
 173:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 174:src/../h/riscv.hpp **** {
 175:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 176:src/../h/riscv.hpp **** }
 177:src/../h/riscv.hpp **** 
 178:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 179:src/../h/riscv.hpp **** {
 180:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 181:src/../h/riscv.hpp **** }
 182:src/../h/riscv.hpp **** 
 183:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 184:src/../h/riscv.hpp **** {
 185:src/../h/riscv.hpp ****     uint64 volatile sstatus;
  25              		.loc 2 185 5
 186:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
  26              		.loc 2 186 5
GAS LISTING /tmp/ccxYSQ9Z.s 			page 5


  27              		.loc 2 186 76 is_stmt 0
  28              	#APP
  29              	# 186 "src/../h/riscv.hpp" 1
 187              	    return sstatus;
  30              		csrr a5, sstatus
  31              	# 0 "" 2
  32              	#NO_APP
  33 0010 2330F4FE 		sd	a5,-32(s0)
  34              		.loc 2 187 5 is_stmt 1
  35              		.loc 2 187 12 is_stmt 0
  36 0014 833704FE 		ld	a5,-32(s0)
  37              	.LBE105:
  38              	.LBE104:
  39              		.loc 1 17 13
  40 0018 2334F4FE 		sd	a5,-24(s0)
  18:src/riscv.cpp ****     if(TCB::running->kernelThread){
  41              		.loc 1 18 5 is_stmt 1
  42              		.loc 1 18 22 is_stmt 0
  43 001c 97070000 		la	a5,_ZN3TCB7runningE
  43      83B70700 
  44 0024 83B70700 		ld	a5,0(a5)
  45 0028 83C7A702 		lbu	a5,42(a5)
  46              		.loc 1 18 5
  47 002c 63860702 		beqz	a5,.L2
  19:src/riscv.cpp ****         sstatus = sstatus | SSTATUS_SPP;
  48              		.loc 1 19 9 is_stmt 1
  49              		.loc 1 19 19 is_stmt 0
  50 0030 833784FE 		ld	a5,-24(s0)
  51              		.loc 1 19 27
  52 0034 93E70710 		ori	a5,a5,256
  53              		.loc 1 19 17
  54 0038 2334F4FE 		sd	a5,-24(s0)
  55              	.L3:
  20:src/riscv.cpp ****     }
  21:src/riscv.cpp ****     else{
  22:src/riscv.cpp ****         sstatus = sstatus & ~SSTATUS_SPP;
  23:src/riscv.cpp ****     }
  24:src/riscv.cpp ****     w_sstatus(sstatus);
  56              		.loc 1 24 5 is_stmt 1
  57              		.loc 1 24 14 is_stmt 0
  58 003c 833784FE 		ld	a5,-24(s0)
  59              	.LVL0:
  60              	.LBB106:
  61              	.LBB107:
 188:src/../h/riscv.hpp **** }
 189:src/../h/riscv.hpp **** 
 190:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 191:src/../h/riscv.hpp **** {
 192:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
  62              		.loc 2 192 5 is_stmt 1
  63              		.loc 2 192 77 is_stmt 0
  64              	#APP
  65              	# 192 "src/../h/riscv.hpp" 1
 193              	}
  66              		csrw sstatus, a5
  67              	# 0 "" 2
  68              	.LVL1:
GAS LISTING /tmp/ccxYSQ9Z.s 			page 6


  69              	#NO_APP
  70              	.LBE107:
  71              	.LBE106:
  25:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  72              		.loc 1 25 5 is_stmt 1
  73              		.loc 1 25 38 is_stmt 0
  74              	#APP
  75              	# 25 "src/riscv.cpp" 1
  26              	    __asm__ volatile("sret");
  76              		csrw sepc, ra
  77              	# 0 "" 2
  78              		.loc 1 26 5 is_stmt 1
  79              		.loc 1 26 29 is_stmt 0
  80              	# 26 "src/riscv.cpp" 1
  27              	}
  81              		sret
  82              	# 0 "" 2
  83              		.loc 1 27 1
  84              	#NO_APP
  85 004c 03348101 		ld	s0,24(sp)
  86              		.cfi_remember_state
  87              		.cfi_restore 8
  88              		.cfi_def_cfa 2, 32
  89 0050 13010102 		addi	sp,sp,32
  90              		.cfi_def_cfa_offset 0
  91 0054 67800000 		jr	ra
  92              	.L2:
  93              		.cfi_restore_state
  22:src/riscv.cpp ****     }
  94              		.loc 1 22 9 is_stmt 1
  22:src/riscv.cpp ****     }
  95              		.loc 1 22 19 is_stmt 0
  96 0058 833784FE 		ld	a5,-24(s0)
  22:src/riscv.cpp ****     }
  97              		.loc 1 22 27
  98 005c 93F7F7EF 		andi	a5,a5,-257
  22:src/riscv.cpp ****     }
  99              		.loc 1 22 17
 100 0060 2334F4FE 		sd	a5,-24(s0)
 101 0064 6FF09FFD 		j	.L3
 102              		.cfi_endproc
 103              	.LFE47:
 105              		.section	.rodata.str1.8,"aMS",@progbits,1
 106              		.align	3
 107              	.LC0:
 108 0000 73636175 		.string	"scause: 0x"
 108      73653A20 
 108      307800
 109 000b 00000000 		.align	3
 109      00
 110              	.LC1:
 111 0010 0A00     		.string	"\n"
 112 0012 00000000 		.align	3
 112      0000
 113              	.LC2:
 114 0018 73657063 		.string	"sepc: 0x"
 114      3A203078 
GAS LISTING /tmp/ccxYSQ9Z.s 			page 7


 114      00
 115 0021 00000000 		.align	3
 115      000000
 116              	.LC3:
 117 0028 73747661 		.string	"stval: 0x"
 117      6C3A2030 
 117      7800
 118              		.text
 119              		.align	2
 120              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 122              	_ZN5Riscv20handleSupervisorTrapEv:
 123              	.LFB48:
  28:src/riscv.cpp **** 
  29:src/riscv.cpp **** /*
  30:src/riscv.cpp **** KLLJUCNA STVAR:
  31:src/riscv.cpp **** POSTOJI ODREDJENI PROBLEM:NAPRAVILI SMO THREAD WRAPPER KOJI SE UVEK POZIVA ZA NOVOKREIRANU NIT,A SV
  32:src/riscv.cpp **** NOVOSTALU NIT IZ DISPATCHA,A DISPATCH SE POZVAO IZ PREKIDNE RUTINA,STO ZNACI DA MI DIREKTNO IZ PREK
  33:src/riscv.cpp **** ZAPRAVO POZIVA BODY TJ FUNKCIJU,ALI TO BI ZNACILO DA SE PREKIDNA RUTINA NIKAEDA NIJE NI ZAVRSILA,BI
  34:src/riscv.cpp **** OVO JE SPECIFICAN SLUCAJ SAMO KADA SE NIT PRVI PUT BUDI,SVAKI SLEDECI PUT NEMA PROBLEMA JER CE SE I
  35:src/riscv.cpp **** TJ SKIDA SA STEKA SVE ITD ITD,TO JE DEO HALNDERA ISPOD DISPATHA
  36:src/riscv.cpp **** 
  37:src/riscv.cpp **** 
  38:src/riscv.cpp **** DRUGI PROBLEM JE TO STO IMAMO REGISTAR SIP U KOM SE NALAZE INFORMACIJE O PRETHODNOM STANJU PRIVILEG
  39:src/riscv.cpp **** PRI ULASKU U PREKIDNU RUTINU PREKO ECALL,OVE STVARI SU PROMENJENE,PA SU NPR BLOKIRANI PREKIDI I PRO
  40:src/riscv.cpp **** 
  41:src/riscv.cpp **** 
  42:src/riscv.cpp **** STA MOZE DA BUDE RESENJE DA SE U OVOM SPECIFICNOM SLUCAJU IZADJEMO IZ PREKIDNE RUTINE I VRATIMO OVE
  43:src/riscv.cpp **** RESENJE JE DA ZAPRAVO PRE POCETKA BODYJA U WRAPPERU URADIMO SRET KOJI IMPLICITNO NAMESTA BITOVE U S
  44:src/riscv.cpp **** MEDJUTIM AKO BI SAMO URADILI SRET ON BI SE VRATIO NA ADRESU ZAPISANU U SEPC ,A ADRESA U SEPC JE ADR
  45:src/riscv.cpp **** JER JE TO ZAPAMCENO PRI ECALLU KOJI SE IZVRSIO IZ STARE NITI!!!!!(OVO ZA ECALL JE ZA SINHRONE STO J
  46:src/riscv.cpp **** 
  47:src/riscv.cpp **** 
  48:src/riscv.cpp **** RESENJE JE DA SE U SEPC STAVI RA,KOJI PREDSTAVLJA ADRESU ISPOD OVE FUNKCIJE TJ NASTAVK IZVRSAVANJA 
  49:src/riscv.cpp **** REGULISE OVAJ SIP I ODE NA SEPC KOJI ZAPRAVO NASTAVLJA IZVRSAVANJE WRAPPERA
  50:src/riscv.cpp **** 
  51:src/riscv.cpp **** 
  52:src/riscv.cpp **** zbog ovoga je vazno da ova funkcija ne bude inline da bi se namestio ovaj ra
  53:src/riscv.cpp **** */
  54:src/riscv.cpp **** 
  55:src/riscv.cpp **** 
  56:src/riscv.cpp **** void Riscv::handleSupervisorTrap()
  57:src/riscv.cpp **** //OVDE ULAZIMO PRI BILO KOM EXCEPTIONU JER SMO TAKO STAVILI U STVEC(NA 2 NAJNIZA BITA 0)
  58:src/riscv.cpp **** {   //printString("Trap!\n");
 124              		.loc 1 58 1 is_stmt 1
 125              		.cfi_startproc
 126 0068 130101E8 		addi	sp,sp,-384
 127              		.cfi_def_cfa_offset 384
 128 006c 233C1116 		sd	ra,376(sp)
 129 0070 23388116 		sd	s0,368(sp)
 130 0074 23349116 		sd	s1,360(sp)
 131 0078 23302117 		sd	s2,352(sp)
 132 007c 233C3115 		sd	s3,344(sp)
 133              		.cfi_offset 1, -8
 134              		.cfi_offset 8, -16
 135              		.cfi_offset 9, -24
 136              		.cfi_offset 18, -32
 137              		.cfi_offset 19, -40
GAS LISTING /tmp/ccxYSQ9Z.s 			page 8


 138 0080 13040118 		addi	s0,sp,384
 139              		.cfi_def_cfa 8, 0
  59:src/riscv.cpp **** 
  60:src/riscv.cpp ****     uint64 volatile a1, a2, a3, a4,a0;
 140              		.loc 1 60 5
  61:src/riscv.cpp ****     a0=Riscv::r_a0();
 141              		.loc 1 61 5
 142              	.LBB108:
 143              	.LBB109:
 194:src/../h/riscv.hpp **** 
 195:src/../h/riscv.hpp **** 
 196:src/../h/riscv.hpp **** 
 197:src/../h/riscv.hpp **** inline uint64 Riscv::r_a0(){ // za citanje koda instrukcije
 198:src/../h/riscv.hpp ****     uint64 volatile a0;
 144              		.loc 2 198 5
 199:src/../h/riscv.hpp ****     __asm__ volatile("mv %[savedValue], a0" :  [savedValue] "=r" (a0));
 145              		.loc 2 199 5
 146              		.loc 2 199 71 is_stmt 0
 147              	#APP
 148              	# 199 "src/../h/riscv.hpp" 1
 200              	    return a0;
 149              		mv a5, a0
 150              	# 0 "" 2
 151              	#NO_APP
 152 0088 233CF4F0 		sd	a5,-232(s0)
 153              		.loc 2 200 5 is_stmt 1
 154              		.loc 2 200 12 is_stmt 0
 155 008c 833784F1 		ld	a5,-232(s0)
 156              	.LBE109:
 157              	.LBE108:
 158              		.loc 1 61 7
 159 0090 2334F4FA 		sd	a5,-88(s0)
  62:src/riscv.cpp ****     a1 = Riscv::r_a1();
 160              		.loc 1 62 5 is_stmt 1
 161              	.LBB110:
 162              	.LBB111:
 201:src/../h/riscv.hpp **** }
 202:src/../h/riscv.hpp **** 
 203:src/../h/riscv.hpp **** inline uint64 Riscv::r_a1(){ // za citanje prvog argumenta
 204:src/../h/riscv.hpp ****     uint64 volatile a1;
 163              		.loc 2 204 5
 205:src/../h/riscv.hpp ****     __asm__ volatile("mv %[savedValue], a1" :  [savedValue] "=r" (a1));
 164              		.loc 2 205 5
 165              		.loc 2 205 71 is_stmt 0
 166              	#APP
 167              	# 205 "src/../h/riscv.hpp" 1
 206              	    return a1;
 168              		mv a5, a1
 169              	# 0 "" 2
 170              	#NO_APP
 171 0098 2338F4F0 		sd	a5,-240(s0)
 172              		.loc 2 206 5 is_stmt 1
 173              		.loc 2 206 12 is_stmt 0
 174 009c 833704F1 		ld	a5,-240(s0)
 175              	.LBE111:
 176              	.LBE110:
 177              		.loc 1 62 8
GAS LISTING /tmp/ccxYSQ9Z.s 			page 9


 178 00a0 2334F4FC 		sd	a5,-56(s0)
  63:src/riscv.cpp ****     a2 = Riscv::r_a2();
 179              		.loc 1 63 5 is_stmt 1
 180              	.LBB112:
 181              	.LBB113:
 207:src/../h/riscv.hpp **** }
 208:src/../h/riscv.hpp **** 
 209:src/../h/riscv.hpp **** inline uint64 Riscv::r_a2(){ // za citanje koda instrukcije
 210:src/../h/riscv.hpp ****     uint64 volatile a2;
 182              		.loc 2 210 5
 211:src/../h/riscv.hpp ****     __asm__ volatile("mv %[savedValue], a2" :  [savedValue] "=r" (a2));
 183              		.loc 2 211 5
 184              		.loc 2 211 71 is_stmt 0
 185              	#APP
 186              	# 211 "src/../h/riscv.hpp" 1
 212              	    return a2;
 187              		mv a5, a2
 188              	# 0 "" 2
 189              	#NO_APP
 190 00a8 2334F4F0 		sd	a5,-248(s0)
 191              		.loc 2 212 5 is_stmt 1
 192              		.loc 2 212 12 is_stmt 0
 193 00ac 833784F0 		ld	a5,-248(s0)
 194              	.LBE113:
 195              	.LBE112:
 196              		.loc 1 63 8
 197 00b0 2330F4FC 		sd	a5,-64(s0)
  64:src/riscv.cpp ****     a3 = Riscv::r_a3();
 198              		.loc 1 64 5 is_stmt 1
 199              	.LBB114:
 200              	.LBB115:
 213:src/../h/riscv.hpp **** }
 214:src/../h/riscv.hpp **** 
 215:src/../h/riscv.hpp **** inline uint64 Riscv::r_a3(){ // za citanje koda instrukcije
 216:src/../h/riscv.hpp ****     uint64 volatile a3;
 201              		.loc 2 216 5
 217:src/../h/riscv.hpp ****     __asm__ volatile("mv %[savedValue], a3" :  [savedValue] "=r" (a3));
 202              		.loc 2 217 5
 203              		.loc 2 217 71 is_stmt 0
 204              	#APP
 205              	# 217 "src/../h/riscv.hpp" 1
 218              	    return a3;
 206              		mv a5, a3
 207              	# 0 "" 2
 208              	#NO_APP
 209 00b8 2330F4F0 		sd	a5,-256(s0)
 210              		.loc 2 218 5 is_stmt 1
 211              		.loc 2 218 12 is_stmt 0
 212 00bc 833704F0 		ld	a5,-256(s0)
 213              	.LBE115:
 214              	.LBE114:
 215              		.loc 1 64 8
 216 00c0 233CF4FA 		sd	a5,-72(s0)
  65:src/riscv.cpp ****     a4 = Riscv::r_a4();
 217              		.loc 1 65 5 is_stmt 1
 218              	.LBB116:
 219              	.LBB117:
GAS LISTING /tmp/ccxYSQ9Z.s 			page 10


 219:src/../h/riscv.hpp **** }
 220:src/../h/riscv.hpp **** 
 221:src/../h/riscv.hpp **** inline uint64 Riscv::r_a4(){ // za citanje koda instrukcije
 222:src/../h/riscv.hpp ****     uint64 volatile a4;
 220              		.loc 2 222 5
 223:src/../h/riscv.hpp ****     __asm__ volatile("mv %[savedValue], a4" :  [savedValue] "=r" (a4));
 221              		.loc 2 223 5
 222              		.loc 2 223 71 is_stmt 0
 223              	#APP
 224              	# 223 "src/../h/riscv.hpp" 1
 224              	    return a4;
 225              		mv a5, a4
 226              	# 0 "" 2
 227              	#NO_APP
 228 00c8 233CF4EE 		sd	a5,-264(s0)
 229              		.loc 2 224 5 is_stmt 1
 230              		.loc 2 224 12 is_stmt 0
 231 00cc 833784EF 		ld	a5,-264(s0)
 232              	.LBE117:
 233              	.LBE116:
 234              		.loc 1 65 8
 235 00d0 2338F4FA 		sd	a5,-80(s0)
  66:src/riscv.cpp ****     uint64 scause = r_scause();
 236              		.loc 1 66 5 is_stmt 1
 237              	.LBB118:
 238              	.LBB119:
 105:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 239              		.loc 2 105 5
 106:src/../h/riscv.hpp ****     return scause;
 240              		.loc 2 106 5
 106:src/../h/riscv.hpp ****     return scause;
 241              		.loc 2 106 72 is_stmt 0
 242              	#APP
 243              	# 106 "src/../h/riscv.hpp" 1
 244              		csrr a5, scause
 245              	# 0 "" 2
 246              	#NO_APP
 247 00d8 2338F4EE 		sd	a5,-272(s0)
 107:src/../h/riscv.hpp **** }
 248              		.loc 2 107 5 is_stmt 1
 107:src/../h/riscv.hpp **** }
 249              		.loc 2 107 12 is_stmt 0
 250 00dc 833404EF 		ld	s1,-272(s0)
 251              	.LVL2:
 252              	.LBE119:
 253              	.LBE118:
  67:src/riscv.cpp **** 
  68:src/riscv.cpp **** 
  69:src/riscv.cpp **** 
  70:src/riscv.cpp ****     //procitamo scause da vidimo sto smo usli,ispod pitamo sta se desilo
  71:src/riscv.cpp ****     /*masina je napralvjena da prekid od tajmera tretira kao supervisorski softverski prekid
  72:src/riscv.cpp ****     a to je prekid od tajmera
  73:src/riscv.cpp ****     druga stvar je spoljasnji supervisorski prekid,od konzole npr*/
  74:src/riscv.cpp ****     if (scause == 0x0000000000000008UL || scause == 0x0000000000000009UL)
 254              		.loc 1 74 5 is_stmt 1
 255              	.LBB120:
 256              		.loc 1 74 40 is_stmt 0
GAS LISTING /tmp/ccxYSQ9Z.s 			page 11


 257 00e0 138784FF 		addi	a4,s1,-8
 258              		.loc 1 74 5
 259 00e4 93071000 		li	a5,1
 260 00e8 63FEE70E 		bleu	a4,a5,.L27
 261              	.LBE120:
  75:src/riscv.cpp ****     {
  76:src/riscv.cpp **** 
  77:src/riscv.cpp ****         //OVO JE ZA EXCEPTION KOJI DOLAZI ILI IZ USER MODE ILI IZ SUPERVIZORSKOG,PA SMO STAVILI ILI
  78:src/riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  79:src/riscv.cpp ****         int code=(int)a0;
  80:src/riscv.cpp ****         switch (code){
  81:src/riscv.cpp ****             case (0x01):{ //mem_alloc
  82:src/riscv.cpp ****                 size_t num=(size_t)a1;
  83:src/riscv.cpp ****                 //__asm__ volatile("mv %0,a1":"=r"(num));
  84:src/riscv.cpp ****                 size_t size = num * MEM_BLOCK_SIZE;
  85:src/riscv.cpp ****                 MemoryAllocator* memoryAllocator= MemoryAllocator::createAllocator();
  86:src/riscv.cpp ****                 void* ret = memoryAllocator->alloc(size);
  87:src/riscv.cpp ****                 __asm__ volatile("sd %[a], 10 * 8(s0)" : : [a] "r"(ret));
  88:src/riscv.cpp ****                 //__asm__ volatile("mv a0,%0"::"r"(ret));
  89:src/riscv.cpp ****                 uint64 volatile sepc = Riscv::r_sepc()+4;
  90:src/riscv.cpp ****                 Riscv::w_sepc(sepc);
  91:src/riscv.cpp ****                 break;
  92:src/riscv.cpp ****             }
  93:src/riscv.cpp ****             case(0x02): { //mem_free
  94:src/riscv.cpp ****                 void *free=(void*)a1;
  95:src/riscv.cpp ****                 //__asm__ volatile("mv %0, a1":"=r"(free));
  96:src/riscv.cpp ****                 MemoryAllocator* memoryAllocator= MemoryAllocator::createAllocator();
  97:src/riscv.cpp ****                 int ret = memoryAllocator->dealloc(free);
  98:src/riscv.cpp ****                 //__asm__ volatile("mv a0,%0"::"r"(ret));
  99:src/riscv.cpp ****                 __asm__ volatile("sd %[a], 10 * 8(s0)" : : [a] "r"(ret));
 100:src/riscv.cpp ****                 uint64 volatile sepc = Riscv::r_sepc()+4;
 101:src/riscv.cpp ****                 Riscv::w_sepc(sepc);
 102:src/riscv.cpp ****                 break;
 103:src/riscv.cpp ****             }
 104:src/riscv.cpp ****           case(0x11):{
 105:src/riscv.cpp ****             //thread_create
 106:src/riscv.cpp ****               int  ret;
 107:src/riscv.cpp **** //              TCB**  handle;
 108:src/riscv.cpp **** //              __asm__ volatile ("mv %0, a1":"=r"(handle));
 109:src/riscv.cpp **** //              TCB::ThreadFunction   start;
 110:src/riscv.cpp **** //              __asm__ volatile("mv %0, a2":"=r"(start));
 111:src/riscv.cpp **** //              void* arg;
 112:src/riscv.cpp **** //              __asm__ volatile("mv %0, a3":"=r"(arg));
 113:src/riscv.cpp **** //              uint64*   stack;
 114:src/riscv.cpp **** //              //__asm__ volatile("mv %0, a4":"=r"(stack));
 115:src/riscv.cpp **** //              uint64 volatile a4;
 116:src/riscv.cpp **** //                __asm__ volatile("mv %[savedValue], a4" :  [savedValue] "=r" (a4));
 117:src/riscv.cpp **** //              stack=(uint64*) a4;
 118:src/riscv.cpp ****               TCB** handle=(TCB**)a1;
 119:src/riscv.cpp **** 
 120:src/riscv.cpp ****               TCB::ThreadFunction start=(TCB::ThreadFunction)a2;
 121:src/riscv.cpp **** 
 122:src/riscv.cpp ****               void* arg=(void*)a3;
 123:src/riscv.cpp **** 
 124:src/riscv.cpp ****               uint64* stack=(uint64*)a4;
 125:src/riscv.cpp **** 
 126:src/riscv.cpp **** 
GAS LISTING /tmp/ccxYSQ9Z.s 			page 12


 127:src/riscv.cpp **** 
 128:src/riscv.cpp **** 
 129:src/riscv.cpp ****               *handle=TCB::createThread(start,arg,stack);
 130:src/riscv.cpp **** 
 131:src/riscv.cpp ****               if(!handle){
 132:src/riscv.cpp ****                   ret=-1;
 133:src/riscv.cpp ****               }else{
 134:src/riscv.cpp ****                   ret=0;
 135:src/riscv.cpp ****               }
 136:src/riscv.cpp ****               __asm__ volatile("mv a0,%0"::"r"(ret));
 137:src/riscv.cpp ****               uint64 volatile sepc = Riscv::r_sepc()+4;
 138:src/riscv.cpp ****               Riscv::w_sepc(sepc);
 139:src/riscv.cpp ****               break;
 140:src/riscv.cpp ****           }
 141:src/riscv.cpp ****           case(0x12):{
 142:src/riscv.cpp ****             //thread exit
 143:src/riscv.cpp ****             uint64 volatile sepc = r_sepc() + 4;
 144:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 145:src/riscv.cpp ****             int ret=-1;
 146:src/riscv.cpp ****             TCB::running->setFinished(true);
 147:src/riscv.cpp ****             TCB::dispatch();
 148:src/riscv.cpp ****             __asm__ volatile("mv a0,%0"::"r"(ret));
 149:src/riscv.cpp ****              w_sstatus(sstatus);
 150:src/riscv.cpp ****               w_sepc(sepc);
 151:src/riscv.cpp ****             break;
 152:src/riscv.cpp ****           }
 153:src/riscv.cpp ****           case(0x13):{
 154:src/riscv.cpp ****             //thread dispatch
 155:src/riscv.cpp ****               uint64 volatile sepc = r_sepc() + 4;
 156:src/riscv.cpp ****               uint64 volatile sstatus = r_sstatus();
 157:src/riscv.cpp ****               TCB::dispatch();
 158:src/riscv.cpp ****               w_sstatus(sstatus);
 159:src/riscv.cpp ****               w_sepc(sepc);
 160:src/riscv.cpp ****               break;
 161:src/riscv.cpp ****           }
 162:src/riscv.cpp ****           case(0x21):{
 163:src/riscv.cpp ****             //sem open
 164:src/riscv.cpp ****              uint64 volatile sepc = r_sepc() + 4;
 165:src/riscv.cpp **** 
 166:src/riscv.cpp ****             int ret;
 167:src/riscv.cpp ****             SemaforKernel** handle=(SemaforKernel**)a1;
 168:src/riscv.cpp ****             unsigned init=(unsigned)a2;
 169:src/riscv.cpp **** 
 170:src/riscv.cpp ****             *handle=SemaforKernel::open(init);
 171:src/riscv.cpp **** 
 172:src/riscv.cpp ****               if(!*handle){
 173:src/riscv.cpp ****                   ret=-1;
 174:src/riscv.cpp ****               }else{
 175:src/riscv.cpp ****                   ret=0;
 176:src/riscv.cpp ****               }
 177:src/riscv.cpp ****               __asm__ volatile("mv a0,%0"::"r"(ret));
 178:src/riscv.cpp **** 
 179:src/riscv.cpp ****                w_sepc(sepc);
 180:src/riscv.cpp ****               break;
 181:src/riscv.cpp ****           }
 182:src/riscv.cpp ****           case(0x22):{
 183:src/riscv.cpp ****             //sem close
GAS LISTING /tmp/ccxYSQ9Z.s 			page 13


 184:src/riscv.cpp ****              uint64 volatile sepc = r_sepc() + 4;
 185:src/riscv.cpp **** 
 186:src/riscv.cpp ****              //int ret;
 187:src/riscv.cpp ****              sem_t handle=(sem_t)a1;
 188:src/riscv.cpp **** 
 189:src/riscv.cpp ****              handle->~SemaforKernel();
 190:src/riscv.cpp **** 
 191:src/riscv.cpp ****              //__asm__ volatile("mv a0,%0"::"r"(ret));
 192:src/riscv.cpp **** 
 193:src/riscv.cpp **** 
 194:src/riscv.cpp ****               w_sepc(sepc);
 195:src/riscv.cpp ****               break;
 196:src/riscv.cpp ****           }
 197:src/riscv.cpp ****           case(0x23):{
 198:src/riscv.cpp ****             //sem wait
 199:src/riscv.cpp ****              uint64 volatile sepc = r_sepc() + 4;
 200:src/riscv.cpp ****              uint64 volatile sstatus = r_sstatus();
 201:src/riscv.cpp **** 
 202:src/riscv.cpp ****             // int ret;
 203:src/riscv.cpp ****              sem_t handle=(sem_t)a1;
 204:src/riscv.cpp **** 
 205:src/riscv.cpp ****             handle->wait();
 206:src/riscv.cpp **** 
 207:src/riscv.cpp ****              //__asm__ volatile("mv a0,%0"::"r"(ret));
 208:src/riscv.cpp **** 
 209:src/riscv.cpp ****              w_sepc(sepc);
 210:src/riscv.cpp ****               w_sstatus(sstatus);
 211:src/riscv.cpp ****               break;
 212:src/riscv.cpp ****           }
 213:src/riscv.cpp ****           case(0x24):{
 214:src/riscv.cpp ****             //sem signal
 215:src/riscv.cpp ****              uint64 volatile sepc = r_sepc() + 4;
 216:src/riscv.cpp **** 
 217:src/riscv.cpp ****               //int ret;
 218:src/riscv.cpp ****              sem_t handle=(sem_t)a1;
 219:src/riscv.cpp **** 
 220:src/riscv.cpp ****              handle->signal();
 221:src/riscv.cpp **** 
 222:src/riscv.cpp ****              //__asm__ volatile("mv a0,%0"::"r"(ret));
 223:src/riscv.cpp **** 
 224:src/riscv.cpp ****               w_sepc(sepc);
 225:src/riscv.cpp ****               break;
 226:src/riscv.cpp ****           }
 227:src/riscv.cpp ****            case(0x41):{
 228:src/riscv.cpp ****                 uint64 volatile sepc = r_sepc()+4;
 229:src/riscv.cpp ****                 char  a=__getc();
 230:src/riscv.cpp ****                 //__asm__ volatile("mv a0, %0" : : "r" (a));
 231:src/riscv.cpp ****                  __asm__ volatile("sd %[a], 10 * 8(s0)" : : [a] "r"(a));
 232:src/riscv.cpp ****                 w_sepc(sepc);
 233:src/riscv.cpp ****                 break;
 234:src/riscv.cpp ****             }
 235:src/riscv.cpp ****             case(0x42):{
 236:src/riscv.cpp ****                 uint64  c = r_a1();
 237:src/riscv.cpp ****                 uint64 volatile sepc = r_sepc()+4;
 238:src/riscv.cpp ****                 __putc(c);
 239:src/riscv.cpp ****                 w_sepc(sepc);
 240:src/riscv.cpp ****                 break;
GAS LISTING /tmp/ccxYSQ9Z.s 			page 14


 241:src/riscv.cpp ****             }
 242:src/riscv.cpp **** 
 243:src/riscv.cpp ****         }
 244:src/riscv.cpp **** 
 245:src/riscv.cpp ****     } else if(scause == 0x8000000000000001UL)//BNT = 1, exception:no
 262              		.loc 1 245 12 is_stmt 1
 263              	.LBB206:
 264              	.LBB121:
 265 00ec 9307F0FF 		li	a5,-1
 266 00f0 9397F703 		slli	a5,a5,63
 267 00f4 93871700 		addi	a5,a5,1
 268 00f8 638AF43C 		beq	s1,a5,.L28
 269              	.LBE121:
 270              	.LBE206:
 246:src/riscv.cpp ****     {
 247:src/riscv.cpp ****         /*
 248:src/riscv.cpp ****          PCB::timeSliceCounter++;
 249:src/riscv.cpp ****          if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 250:src/riscv.cpp ****          {
 251:src/riscv.cpp ****              uint64 volatile sepc = r_sepc();
 252:src/riscv.cpp ****              uint64 volatile sstatus = r_sstatus();
 253:src/riscv.cpp ****              PCB::timeSliceCounter = 0;
 254:src/riscv.cpp ****              PCB::dispatch();
 255:src/riscv.cpp ****              sstatus = previousPrivilege(sstatus);
 256:src/riscv.cpp ****              w_sstatus(sstatus);
 257:src/riscv.cpp ****              w_sepc(sepc);
 258:src/riscv.cpp ****          }*/
 259:src/riscv.cpp ****         mc_sip(SIP_SSIP);
 260:src/riscv.cpp **** 
 261:src/riscv.cpp ****     }else if(scause == 0x8000000000000009UL){
 271              		.loc 1 261 11
 272              	.LBB207:
 273              	.LBB131:
 274              	.LBB122:
 275 00fc 9307F0FF 		li	a5,-1
 276 0100 9397F703 		slli	a5,a5,63
 277 0104 93879700 		addi	a5,a5,9
 278 0108 6388F43C 		beq	s1,a5,.L29
 279              	.LBB123:
 262:src/riscv.cpp **** 
 263:src/riscv.cpp ****         console_handler();
 264:src/riscv.cpp ****     }else{
 265:src/riscv.cpp ****         uint64 sepc = r_sepc();
 280              		.loc 1 265 9
 281              	.LBB124:
 282              	.LBB125:
 117:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 283              		.loc 2 117 5
 118:src/../h/riscv.hpp ****     return sepc;
 284              		.loc 2 118 5
 118:src/../h/riscv.hpp ****     return sepc;
 285              		.loc 2 118 64 is_stmt 0
 286              	#APP
 287              	# 118 "src/../h/riscv.hpp" 1
 288              		csrr a5, sepc
 289              	# 0 "" 2
 290              	#NO_APP
GAS LISTING /tmp/ccxYSQ9Z.s 			page 15


 291 0110 2330F4FA 		sd	a5,-96(s0)
 119:src/../h/riscv.hpp **** }
 292              		.loc 2 119 5 is_stmt 1
 119:src/../h/riscv.hpp **** }
 293              		.loc 2 119 12 is_stmt 0
 294 0114 833904FA 		ld	s3,-96(s0)
 295              	.LVL3:
 296              	.LBE125:
 297              	.LBE124:
 266:src/riscv.cpp ****         uint64 stval = r_stval();
 298              		.loc 1 266 9 is_stmt 1
 299              	.LBB126:
 300              	.LBB127:
 141:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 301              		.loc 2 141 5
 142:src/../h/riscv.hpp ****     return stval;
 302              		.loc 2 142 5
 142:src/../h/riscv.hpp ****     return stval;
 303              		.loc 2 142 68 is_stmt 0
 304              	#APP
 305              	# 142 "src/../h/riscv.hpp" 1
 306              		csrr a5, stval
 307              	# 0 "" 2
 308              	#NO_APP
 309 011c 233CF4F8 		sd	a5,-104(s0)
 143:src/../h/riscv.hpp **** }
 310              		.loc 2 143 5 is_stmt 1
 143:src/../h/riscv.hpp **** }
 311              		.loc 2 143 12 is_stmt 0
 312 0120 033984F9 		ld	s2,-104(s0)
 313              	.LVL4:
 314              	.LBE127:
 315              	.LBE126:
 267:src/riscv.cpp **** 
 268:src/riscv.cpp ****         printString("scause: 0x");
 316              		.loc 1 268 9 is_stmt 1
 317              		.loc 1 268 20 is_stmt 0
 318 0124 17050000 		lla	a0,.LC0
 318      13050500 
 319 012c 97000000 		call	_Z11printStringPKc@plt
 319      E7800000 
 320              	.LVL5:
 269:src/riscv.cpp ****         printInt(scause, 16);
 321              		.loc 1 269 9 is_stmt 1
 322              		.loc 1 269 17 is_stmt 0
 323 0134 13060000 		li	a2,0
 324 0138 93050001 		li	a1,16
 325 013c 1B850400 		sext.w	a0,s1
 326 0140 97000000 		call	_Z8printIntiii@plt
 326      E7800000 
 327              	.LVL6:
 270:src/riscv.cpp ****         printString("\n");
 328              		.loc 1 270 9 is_stmt 1
 329              		.loc 1 270 20 is_stmt 0
 330 0148 17050000 		lla	a0,.LC1
 330      13050500 
 331 0150 97000000 		call	_Z11printStringPKc@plt
GAS LISTING /tmp/ccxYSQ9Z.s 			page 16


 331      E7800000 
 332              	.LVL7:
 271:src/riscv.cpp **** 
 272:src/riscv.cpp ****         printString("sepc: 0x");
 333              		.loc 1 272 9 is_stmt 1
 334              		.loc 1 272 20 is_stmt 0
 335 0158 17050000 		lla	a0,.LC2
 335      13050500 
 336 0160 97000000 		call	_Z11printStringPKc@plt
 336      E7800000 
 337              	.LVL8:
 273:src/riscv.cpp ****         printInt(sepc, 16);
 338              		.loc 1 273 9 is_stmt 1
 339              		.loc 1 273 17 is_stmt 0
 340 0168 13060000 		li	a2,0
 341 016c 93050001 		li	a1,16
 342 0170 1B850900 		sext.w	a0,s3
 343 0174 97000000 		call	_Z8printIntiii@plt
 343      E7800000 
 344              	.LVL9:
 274:src/riscv.cpp ****         printString("\n");
 345              		.loc 1 274 9 is_stmt 1
 346              		.loc 1 274 20 is_stmt 0
 347 017c 17050000 		lla	a0,.LC1
 347      13050500 
 348 0184 97000000 		call	_Z11printStringPKc@plt
 348      E7800000 
 349              	.LVL10:
 275:src/riscv.cpp **** 
 276:src/riscv.cpp ****         printString("stval: 0x");
 350              		.loc 1 276 9 is_stmt 1
 351              		.loc 1 276 20 is_stmt 0
 352 018c 17050000 		lla	a0,.LC3
 352      13050500 
 353 0194 97000000 		call	_Z11printStringPKc@plt
 353      E7800000 
 354              	.LVL11:
 277:src/riscv.cpp ****         printInt(stval, 16);
 355              		.loc 1 277 9 is_stmt 1
 356              		.loc 1 277 17 is_stmt 0
 357 019c 13060000 		li	a2,0
 358 01a0 93050001 		li	a1,16
 359 01a4 1B050900 		sext.w	a0,s2
 360 01a8 97000000 		call	_Z8printIntiii@plt
 360      E7800000 
 361              	.LVL12:
 278:src/riscv.cpp ****         printString("\n");
 362              		.loc 1 278 9 is_stmt 1
 363              		.loc 1 278 20 is_stmt 0
 364 01b0 17050000 		lla	a0,.LC1
 364      13050500 
 365 01b8 97000000 		call	_Z11printStringPKc@plt
 365      E7800000 
 366              	.LVL13:
 367              	.L7:
 368              	.LBE123:
 369              	.LBE122:
GAS LISTING /tmp/ccxYSQ9Z.s 			page 17


 370              	.LBE131:
 371              	.LBE207:
 279:src/riscv.cpp ****     }
 280:src/riscv.cpp **** 
 281:src/riscv.cpp ****     // Očisti SSIP bit za svaki prekid koji je ušao (uključujući ecall)
 282:src/riscv.cpp ****     mc_sip(SIP_SSIP);
 372              		.loc 1 282 5 is_stmt 1
 373              	.LBB208:
 374              	.LBB209:
 158:src/../h/riscv.hpp **** }
 375              		.loc 2 158 5
 158:src/../h/riscv.hpp **** }
 376              		.loc 2 158 64 is_stmt 0
 377 01c0 93072000 		li	a5,2
 378              	#APP
 379              	# 158 "src/../h/riscv.hpp" 1
 380              		csrc sip, a5
 381              	# 0 "" 2
 382              	.LVL14:
 383              	#NO_APP
 384              	.LBE209:
 385              	.LBE208:
 283:src/riscv.cpp **** }
 386              		.loc 1 283 1
 387 01c8 83308117 		ld	ra,376(sp)
 388              		.cfi_remember_state
 389              		.cfi_restore 1
 390 01cc 03340117 		ld	s0,368(sp)
 391              		.cfi_restore 8
 392              		.cfi_def_cfa 2, 384
 393 01d0 83348116 		ld	s1,360(sp)
 394              		.cfi_restore 9
 395 01d4 03390116 		ld	s2,352(sp)
 396              		.cfi_restore 18
 397 01d8 83398115 		ld	s3,344(sp)
 398              		.cfi_restore 19
 399 01dc 13010118 		addi	sp,sp,384
 400              		.cfi_def_cfa_offset 0
 401 01e0 67800000 		jr	ra
 402              	.LVL15:
 403              	.L27:
 404              		.cfi_restore_state
 405              	.LBB210:
 406              	.LBB132:
  79:src/riscv.cpp ****         switch (code){
 407              		.loc 1 79 9 is_stmt 1
  79:src/riscv.cpp ****         switch (code){
 408              		.loc 1 79 23 is_stmt 0
 409 01e4 833784FA 		ld	a5,-88(s0)
 410 01e8 9B870700 		sext.w	a5,a5
 411              	.LVL16:
  80:src/riscv.cpp ****             case (0x01):{ //mem_alloc
 412              		.loc 1 80 9 is_stmt 1
 413 01ec 13072004 		li	a4,66
 414 01f0 E368F7FC 		bgtu	a5,a4,.L7
 415 01f4 93972700 		slli	a5,a5,2
 416              	.LVL17:
GAS LISTING /tmp/ccxYSQ9Z.s 			page 18


 417 01f8 17070000 		lla	a4,.L9
 417      13070700 
 418 0200 B387E700 		add	a5,a5,a4
 419 0204 83A70700 		lw	a5,0(a5)
 420 0208 B387E700 		add	a5,a5,a4
 421 020c 67800700 		jr	a5
 422              		.section	.rodata
 423              		.align	2
 424              		.align	2
 425              	.L9:
 426 0000 00000000 		.word	.L7-.L9
 427 0004 00000000 		.word	.L19-.L9
 428 0008 00000000 		.word	.L18-.L9
 429 000c 00000000 		.word	.L7-.L9
 430 0010 00000000 		.word	.L7-.L9
 431 0014 00000000 		.word	.L7-.L9
 432 0018 00000000 		.word	.L7-.L9
 433 001c 00000000 		.word	.L7-.L9
 434 0020 00000000 		.word	.L7-.L9
 435 0024 00000000 		.word	.L7-.L9
 436 0028 00000000 		.word	.L7-.L9
 437 002c 00000000 		.word	.L7-.L9
 438 0030 00000000 		.word	.L7-.L9
 439 0034 00000000 		.word	.L7-.L9
 440 0038 00000000 		.word	.L7-.L9
 441 003c 00000000 		.word	.L7-.L9
 442 0040 00000000 		.word	.L7-.L9
 443 0044 00000000 		.word	.L17-.L9
 444 0048 00000000 		.word	.L16-.L9
 445 004c 00000000 		.word	.L15-.L9
 446 0050 00000000 		.word	.L7-.L9
 447 0054 00000000 		.word	.L7-.L9
 448 0058 00000000 		.word	.L7-.L9
 449 005c 00000000 		.word	.L7-.L9
 450 0060 00000000 		.word	.L7-.L9
 451 0064 00000000 		.word	.L7-.L9
 452 0068 00000000 		.word	.L7-.L9
 453 006c 00000000 		.word	.L7-.L9
 454 0070 00000000 		.word	.L7-.L9
 455 0074 00000000 		.word	.L7-.L9
 456 0078 00000000 		.word	.L7-.L9
 457 007c 00000000 		.word	.L7-.L9
 458 0080 00000000 		.word	.L7-.L9
 459 0084 00000000 		.word	.L14-.L9
 460 0088 00000000 		.word	.L13-.L9
 461 008c 00000000 		.word	.L12-.L9
 462 0090 00000000 		.word	.L11-.L9
 463 0094 00000000 		.word	.L7-.L9
 464 0098 00000000 		.word	.L7-.L9
 465 009c 00000000 		.word	.L7-.L9
 466 00a0 00000000 		.word	.L7-.L9
 467 00a4 00000000 		.word	.L7-.L9
 468 00a8 00000000 		.word	.L7-.L9
 469 00ac 00000000 		.word	.L7-.L9
 470 00b0 00000000 		.word	.L7-.L9
 471 00b4 00000000 		.word	.L7-.L9
 472 00b8 00000000 		.word	.L7-.L9
GAS LISTING /tmp/ccxYSQ9Z.s 			page 19


 473 00bc 00000000 		.word	.L7-.L9
 474 00c0 00000000 		.word	.L7-.L9
 475 00c4 00000000 		.word	.L7-.L9
 476 00c8 00000000 		.word	.L7-.L9
 477 00cc 00000000 		.word	.L7-.L9
 478 00d0 00000000 		.word	.L7-.L9
 479 00d4 00000000 		.word	.L7-.L9
 480 00d8 00000000 		.word	.L7-.L9
 481 00dc 00000000 		.word	.L7-.L9
 482 00e0 00000000 		.word	.L7-.L9
 483 00e4 00000000 		.word	.L7-.L9
 484 00e8 00000000 		.word	.L7-.L9
 485 00ec 00000000 		.word	.L7-.L9
 486 00f0 00000000 		.word	.L7-.L9
 487 00f4 00000000 		.word	.L7-.L9
 488 00f8 00000000 		.word	.L7-.L9
 489 00fc 00000000 		.word	.L7-.L9
 490 0100 00000000 		.word	.L7-.L9
 491 0104 00000000 		.word	.L10-.L9
 492 0108 00000000 		.word	.L8-.L9
 493              		.text
 494              	.L19:
 495              	.LBB133:
  81:src/riscv.cpp ****                 size_t num=(size_t)a1;
 496              		.loc 1 81 13
  81:src/riscv.cpp ****                 size_t num=(size_t)a1;
 497              		.loc 1 81 25
 498              	.LBB134:
  82:src/riscv.cpp ****                 //__asm__ volatile("mv %0,a1":"=r"(num));
 499              		.loc 1 82 17
  82:src/riscv.cpp ****                 //__asm__ volatile("mv %0,a1":"=r"(num));
 500              		.loc 1 82 36 is_stmt 0
 501 0210 833484FC 		ld	s1,-56(s0)
 502              	.LVL18:
  84:src/riscv.cpp ****                 MemoryAllocator* memoryAllocator= MemoryAllocator::createAllocator();
 503              		.loc 1 84 17 is_stmt 1
  84:src/riscv.cpp ****                 MemoryAllocator* memoryAllocator= MemoryAllocator::createAllocator();
 504              		.loc 1 84 24 is_stmt 0
 505 0214 93946400 		slli	s1,s1,6
 506              	.LVL19:
  85:src/riscv.cpp ****                 void* ret = memoryAllocator->alloc(size);
 507              		.loc 1 85 17 is_stmt 1
  85:src/riscv.cpp ****                 void* ret = memoryAllocator->alloc(size);
 508              		.loc 1 85 83 is_stmt 0
 509 0218 97000000 		call	_ZN15MemoryAllocator15createAllocatorEv@plt
 509      E7800000 
 510              	.LVL20:
  86:src/riscv.cpp ****                 __asm__ volatile("sd %[a], 10 * 8(s0)" : : [a] "r"(ret));
 511              		.loc 1 86 17 is_stmt 1
  86:src/riscv.cpp ****                 __asm__ volatile("sd %[a], 10 * 8(s0)" : : [a] "r"(ret));
 512              		.loc 1 86 51 is_stmt 0
 513 0220 93850400 		mv	a1,s1
 514 0224 97000000 		call	_ZN15MemoryAllocator5allocEm@plt
 514      E7800000 
 515              	.LVL21:
  87:src/riscv.cpp ****                 //__asm__ volatile("mv a0,%0"::"r"(ret));
 516              		.loc 1 87 17 is_stmt 1
GAS LISTING /tmp/ccxYSQ9Z.s 			page 20


  87:src/riscv.cpp ****                 //__asm__ volatile("mv a0,%0"::"r"(ret));
 517              		.loc 1 87 73 is_stmt 0
 518              	#APP
 519              	# 87 "src/riscv.cpp" 1
  89:src/riscv.cpp ****                 Riscv::w_sepc(sepc);
 520              		sd a0, 10 * 8(s0)
 521              	# 0 "" 2
 522              		.loc 1 89 17 is_stmt 1
 523              	#NO_APP
 524              	.LBB135:
 525              	.LBB136:
 117:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 526              		.loc 2 117 5
 118:src/../h/riscv.hpp ****     return sepc;
 527              		.loc 2 118 5
 118:src/../h/riscv.hpp ****     return sepc;
 528              		.loc 2 118 64 is_stmt 0
 529              	#APP
 530              	# 118 "src/../h/riscv.hpp" 1
 531              		csrr a5, sepc
 532              	# 0 "" 2
 533              	#NO_APP
 534 0234 2330F4F2 		sd	a5,-224(s0)
 119:src/../h/riscv.hpp **** }
 535              		.loc 2 119 5 is_stmt 1
 119:src/../h/riscv.hpp **** }
 536              		.loc 2 119 12 is_stmt 0
 537 0238 833704F2 		ld	a5,-224(s0)
 538              	.LBE136:
 539              	.LBE135:
  89:src/riscv.cpp ****                 Riscv::w_sepc(sepc);
 540              		.loc 1 89 55
 541 023c 93874700 		addi	a5,a5,4
  89:src/riscv.cpp ****                 Riscv::w_sepc(sepc);
 542              		.loc 1 89 56
 543 0240 2330F4E8 		sd	a5,-384(s0)
  90:src/riscv.cpp ****                 break;
 544              		.loc 1 90 17 is_stmt 1
  90:src/riscv.cpp ****                 break;
 545              		.loc 1 90 30 is_stmt 0
 546 0244 833704E8 		ld	a5,-384(s0)
 547              	.LVL22:
 548              	.LBB137:
 549              	.LBB138:
 124:src/../h/riscv.hpp **** }
 550              		.loc 2 124 5 is_stmt 1
 124:src/../h/riscv.hpp **** }
 551              		.loc 2 124 65 is_stmt 0
 552              	#APP
 553              	# 124 "src/../h/riscv.hpp" 1
 125:src/../h/riscv.hpp **** 
 554              		csrw sepc, a5
 555              	# 0 "" 2
 556              		.loc 2 125 1
 557              	#NO_APP
 558 024c 6FF05FF7 		j	.L7
 559              	.LVL23:
GAS LISTING /tmp/ccxYSQ9Z.s 			page 21


 560              	.L18:
 561              	.LBE138:
 562              	.LBE137:
 563              	.LBE134:
  93:src/riscv.cpp ****                 void *free=(void*)a1;
 564              		.loc 1 93 13 is_stmt 1
  93:src/riscv.cpp ****                 void *free=(void*)a1;
 565              		.loc 1 93 25
 566              	.LBB139:
  94:src/riscv.cpp ****                 //__asm__ volatile("mv %0, a1":"=r"(free));
 567              		.loc 1 94 17
  94:src/riscv.cpp ****                 //__asm__ volatile("mv %0, a1":"=r"(free));
 568              		.loc 1 94 35 is_stmt 0
 569 0250 833484FC 		ld	s1,-56(s0)
 570              	.LVL24:
  96:src/riscv.cpp ****                 int ret = memoryAllocator->dealloc(free);
 571              		.loc 1 96 17 is_stmt 1
  96:src/riscv.cpp ****                 int ret = memoryAllocator->dealloc(free);
 572              		.loc 1 96 83 is_stmt 0
 573 0254 97000000 		call	_ZN15MemoryAllocator15createAllocatorEv@plt
 573      E7800000 
 574              	.LVL25:
  97:src/riscv.cpp ****                 //__asm__ volatile("mv a0,%0"::"r"(ret));
 575              		.loc 1 97 17 is_stmt 1
  97:src/riscv.cpp ****                 //__asm__ volatile("mv a0,%0"::"r"(ret));
 576              		.loc 1 97 51 is_stmt 0
 577 025c 93850400 		mv	a1,s1
 578 0260 97000000 		call	_ZN15MemoryAllocator7deallocEPv@plt
 578      E7800000 
 579              	.LVL26:
  99:src/riscv.cpp ****                 uint64 volatile sepc = Riscv::r_sepc()+4;
 580              		.loc 1 99 17 is_stmt 1
  99:src/riscv.cpp ****                 uint64 volatile sepc = Riscv::r_sepc()+4;
 581              		.loc 1 99 73 is_stmt 0
 582              	#APP
 583              	# 99 "src/riscv.cpp" 1
 100:src/riscv.cpp ****                 Riscv::w_sepc(sepc);
 584              		sd a0, 10 * 8(s0)
 585              	# 0 "" 2
 586              		.loc 1 100 17 is_stmt 1
 587              	#NO_APP
 588              	.LBB140:
 589              	.LBB141:
 117:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 590              		.loc 2 117 5
 118:src/../h/riscv.hpp ****     return sepc;
 591              		.loc 2 118 5
 118:src/../h/riscv.hpp ****     return sepc;
 592              		.loc 2 118 64 is_stmt 0
 593              	#APP
 594              	# 118 "src/../h/riscv.hpp" 1
 595              		csrr a5, sepc
 596              	# 0 "" 2
 597              	#NO_APP
 598 0270 2334F4F2 		sd	a5,-216(s0)
 119:src/../h/riscv.hpp **** }
 599              		.loc 2 119 5 is_stmt 1
GAS LISTING /tmp/ccxYSQ9Z.s 			page 22


 119:src/../h/riscv.hpp **** }
 600              		.loc 2 119 12 is_stmt 0
 601 0274 833784F2 		ld	a5,-216(s0)
 602              	.LBE141:
 603              	.LBE140:
 100:src/riscv.cpp ****                 Riscv::w_sepc(sepc);
 604              		.loc 1 100 55
 605 0278 93874700 		addi	a5,a5,4
 100:src/riscv.cpp ****                 Riscv::w_sepc(sepc);
 606              		.loc 1 100 56
 607 027c 2334F4E8 		sd	a5,-376(s0)
 101:src/riscv.cpp ****                 break;
 608              		.loc 1 101 17 is_stmt 1
 101:src/riscv.cpp ****                 break;
 609              		.loc 1 101 30 is_stmt 0
 610 0280 833784E8 		ld	a5,-376(s0)
 611              	.LVL27:
 612              	.LBB142:
 613              	.LBB143:
 124:src/../h/riscv.hpp **** }
 614              		.loc 2 124 5 is_stmt 1
 124:src/../h/riscv.hpp **** }
 615              		.loc 2 124 65 is_stmt 0
 616              	#APP
 617              	# 124 "src/../h/riscv.hpp" 1
 125:src/../h/riscv.hpp **** 
 618              		csrw sepc, a5
 619              	# 0 "" 2
 620              		.loc 2 125 1
 621              	#NO_APP
 622 0288 6FF09FF3 		j	.L7
 623              	.LVL28:
 624              	.L17:
 625              	.LBE143:
 626              	.LBE142:
 627              	.LBE139:
 104:src/riscv.cpp ****             //thread_create
 628              		.loc 1 104 11 is_stmt 1
 104:src/riscv.cpp ****             //thread_create
 629              		.loc 1 104 22
 630              	.LBB144:
 106:src/riscv.cpp **** //              TCB**  handle;
 631              		.loc 1 106 15
 118:src/riscv.cpp **** 
 632              		.loc 1 118 15
 118:src/riscv.cpp **** 
 633              		.loc 1 118 35 is_stmt 0
 634 028c 833484FC 		ld	s1,-56(s0)
 635              	.LVL29:
 120:src/riscv.cpp **** 
 636              		.loc 1 120 15 is_stmt 1
 120:src/riscv.cpp **** 
 637              		.loc 1 120 62 is_stmt 0
 638 0290 033504FC 		ld	a0,-64(s0)
 639              	.LVL30:
 122:src/riscv.cpp **** 
 640              		.loc 1 122 15 is_stmt 1
GAS LISTING /tmp/ccxYSQ9Z.s 			page 23


 122:src/riscv.cpp **** 
 641              		.loc 1 122 32 is_stmt 0
 642 0294 833584FB 		ld	a1,-72(s0)
 643              	.LVL31:
 124:src/riscv.cpp **** 
 644              		.loc 1 124 15 is_stmt 1
 124:src/riscv.cpp **** 
 645              		.loc 1 124 38 is_stmt 0
 646 0298 033604FB 		ld	a2,-80(s0)
 647              	.LVL32:
 129:src/riscv.cpp **** 
 648              		.loc 1 129 15 is_stmt 1
 129:src/riscv.cpp **** 
 649              		.loc 1 129 40 is_stmt 0
 650 029c 93060000 		li	a3,0
 651 02a0 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pmb@plt
 651      E7800000 
 652              	.LVL33:
 129:src/riscv.cpp **** 
 653              		.loc 1 129 22
 654 02a8 23B0A400 		sd	a0,0(s1)
 131:src/riscv.cpp ****                   ret=-1;
 655              		.loc 1 131 15 is_stmt 1
 656 02ac 63960402 		bnez	s1,.L24
 132:src/riscv.cpp ****               }else{
 657              		.loc 1 132 22 is_stmt 0
 658 02b0 9307F0FF 		li	a5,-1
 659              	.L20:
 660              	.LVL34:
 136:src/riscv.cpp ****               uint64 volatile sepc = Riscv::r_sepc()+4;
 661              		.loc 1 136 15 is_stmt 1
 136:src/riscv.cpp ****               uint64 volatile sepc = Riscv::r_sepc()+4;
 662              		.loc 1 136 53 is_stmt 0
 663              	#APP
 664              	# 136 "src/riscv.cpp" 1
 137:src/riscv.cpp ****               Riscv::w_sepc(sepc);
 665              		mv a0,a5
 666              	# 0 "" 2
 667              		.loc 1 137 15 is_stmt 1
 668              	#NO_APP
 669              	.LBB145:
 670              	.LBB146:
 117:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 671              		.loc 2 117 5
 118:src/../h/riscv.hpp ****     return sepc;
 672              		.loc 2 118 5
 118:src/../h/riscv.hpp ****     return sepc;
 673              		.loc 2 118 64 is_stmt 0
 674              	#APP
 675              	# 118 "src/../h/riscv.hpp" 1
 676              		csrr a5, sepc
 677              	# 0 "" 2
 678              	.LVL35:
 679              	#NO_APP
 680 02bc 2338F4F2 		sd	a5,-208(s0)
 119:src/../h/riscv.hpp **** }
 681              		.loc 2 119 5 is_stmt 1
GAS LISTING /tmp/ccxYSQ9Z.s 			page 24


 119:src/../h/riscv.hpp **** }
 682              		.loc 2 119 12 is_stmt 0
 683 02c0 833704F3 		ld	a5,-208(s0)
 684              	.LBE146:
 685              	.LBE145:
 137:src/riscv.cpp ****               Riscv::w_sepc(sepc);
 686              		.loc 1 137 53
 687 02c4 93874700 		addi	a5,a5,4
 137:src/riscv.cpp ****               Riscv::w_sepc(sepc);
 688              		.loc 1 137 54
 689 02c8 2338F4E8 		sd	a5,-368(s0)
 138:src/riscv.cpp ****               break;
 690              		.loc 1 138 15 is_stmt 1
 138:src/riscv.cpp ****               break;
 691              		.loc 1 138 28 is_stmt 0
 692 02cc 833704E9 		ld	a5,-368(s0)
 693              	.LVL36:
 694              	.LBB147:
 695              	.LBB148:
 124:src/../h/riscv.hpp **** }
 696              		.loc 2 124 5 is_stmt 1
 124:src/../h/riscv.hpp **** }
 697              		.loc 2 124 65 is_stmt 0
 698              	#APP
 699              	# 124 "src/../h/riscv.hpp" 1
 125:src/../h/riscv.hpp **** 
 700              		csrw sepc, a5
 701              	# 0 "" 2
 702              		.loc 2 125 1
 703              	#NO_APP
 704 02d4 6FF0DFEE 		j	.L7
 705              	.LVL37:
 706              	.L24:
 707              	.LBE148:
 708              	.LBE147:
 134:src/riscv.cpp ****               }
 709              		.loc 1 134 22
 710 02d8 93070000 		li	a5,0
 711 02dc 6FF09FFD 		j	.L20
 712              	.LVL38:
 713              	.L16:
 714              	.LBE144:
 141:src/riscv.cpp ****             //thread exit
 715              		.loc 1 141 11 is_stmt 1
 141:src/riscv.cpp ****             //thread exit
 716              		.loc 1 141 22
 717              	.LBB149:
 143:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 718              		.loc 1 143 13
 719              	.LBB150:
 720              	.LBB151:
 117:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 721              		.loc 2 117 5
 118:src/../h/riscv.hpp ****     return sepc;
 722              		.loc 2 118 5
 118:src/../h/riscv.hpp ****     return sepc;
 723              		.loc 2 118 64 is_stmt 0
GAS LISTING /tmp/ccxYSQ9Z.s 			page 25


 724              	#APP
 725              	# 118 "src/../h/riscv.hpp" 1
 726              		csrr a5, sepc
 727              	# 0 "" 2
 728              	#NO_APP
 729 02e4 2330F4F4 		sd	a5,-192(s0)
 119:src/../h/riscv.hpp **** }
 730              		.loc 2 119 5 is_stmt 1
 119:src/../h/riscv.hpp **** }
 731              		.loc 2 119 12 is_stmt 0
 732 02e8 833704F4 		ld	a5,-192(s0)
 733              	.LBE151:
 734              	.LBE150:
 143:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 735              		.loc 1 143 45
 736 02ec 93874700 		addi	a5,a5,4
 143:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 737              		.loc 1 143 47
 738 02f0 233CF4E8 		sd	a5,-360(s0)
 144:src/riscv.cpp ****             int ret=-1;
 739              		.loc 1 144 13 is_stmt 1
 740              	.LBB152:
 741              	.LBB153:
 185:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 742              		.loc 2 185 5
 186:src/../h/riscv.hpp ****     return sstatus;
 743              		.loc 2 186 5
 186:src/../h/riscv.hpp ****     return sstatus;
 744              		.loc 2 186 76 is_stmt 0
 745              	#APP
 746              	# 186 "src/../h/riscv.hpp" 1
 747              		csrr a5, sstatus
 748              	# 0 "" 2
 749              	#NO_APP
 750 02f8 233CF4F2 		sd	a5,-200(s0)
 187:src/../h/riscv.hpp **** }
 751              		.loc 2 187 5 is_stmt 1
 187:src/../h/riscv.hpp **** }
 752              		.loc 2 187 12 is_stmt 0
 753 02fc 833784F3 		ld	a5,-200(s0)
 754              	.LBE153:
 755              	.LBE152:
 144:src/riscv.cpp ****             int ret=-1;
 756              		.loc 1 144 49
 757 0300 2330F4EA 		sd	a5,-352(s0)
 145:src/riscv.cpp ****             TCB::running->setFinished(true);
 758              		.loc 1 145 13 is_stmt 1
 759              	.LVL39:
 146:src/riscv.cpp ****             TCB::dispatch();
 760              		.loc 1 146 13
 146:src/riscv.cpp ****             TCB::dispatch();
 761              		.loc 1 146 38 is_stmt 0
 762 0304 97070000 		la	a5,_ZN3TCB7runningE
 762      83B70700 
 763 030c 83B70700 		ld	a5,0(a5)
 764              	.LVL40:
 765              	.LBB154:
GAS LISTING /tmp/ccxYSQ9Z.s 			page 26


 766              	.LBB155:
 767              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by os on 3/3/25.
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** //Thread Control Block
   5:src/../h/tcb.hpp **** #ifndef _TCB_H
   6:src/../h/tcb.hpp **** #define _TCB_H
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** #include "../h/scheduler.hpp"
  10:src/../h/tcb.hpp **** #include "../h/syscall_c.hpp"
  11:src/../h/tcb.hpp **** 
  12:src/../h/tcb.hpp **** 
  13:src/../h/tcb.hpp **** //this is thread control block,information about every created thread
  14:src/../h/tcb.hpp **** class TCB {
  15:src/../h/tcb.hpp ****   public:
  16:src/../h/tcb.hpp **** 
  17:src/../h/tcb.hpp ****     ~TCB();
  18:src/../h/tcb.hpp **** 
  19:src/../h/tcb.hpp ****     friend class SemaforKernel;
  20:src/../h/tcb.hpp **** 
  21:src/../h/tcb.hpp ****     using ThreadFunction=void (*)(void*);
  22:src/../h/tcb.hpp **** 
  23:src/../h/tcb.hpp ****     bool isFinished() const{ return finished; }
  24:src/../h/tcb.hpp **** 
  25:src/../h/tcb.hpp ****     void setFinished(bool finish){ finished=finish; }
 768              		.loc 3 25 36 is_stmt 1
 769              		.loc 3 25 44 is_stmt 0
 770 0310 13071000 		li	a4,1
 771 0314 2384E702 		sb	a4,40(a5)
 772              	.LVL41:
 773              	.LBE155:
 774              	.LBE154:
 147:src/riscv.cpp ****             __asm__ volatile("mv a0,%0"::"r"(ret));
 775              		.loc 1 147 13 is_stmt 1
 147:src/riscv.cpp ****             __asm__ volatile("mv a0,%0"::"r"(ret));
 776              		.loc 1 147 26 is_stmt 0
 777 0318 97000000 		call	_ZN3TCB8dispatchEv@plt
 777      E7800000 
 778              	.LVL42:
 148:src/riscv.cpp ****              w_sstatus(sstatus);
 779              		.loc 1 148 13 is_stmt 1
 148:src/riscv.cpp ****              w_sstatus(sstatus);
 780              		.loc 1 148 51 is_stmt 0
 781 0320 9307F0FF 		li	a5,-1
 782              	#APP
 783              	# 148 "src/riscv.cpp" 1
 149:src/riscv.cpp ****               w_sepc(sepc);
 784              		mv a0,a5
 785              	# 0 "" 2
 786              		.loc 1 149 14 is_stmt 1
 149:src/riscv.cpp ****               w_sepc(sepc);
 787              		.loc 1 149 23 is_stmt 0
 788              	#NO_APP
 789 0328 833704EA 		ld	a5,-352(s0)
 790              	.LVL43:
GAS LISTING /tmp/ccxYSQ9Z.s 			page 27


 791              	.LBB156:
 792              	.LBB157:
 192:src/../h/riscv.hpp **** }
 793              		.loc 2 192 5 is_stmt 1
 192:src/../h/riscv.hpp **** }
 794              		.loc 2 192 77 is_stmt 0
 795              	#APP
 796              	# 192 "src/../h/riscv.hpp" 1
 797              		csrw sstatus, a5
 798              	# 0 "" 2
 799              	.LVL44:
 800              	#NO_APP
 801              	.LBE157:
 802              	.LBE156:
 150:src/riscv.cpp ****             break;
 803              		.loc 1 150 15 is_stmt 1
 150:src/riscv.cpp ****             break;
 804              		.loc 1 150 21 is_stmt 0
 805 0330 833784E9 		ld	a5,-360(s0)
 806              	.LVL45:
 807              	.LBB158:
 808              	.LBB159:
 124:src/../h/riscv.hpp **** }
 809              		.loc 2 124 5 is_stmt 1
 124:src/../h/riscv.hpp **** }
 810              		.loc 2 124 65 is_stmt 0
 811              	#APP
 812              	# 124 "src/../h/riscv.hpp" 1
 125:src/../h/riscv.hpp **** 
 813              		csrw sepc, a5
 814              	# 0 "" 2
 815              		.loc 2 125 1
 816              	#NO_APP
 817 0338 6FF09FE8 		j	.L7
 818              	.LVL46:
 819              	.L15:
 820              	.LBE159:
 821              	.LBE158:
 822              	.LBE149:
 153:src/riscv.cpp ****             //thread dispatch
 823              		.loc 1 153 11 is_stmt 1
 153:src/riscv.cpp ****             //thread dispatch
 824              		.loc 1 153 22
 825              	.LBB160:
 155:src/riscv.cpp ****               uint64 volatile sstatus = r_sstatus();
 826              		.loc 1 155 15
 827              	.LBB161:
 828              	.LBB162:
 117:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 829              		.loc 2 117 5
 118:src/../h/riscv.hpp ****     return sepc;
 830              		.loc 2 118 5
 118:src/../h/riscv.hpp ****     return sepc;
 831              		.loc 2 118 64 is_stmt 0
 832              	#APP
 833              	# 118 "src/../h/riscv.hpp" 1
 834              		csrr a5, sepc
GAS LISTING /tmp/ccxYSQ9Z.s 			page 28


 835              	# 0 "" 2
 836              	#NO_APP
 837 0340 2338F4F4 		sd	a5,-176(s0)
 119:src/../h/riscv.hpp **** }
 838              		.loc 2 119 5 is_stmt 1
 119:src/../h/riscv.hpp **** }
 839              		.loc 2 119 12 is_stmt 0
 840 0344 833704F5 		ld	a5,-176(s0)
 841              	.LBE162:
 842              	.LBE161:
 155:src/riscv.cpp ****               uint64 volatile sstatus = r_sstatus();
 843              		.loc 1 155 47
 844 0348 93874700 		addi	a5,a5,4
 155:src/riscv.cpp ****               uint64 volatile sstatus = r_sstatus();
 845              		.loc 1 155 49
 846 034c 2334F4EA 		sd	a5,-344(s0)
 156:src/riscv.cpp ****               TCB::dispatch();
 847              		.loc 1 156 15 is_stmt 1
 848              	.LBB163:
 849              	.LBB164:
 185:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 850              		.loc 2 185 5
 186:src/../h/riscv.hpp ****     return sstatus;
 851              		.loc 2 186 5
 186:src/../h/riscv.hpp ****     return sstatus;
 852              		.loc 2 186 76 is_stmt 0
 853              	#APP
 854              	# 186 "src/../h/riscv.hpp" 1
 855              		csrr a5, sstatus
 856              	# 0 "" 2
 857              	#NO_APP
 858 0354 2334F4F4 		sd	a5,-184(s0)
 187:src/../h/riscv.hpp **** }
 859              		.loc 2 187 5 is_stmt 1
 187:src/../h/riscv.hpp **** }
 860              		.loc 2 187 12 is_stmt 0
 861 0358 833784F4 		ld	a5,-184(s0)
 862              	.LBE164:
 863              	.LBE163:
 156:src/riscv.cpp ****               TCB::dispatch();
 864              		.loc 1 156 51
 865 035c 2338F4EA 		sd	a5,-336(s0)
 157:src/riscv.cpp ****               w_sstatus(sstatus);
 866              		.loc 1 157 15 is_stmt 1
 157:src/riscv.cpp ****               w_sstatus(sstatus);
 867              		.loc 1 157 28 is_stmt 0
 868 0360 97000000 		call	_ZN3TCB8dispatchEv@plt
 868      E7800000 
 869              	.LVL47:
 158:src/riscv.cpp ****               w_sepc(sepc);
 870              		.loc 1 158 15 is_stmt 1
 158:src/riscv.cpp ****               w_sepc(sepc);
 871              		.loc 1 158 24 is_stmt 0
 872 0368 833704EB 		ld	a5,-336(s0)
 873              	.LVL48:
 874              	.LBB165:
 875              	.LBB166:
GAS LISTING /tmp/ccxYSQ9Z.s 			page 29


 192:src/../h/riscv.hpp **** }
 876              		.loc 2 192 5 is_stmt 1
 192:src/../h/riscv.hpp **** }
 877              		.loc 2 192 77 is_stmt 0
 878              	#APP
 879              	# 192 "src/../h/riscv.hpp" 1
 880              		csrw sstatus, a5
 881              	# 0 "" 2
 882              	.LVL49:
 883              	#NO_APP
 884              	.LBE166:
 885              	.LBE165:
 159:src/riscv.cpp ****               break;
 886              		.loc 1 159 15 is_stmt 1
 159:src/riscv.cpp ****               break;
 887              		.loc 1 159 21 is_stmt 0
 888 0370 833784EA 		ld	a5,-344(s0)
 889              	.LVL50:
 890              	.LBB167:
 891              	.LBB168:
 124:src/../h/riscv.hpp **** }
 892              		.loc 2 124 5 is_stmt 1
 124:src/../h/riscv.hpp **** }
 893              		.loc 2 124 65 is_stmt 0
 894              	#APP
 895              	# 124 "src/../h/riscv.hpp" 1
 125:src/../h/riscv.hpp **** 
 896              		csrw sepc, a5
 897              	# 0 "" 2
 898              		.loc 2 125 1
 899              	#NO_APP
 900 0378 6FF09FE4 		j	.L7
 901              	.LVL51:
 902              	.L14:
 903              	.LBE168:
 904              	.LBE167:
 905              	.LBE160:
 162:src/riscv.cpp ****             //sem open
 906              		.loc 1 162 11 is_stmt 1
 162:src/riscv.cpp ****             //sem open
 907              		.loc 1 162 22
 908              	.LBB169:
 164:src/riscv.cpp **** 
 909              		.loc 1 164 14
 910              	.LBB170:
 911              	.LBB171:
 117:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 912              		.loc 2 117 5
 118:src/../h/riscv.hpp ****     return sepc;
 913              		.loc 2 118 5
 118:src/../h/riscv.hpp ****     return sepc;
 914              		.loc 2 118 64 is_stmt 0
 915              	#APP
 916              	# 118 "src/../h/riscv.hpp" 1
 917              		csrr a5, sepc
 918              	# 0 "" 2
 919              	#NO_APP
GAS LISTING /tmp/ccxYSQ9Z.s 			page 30


 920 0380 233CF4F4 		sd	a5,-168(s0)
 119:src/../h/riscv.hpp **** }
 921              		.loc 2 119 5 is_stmt 1
 119:src/../h/riscv.hpp **** }
 922              		.loc 2 119 12 is_stmt 0
 923 0384 833784F5 		ld	a5,-168(s0)
 924              	.LBE171:
 925              	.LBE170:
 164:src/riscv.cpp **** 
 926              		.loc 1 164 46
 927 0388 93874700 		addi	a5,a5,4
 164:src/riscv.cpp **** 
 928              		.loc 1 164 48
 929 038c 233CF4EA 		sd	a5,-328(s0)
 166:src/riscv.cpp ****             SemaforKernel** handle=(SemaforKernel**)a1;
 930              		.loc 1 166 13 is_stmt 1
 167:src/riscv.cpp ****             unsigned init=(unsigned)a2;
 931              		.loc 1 167 13
 167:src/riscv.cpp ****             unsigned init=(unsigned)a2;
 932              		.loc 1 167 53 is_stmt 0
 933 0390 833484FC 		ld	s1,-56(s0)
 934              	.LVL52:
 168:src/riscv.cpp **** 
 935              		.loc 1 168 13 is_stmt 1
 168:src/riscv.cpp **** 
 936              		.loc 1 168 37 is_stmt 0
 937 0394 033504FC 		ld	a0,-64(s0)
 938              	.LVL53:
 170:src/riscv.cpp **** 
 939              		.loc 1 170 13 is_stmt 1
 170:src/riscv.cpp **** 
 940              		.loc 1 170 40 is_stmt 0
 941 0398 1B050500 		sext.w	a0,a0
 942 039c 97000000 		call	_ZN13SemaforKernel4openEi@plt
 942      E7800000 
 943              	.LVL54:
 170:src/riscv.cpp **** 
 944              		.loc 1 170 20
 945 03a4 23B0A400 		sd	a0,0(s1)
 172:src/riscv.cpp ****                   ret=-1;
 946              		.loc 1 172 15 is_stmt 1
 947 03a8 630C0500 		beqz	a0,.L30
 175:src/riscv.cpp ****               }
 948              		.loc 1 175 22 is_stmt 0
 949 03ac 93070000 		li	a5,0
 950              	.L21:
 951              	.LVL55:
 177:src/riscv.cpp **** 
 952              		.loc 1 177 15 is_stmt 1
 177:src/riscv.cpp **** 
 953              		.loc 1 177 53 is_stmt 0
 954              	#APP
 955              	# 177 "src/riscv.cpp" 1
 179:src/riscv.cpp ****               break;
 956              		mv a0,a5
 957              	# 0 "" 2
 958              		.loc 1 179 16 is_stmt 1
GAS LISTING /tmp/ccxYSQ9Z.s 			page 31


 179:src/riscv.cpp ****               break;
 959              		.loc 1 179 22 is_stmt 0
 960              	#NO_APP
 961 03b4 833784EB 		ld	a5,-328(s0)
 962              	.LVL56:
 963              	.LBB172:
 964              	.LBB173:
 124:src/../h/riscv.hpp **** }
 965              		.loc 2 124 5 is_stmt 1
 124:src/../h/riscv.hpp **** }
 966              		.loc 2 124 65 is_stmt 0
 967              	#APP
 968              	# 124 "src/../h/riscv.hpp" 1
 125:src/../h/riscv.hpp **** 
 969              		csrw sepc, a5
 970              	# 0 "" 2
 971              		.loc 2 125 1
 972              	#NO_APP
 973 03bc 6FF05FE0 		j	.L7
 974              	.LVL57:
 975              	.L30:
 976              	.LBE173:
 977              	.LBE172:
 173:src/riscv.cpp ****               }else{
 978              		.loc 1 173 22
 979 03c0 9307F0FF 		li	a5,-1
 980 03c4 6FF0DFFE 		j	.L21
 981              	.LVL58:
 982              	.L13:
 983              	.LBE169:
 182:src/riscv.cpp ****             //sem close
 984              		.loc 1 182 11 is_stmt 1
 182:src/riscv.cpp ****             //sem close
 985              		.loc 1 182 22
 986              	.LBB174:
 184:src/riscv.cpp **** 
 987              		.loc 1 184 14
 988              	.LBB175:
 989              	.LBB176:
 117:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 990              		.loc 2 117 5
 118:src/../h/riscv.hpp ****     return sepc;
 991              		.loc 2 118 5
 118:src/../h/riscv.hpp ****     return sepc;
 992              		.loc 2 118 64 is_stmt 0
 993              	#APP
 994              	# 118 "src/../h/riscv.hpp" 1
 995              		csrr a5, sepc
 996              	# 0 "" 2
 997              	#NO_APP
 998 03cc 2330F4F6 		sd	a5,-160(s0)
 119:src/../h/riscv.hpp **** }
 999              		.loc 2 119 5 is_stmt 1
 119:src/../h/riscv.hpp **** }
 1000              		.loc 2 119 12 is_stmt 0
 1001 03d0 833704F6 		ld	a5,-160(s0)
 1002              	.LBE176:
GAS LISTING /tmp/ccxYSQ9Z.s 			page 32


 1003              	.LBE175:
 184:src/riscv.cpp **** 
 1004              		.loc 1 184 46
 1005 03d4 93874700 		addi	a5,a5,4
 184:src/riscv.cpp **** 
 1006              		.loc 1 184 48
 1007 03d8 2330F4EC 		sd	a5,-320(s0)
 187:src/riscv.cpp **** 
 1008              		.loc 1 187 14 is_stmt 1
 187:src/riscv.cpp **** 
 1009              		.loc 1 187 34 is_stmt 0
 1010 03dc 033584FC 		ld	a0,-56(s0)
 1011              	.LVL59:
 189:src/riscv.cpp **** 
 1012              		.loc 1 189 14 is_stmt 1
 189:src/riscv.cpp **** 
 1013              		.loc 1 189 37 is_stmt 0
 1014 03e0 83370500 		ld	a5,0(a0)
 1015 03e4 83B70700 		ld	a5,0(a5)
 189:src/riscv.cpp **** 
 1016              		.loc 1 189 36
 1017 03e8 E7800700 		jalr	a5
 1018              	.LVL60:
 194:src/riscv.cpp ****               break;
 1019              		.loc 1 194 15 is_stmt 1
 194:src/riscv.cpp ****               break;
 1020              		.loc 1 194 21 is_stmt 0
 1021 03ec 833704EC 		ld	a5,-320(s0)
 1022              	.LVL61:
 1023              	.LBB177:
 1024              	.LBB178:
 124:src/../h/riscv.hpp **** }
 1025              		.loc 2 124 5 is_stmt 1
 124:src/../h/riscv.hpp **** }
 1026              		.loc 2 124 65 is_stmt 0
 1027              	#APP
 1028              	# 124 "src/../h/riscv.hpp" 1
 125:src/../h/riscv.hpp **** 
 1029              		csrw sepc, a5
 1030              	# 0 "" 2
 1031              		.loc 2 125 1
 1032              	#NO_APP
 1033 03f4 6FF0DFDC 		j	.L7
 1034              	.LVL62:
 1035              	.L12:
 1036              	.LBE178:
 1037              	.LBE177:
 1038              	.LBE174:
 197:src/riscv.cpp ****             //sem wait
 1039              		.loc 1 197 11 is_stmt 1
 197:src/riscv.cpp ****             //sem wait
 1040              		.loc 1 197 22
 1041              	.LBB179:
 199:src/riscv.cpp ****              uint64 volatile sstatus = r_sstatus();
 1042              		.loc 1 199 14
 1043              	.LBB180:
 1044              	.LBB181:
GAS LISTING /tmp/ccxYSQ9Z.s 			page 33


 117:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1045              		.loc 2 117 5
 118:src/../h/riscv.hpp ****     return sepc;
 1046              		.loc 2 118 5
 118:src/../h/riscv.hpp ****     return sepc;
 1047              		.loc 2 118 64 is_stmt 0
 1048              	#APP
 1049              	# 118 "src/../h/riscv.hpp" 1
 1050              		csrr a5, sepc
 1051              	# 0 "" 2
 1052              	#NO_APP
 1053 03fc 2338F4F6 		sd	a5,-144(s0)
 119:src/../h/riscv.hpp **** }
 1054              		.loc 2 119 5 is_stmt 1
 119:src/../h/riscv.hpp **** }
 1055              		.loc 2 119 12 is_stmt 0
 1056 0400 833704F7 		ld	a5,-144(s0)
 1057              	.LBE181:
 1058              	.LBE180:
 199:src/riscv.cpp ****              uint64 volatile sstatus = r_sstatus();
 1059              		.loc 1 199 46
 1060 0404 93874700 		addi	a5,a5,4
 199:src/riscv.cpp ****              uint64 volatile sstatus = r_sstatus();
 1061              		.loc 1 199 48
 1062 0408 2334F4EC 		sd	a5,-312(s0)
 200:src/riscv.cpp **** 
 1063              		.loc 1 200 14 is_stmt 1
 1064              	.LBB182:
 1065              	.LBB183:
 185:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1066              		.loc 2 185 5
 186:src/../h/riscv.hpp ****     return sstatus;
 1067              		.loc 2 186 5
 186:src/../h/riscv.hpp ****     return sstatus;
 1068              		.loc 2 186 76 is_stmt 0
 1069              	#APP
 1070              	# 186 "src/../h/riscv.hpp" 1
 1071              		csrr a5, sstatus
 1072              	# 0 "" 2
 1073              	#NO_APP
 1074 0410 2334F4F6 		sd	a5,-152(s0)
 187:src/../h/riscv.hpp **** }
 1075              		.loc 2 187 5 is_stmt 1
 187:src/../h/riscv.hpp **** }
 1076              		.loc 2 187 12 is_stmt 0
 1077 0414 833784F6 		ld	a5,-152(s0)
 1078              	.LBE183:
 1079              	.LBE182:
 200:src/riscv.cpp **** 
 1080              		.loc 1 200 50
 1081 0418 2338F4EC 		sd	a5,-304(s0)
 203:src/riscv.cpp **** 
 1082              		.loc 1 203 14 is_stmt 1
 203:src/riscv.cpp **** 
 1083              		.loc 1 203 34 is_stmt 0
 1084 041c 033584FC 		ld	a0,-56(s0)
 1085              	.LVL63:
GAS LISTING /tmp/ccxYSQ9Z.s 			page 34


 205:src/riscv.cpp **** 
 1086              		.loc 1 205 13 is_stmt 1
 205:src/riscv.cpp **** 
 1087              		.loc 1 205 25 is_stmt 0
 1088 0420 97000000 		call	_ZN13SemaforKernel4waitEv@plt
 1088      E7800000 
 1089              	.LVL64:
 209:src/riscv.cpp ****               w_sstatus(sstatus);
 1090              		.loc 1 209 14 is_stmt 1
 209:src/riscv.cpp ****               w_sstatus(sstatus);
 1091              		.loc 1 209 20 is_stmt 0
 1092 0428 833784EC 		ld	a5,-312(s0)
 1093              	.LVL65:
 1094              	.LBB184:
 1095              	.LBB185:
 124:src/../h/riscv.hpp **** }
 1096              		.loc 2 124 5 is_stmt 1
 124:src/../h/riscv.hpp **** }
 1097              		.loc 2 124 65 is_stmt 0
 1098              	#APP
 1099              	# 124 "src/../h/riscv.hpp" 1
 1100              		csrw sepc, a5
 1101              	# 0 "" 2
 1102              	.LVL66:
 1103              	#NO_APP
 1104              	.LBE185:
 1105              	.LBE184:
 210:src/riscv.cpp ****               break;
 1106              		.loc 1 210 15 is_stmt 1
 210:src/riscv.cpp ****               break;
 1107              		.loc 1 210 24 is_stmt 0
 1108 0430 833704ED 		ld	a5,-304(s0)
 1109              	.LVL67:
 1110              	.LBB186:
 1111              	.LBB187:
 192:src/../h/riscv.hpp **** }
 1112              		.loc 2 192 5 is_stmt 1
 192:src/../h/riscv.hpp **** }
 1113              		.loc 2 192 77 is_stmt 0
 1114              	#APP
 1115              	# 192 "src/../h/riscv.hpp" 1
 193:src/../h/riscv.hpp **** 
 1116              		csrw sstatus, a5
 1117              	# 0 "" 2
 1118              		.loc 2 193 1
 1119              	#NO_APP
 1120 0438 6FF09FD8 		j	.L7
 1121              	.LVL68:
 1122              	.L11:
 1123              	.LBE187:
 1124              	.LBE186:
 1125              	.LBE179:
 213:src/riscv.cpp ****             //sem signal
 1126              		.loc 1 213 11 is_stmt 1
 213:src/riscv.cpp ****             //sem signal
 1127              		.loc 1 213 22
 1128              	.LBB188:
GAS LISTING /tmp/ccxYSQ9Z.s 			page 35


 215:src/riscv.cpp **** 
 1129              		.loc 1 215 14
 1130              	.LBB189:
 1131              	.LBB190:
 117:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1132              		.loc 2 117 5
 118:src/../h/riscv.hpp ****     return sepc;
 1133              		.loc 2 118 5
 118:src/../h/riscv.hpp ****     return sepc;
 1134              		.loc 2 118 64 is_stmt 0
 1135              	#APP
 1136              	# 118 "src/../h/riscv.hpp" 1
 1137              		csrr a5, sepc
 1138              	# 0 "" 2
 1139              	#NO_APP
 1140 0440 233CF4F6 		sd	a5,-136(s0)
 119:src/../h/riscv.hpp **** }
 1141              		.loc 2 119 5 is_stmt 1
 119:src/../h/riscv.hpp **** }
 1142              		.loc 2 119 12 is_stmt 0
 1143 0444 833784F7 		ld	a5,-136(s0)
 1144              	.LBE190:
 1145              	.LBE189:
 215:src/riscv.cpp **** 
 1146              		.loc 1 215 46
 1147 0448 93874700 		addi	a5,a5,4
 215:src/riscv.cpp **** 
 1148              		.loc 1 215 48
 1149 044c 233CF4EC 		sd	a5,-296(s0)
 218:src/riscv.cpp **** 
 1150              		.loc 1 218 14 is_stmt 1
 218:src/riscv.cpp **** 
 1151              		.loc 1 218 34 is_stmt 0
 1152 0450 033584FC 		ld	a0,-56(s0)
 1153              	.LVL69:
 220:src/riscv.cpp **** 
 1154              		.loc 1 220 14 is_stmt 1
 220:src/riscv.cpp **** 
 1155              		.loc 1 220 28 is_stmt 0
 1156 0454 97000000 		call	_ZN13SemaforKernel6signalEv@plt
 1156      E7800000 
 1157              	.LVL70:
 224:src/riscv.cpp ****               break;
 1158              		.loc 1 224 15 is_stmt 1
 224:src/riscv.cpp ****               break;
 1159              		.loc 1 224 21 is_stmt 0
 1160 045c 833784ED 		ld	a5,-296(s0)
 1161              	.LVL71:
 1162              	.LBB191:
 1163              	.LBB192:
 124:src/../h/riscv.hpp **** }
 1164              		.loc 2 124 5 is_stmt 1
 124:src/../h/riscv.hpp **** }
 1165              		.loc 2 124 65 is_stmt 0
 1166              	#APP
 1167              	# 124 "src/../h/riscv.hpp" 1
 125:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccxYSQ9Z.s 			page 36


 1168              		csrw sepc, a5
 1169              	# 0 "" 2
 1170              		.loc 2 125 1
 1171              	#NO_APP
 1172 0464 6FF0DFD5 		j	.L7
 1173              	.LVL72:
 1174              	.L10:
 1175              	.LBE192:
 1176              	.LBE191:
 1177              	.LBE188:
 227:src/riscv.cpp ****                 uint64 volatile sepc = r_sepc()+4;
 1178              		.loc 1 227 12 is_stmt 1
 227:src/riscv.cpp ****                 uint64 volatile sepc = r_sepc()+4;
 1179              		.loc 1 227 23
 1180              	.LBB193:
 228:src/riscv.cpp ****                 char  a=__getc();
 1181              		.loc 1 228 17
 1182              	.LBB194:
 1183              	.LBB195:
 117:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1184              		.loc 2 117 5
 118:src/../h/riscv.hpp ****     return sepc;
 1185              		.loc 2 118 5
 118:src/../h/riscv.hpp ****     return sepc;
 1186              		.loc 2 118 64 is_stmt 0
 1187              	#APP
 1188              	# 118 "src/../h/riscv.hpp" 1
 1189              		csrr a5, sepc
 1190              	# 0 "" 2
 1191              	#NO_APP
 1192 046c 2330F4F8 		sd	a5,-128(s0)
 119:src/../h/riscv.hpp **** }
 1193              		.loc 2 119 5 is_stmt 1
 119:src/../h/riscv.hpp **** }
 1194              		.loc 2 119 12 is_stmt 0
 1195 0470 833704F8 		ld	a5,-128(s0)
 1196              	.LBE195:
 1197              	.LBE194:
 228:src/riscv.cpp ****                 char  a=__getc();
 1198              		.loc 1 228 48
 1199 0474 93874700 		addi	a5,a5,4
 228:src/riscv.cpp ****                 char  a=__getc();
 1200              		.loc 1 228 49
 1201 0478 2330F4EE 		sd	a5,-288(s0)
 229:src/riscv.cpp ****                 //__asm__ volatile("mv a0, %0" : : "r" (a));
 1202              		.loc 1 229 17 is_stmt 1
 229:src/riscv.cpp ****                 //__asm__ volatile("mv a0, %0" : : "r" (a));
 1203              		.loc 1 229 31 is_stmt 0
 1204 047c 97000000 		call	__getc@plt
 1204      E7800000 
 1205              	.LVL73:
 231:src/riscv.cpp ****                 w_sepc(sepc);
 1206              		.loc 1 231 18 is_stmt 1
 231:src/riscv.cpp ****                 w_sepc(sepc);
 1207              		.loc 1 231 72 is_stmt 0
 1208              	#APP
 1209              	# 231 "src/riscv.cpp" 1
GAS LISTING /tmp/ccxYSQ9Z.s 			page 37


 232:src/riscv.cpp ****                 break;
 1210              		sd a0, 10 * 8(s0)
 1211              	# 0 "" 2
 1212              		.loc 1 232 17 is_stmt 1
 232:src/riscv.cpp ****                 break;
 1213              		.loc 1 232 23 is_stmt 0
 1214              	#NO_APP
 1215 0488 833704EE 		ld	a5,-288(s0)
 1216              	.LVL74:
 1217              	.LBB196:
 1218              	.LBB197:
 124:src/../h/riscv.hpp **** }
 1219              		.loc 2 124 5 is_stmt 1
 124:src/../h/riscv.hpp **** }
 1220              		.loc 2 124 65 is_stmt 0
 1221              	#APP
 1222              	# 124 "src/../h/riscv.hpp" 1
 125:src/../h/riscv.hpp **** 
 1223              		csrw sepc, a5
 1224              	# 0 "" 2
 1225              		.loc 2 125 1
 1226              	#NO_APP
 1227 0490 6FF01FD3 		j	.L7
 1228              	.LVL75:
 1229              	.L8:
 1230              	.LBE197:
 1231              	.LBE196:
 1232              	.LBE193:
 235:src/riscv.cpp ****                 uint64  c = r_a1();
 1233              		.loc 1 235 13 is_stmt 1
 235:src/riscv.cpp ****                 uint64  c = r_a1();
 1234              		.loc 1 235 24
 1235              	.LBB198:
 236:src/riscv.cpp ****                 uint64 volatile sepc = r_sepc()+4;
 1236              		.loc 1 236 17
 1237              	.LBB199:
 1238              	.LBB200:
 204:src/../h/riscv.hpp ****     __asm__ volatile("mv %[savedValue], a1" :  [savedValue] "=r" (a1));
 1239              		.loc 2 204 5
 205:src/../h/riscv.hpp ****     return a1;
 1240              		.loc 2 205 5
 205:src/../h/riscv.hpp ****     return a1;
 1241              		.loc 2 205 71 is_stmt 0
 1242              	#APP
 1243              	# 205 "src/../h/riscv.hpp" 1
 1244              		mv a5, a1
 1245              	# 0 "" 2
 1246              	#NO_APP
 1247 0498 2338F4F8 		sd	a5,-112(s0)
 206:src/../h/riscv.hpp **** }
 1248              		.loc 2 206 5 is_stmt 1
 206:src/../h/riscv.hpp **** }
 1249              		.loc 2 206 12 is_stmt 0
 1250 049c 033504F9 		ld	a0,-112(s0)
 1251              	.LVL76:
 1252              	.LBE200:
 1253              	.LBE199:
GAS LISTING /tmp/ccxYSQ9Z.s 			page 38


 237:src/riscv.cpp ****                 __putc(c);
 1254              		.loc 1 237 17 is_stmt 1
 1255              	.LBB201:
 1256              	.LBB202:
 117:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1257              		.loc 2 117 5
 118:src/../h/riscv.hpp ****     return sepc;
 1258              		.loc 2 118 5
 118:src/../h/riscv.hpp ****     return sepc;
 1259              		.loc 2 118 64 is_stmt 0
 1260              	#APP
 1261              	# 118 "src/../h/riscv.hpp" 1
 1262              		csrr a5, sepc
 1263              	# 0 "" 2
 1264              	#NO_APP
 1265 04a4 2334F4F8 		sd	a5,-120(s0)
 119:src/../h/riscv.hpp **** }
 1266              		.loc 2 119 5 is_stmt 1
 119:src/../h/riscv.hpp **** }
 1267              		.loc 2 119 12 is_stmt 0
 1268 04a8 833784F8 		ld	a5,-120(s0)
 1269              	.LBE202:
 1270              	.LBE201:
 237:src/riscv.cpp ****                 __putc(c);
 1271              		.loc 1 237 48
 1272 04ac 93874700 		addi	a5,a5,4
 237:src/riscv.cpp ****                 __putc(c);
 1273              		.loc 1 237 49
 1274 04b0 2334F4EE 		sd	a5,-280(s0)
 238:src/riscv.cpp ****                 w_sepc(sepc);
 1275              		.loc 1 238 17 is_stmt 1
 238:src/riscv.cpp ****                 w_sepc(sepc);
 1276              		.loc 1 238 23 is_stmt 0
 1277 04b4 1375F50F 		andi	a0,a0,0xff
 1278              	.LVL77:
 1279 04b8 97000000 		call	__putc@plt
 1279      E7800000 
 1280              	.LVL78:
 239:src/riscv.cpp ****                 break;
 1281              		.loc 1 239 17 is_stmt 1
 239:src/riscv.cpp ****                 break;
 1282              		.loc 1 239 23 is_stmt 0
 1283 04c0 833784EE 		ld	a5,-280(s0)
 1284              	.LVL79:
 1285              	.LBB203:
 1286              	.LBB204:
 124:src/../h/riscv.hpp **** }
 1287              		.loc 2 124 5 is_stmt 1
 124:src/../h/riscv.hpp **** }
 1288              		.loc 2 124 65 is_stmt 0
 1289              	#APP
 1290              	# 124 "src/../h/riscv.hpp" 1
 125:src/../h/riscv.hpp **** 
 1291              		csrw sepc, a5
 1292              	# 0 "" 2
 1293              		.loc 2 125 1
 1294              	#NO_APP
GAS LISTING /tmp/ccxYSQ9Z.s 			page 39


 1295 04c8 6FF09FCF 		j	.L7
 1296              	.LVL80:
 1297              	.L28:
 1298              	.LBE204:
 1299              	.LBE203:
 1300              	.LBE198:
 1301              	.LBE133:
 1302              	.LBE132:
 1303              	.LBB205:
 259:src/riscv.cpp **** 
 1304              		.loc 1 259 9 is_stmt 1
 1305              	.LBB128:
 1306              	.LBB129:
 158:src/../h/riscv.hpp **** }
 1307              		.loc 2 158 5
 158:src/../h/riscv.hpp **** }
 1308              		.loc 2 158 64 is_stmt 0
 1309 04cc 93072000 		li	a5,2
 1310              	#APP
 1311              	# 158 "src/../h/riscv.hpp" 1
 159:src/../h/riscv.hpp **** 
 1312              		csrc sip, a5
 1313              	# 0 "" 2
 1314              		.loc 2 159 1
 1315              	#NO_APP
 1316 04d4 6FF0DFCE 		j	.L7
 1317              	.LVL81:
 1318              	.L29:
 1319              	.LBE129:
 1320              	.LBE128:
 1321              	.LBB130:
 263:src/riscv.cpp ****     }else{
 1322              		.loc 1 263 9 is_stmt 1
 263:src/riscv.cpp ****     }else{
 1323              		.loc 1 263 24 is_stmt 0
 1324 04d8 97000000 		call	console_handler@plt
 1324      E7800000 
 1325              	.LVL82:
 1326 04e0 6FF01FCE 		j	.L7
 1327              	.LBE130:
 1328              	.LBE205:
 1329              	.LBE210:
 1330              		.cfi_endproc
 1331              	.LFE48:
 1333              	.Letext0:
 1334              		.file 4 "src/../h/../lib/hw.h"
 1335              		.file 5 "src/../h/../h/../h/../h/memallocator.hpp"
 1336              		.file 6 "src/../h/../h/syscall_c.hpp"
 1337              		.file 7 "src/../h/SemaforKernel.hpp"
 1338              		.file 8 "src/../lib/console.h"
 1339              		.file 9 "src/../test/printing.hpp"
GAS LISTING /tmp/ccxYSQ9Z.s 			page 40


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccxYSQ9Z.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccxYSQ9Z.s:13     .text:0000000000000000 .L0 
     /tmp/ccxYSQ9Z.s:14     .text:0000000000000000 .L0 
     /tmp/ccxYSQ9Z.s:15     .text:0000000000000004 .L0 
     /tmp/ccxYSQ9Z.s:17     .text:0000000000000008 .L0 
     /tmp/ccxYSQ9Z.s:19     .text:000000000000000c .L0 
     /tmp/ccxYSQ9Z.s:21     .text:000000000000000c .L0 
     /tmp/ccxYSQ9Z.s:25     .text:000000000000000c .L0 
     /tmp/ccxYSQ9Z.s:26     .text:000000000000000c .L0 
     /tmp/ccxYSQ9Z.s:27     .text:000000000000000c .L0 
  src/../h/riscv.hpp:186    .text:000000000000000c .L0 
     /tmp/ccxYSQ9Z.s:35     .text:0000000000000014 .L0 
     /tmp/ccxYSQ9Z.s:36     .text:0000000000000014 .L0 
     /tmp/ccxYSQ9Z.s:40     .text:0000000000000018 .L0 
     /tmp/ccxYSQ9Z.s:42     .text:000000000000001c .L0 
     /tmp/ccxYSQ9Z.s:43     .text:000000000000001c .L0 
     /tmp/ccxYSQ9Z.s:47     .text:000000000000002c .L0 
     /tmp/ccxYSQ9Z.s:49     .text:0000000000000030 .L0 
     /tmp/ccxYSQ9Z.s:50     .text:0000000000000030 .L0 
     /tmp/ccxYSQ9Z.s:52     .text:0000000000000034 .L0 
     /tmp/ccxYSQ9Z.s:54     .text:0000000000000038 .L0 
     /tmp/ccxYSQ9Z.s:57     .text:000000000000003c .L0 
     /tmp/ccxYSQ9Z.s:58     .text:000000000000003c .L0 
     /tmp/ccxYSQ9Z.s:63     .text:0000000000000040 .L0 
  src/../h/riscv.hpp:192    .text:0000000000000040 .L0 
     /tmp/ccxYSQ9Z.s:73     .text:0000000000000044 .L0 
       src/riscv.cpp:25     .text:0000000000000044 .L0 
     /tmp/ccxYSQ9Z.s:79     .text:0000000000000048 .L0 
       src/riscv.cpp:26     .text:0000000000000048 .L0 
     /tmp/ccxYSQ9Z.s:85     .text:000000000000004c .L0 
     /tmp/ccxYSQ9Z.s:86     .text:0000000000000050 .L0 
     /tmp/ccxYSQ9Z.s:87     .text:0000000000000050 .L0 
     /tmp/ccxYSQ9Z.s:88     .text:0000000000000050 .L0 
     /tmp/ccxYSQ9Z.s:90     .text:0000000000000054 .L0 
     /tmp/ccxYSQ9Z.s:93     .text:0000000000000058 .L0 
     /tmp/ccxYSQ9Z.s:95     .text:0000000000000058 .L0 
     /tmp/ccxYSQ9Z.s:96     .text:0000000000000058 .L0 
     /tmp/ccxYSQ9Z.s:98     .text:000000000000005c .L0 
     /tmp/ccxYSQ9Z.s:100    .text:0000000000000060 .L0 
     /tmp/ccxYSQ9Z.s:102    .text:0000000000000068 .L0 
     /tmp/ccxYSQ9Z.s:122    .text:0000000000000068 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccxYSQ9Z.s:125    .text:0000000000000068 .L0 
     /tmp/ccxYSQ9Z.s:126    .text:0000000000000068 .L0 
     /tmp/ccxYSQ9Z.s:127    .text:000000000000006c .L0 
     /tmp/ccxYSQ9Z.s:133    .text:0000000000000080 .L0 
     /tmp/ccxYSQ9Z.s:134    .text:0000000000000080 .L0 
     /tmp/ccxYSQ9Z.s:135    .text:0000000000000080 .L0 
     /tmp/ccxYSQ9Z.s:136    .text:0000000000000080 .L0 
     /tmp/ccxYSQ9Z.s:137    .text:0000000000000080 .L0 
     /tmp/ccxYSQ9Z.s:139    .text:0000000000000084 .L0 
     /tmp/ccxYSQ9Z.s:141    .text:0000000000000084 .L0 
     /tmp/ccxYSQ9Z.s:144    .text:0000000000000084 .L0 
     /tmp/ccxYSQ9Z.s:145    .text:0000000000000084 .L0 
     /tmp/ccxYSQ9Z.s:146    .text:0000000000000084 .L0 
  src/../h/riscv.hpp:199    .text:0000000000000084 .L0 
GAS LISTING /tmp/ccxYSQ9Z.s 			page 41


     /tmp/ccxYSQ9Z.s:154    .text:000000000000008c .L0 
     /tmp/ccxYSQ9Z.s:155    .text:000000000000008c .L0 
     /tmp/ccxYSQ9Z.s:159    .text:0000000000000090 .L0 
     /tmp/ccxYSQ9Z.s:163    .text:0000000000000094 .L0 
     /tmp/ccxYSQ9Z.s:164    .text:0000000000000094 .L0 
     /tmp/ccxYSQ9Z.s:165    .text:0000000000000094 .L0 
  src/../h/riscv.hpp:205    .text:0000000000000094 .L0 
     /tmp/ccxYSQ9Z.s:173    .text:000000000000009c .L0 
     /tmp/ccxYSQ9Z.s:174    .text:000000000000009c .L0 
     /tmp/ccxYSQ9Z.s:178    .text:00000000000000a0 .L0 
     /tmp/ccxYSQ9Z.s:182    .text:00000000000000a4 .L0 
     /tmp/ccxYSQ9Z.s:183    .text:00000000000000a4 .L0 
     /tmp/ccxYSQ9Z.s:184    .text:00000000000000a4 .L0 
  src/../h/riscv.hpp:211    .text:00000000000000a4 .L0 
     /tmp/ccxYSQ9Z.s:192    .text:00000000000000ac .L0 
     /tmp/ccxYSQ9Z.s:193    .text:00000000000000ac .L0 
     /tmp/ccxYSQ9Z.s:197    .text:00000000000000b0 .L0 
     /tmp/ccxYSQ9Z.s:201    .text:00000000000000b4 .L0 
     /tmp/ccxYSQ9Z.s:202    .text:00000000000000b4 .L0 
     /tmp/ccxYSQ9Z.s:203    .text:00000000000000b4 .L0 
  src/../h/riscv.hpp:217    .text:00000000000000b4 .L0 
     /tmp/ccxYSQ9Z.s:211    .text:00000000000000bc .L0 
     /tmp/ccxYSQ9Z.s:212    .text:00000000000000bc .L0 
     /tmp/ccxYSQ9Z.s:216    .text:00000000000000c0 .L0 
     /tmp/ccxYSQ9Z.s:220    .text:00000000000000c4 .L0 
     /tmp/ccxYSQ9Z.s:221    .text:00000000000000c4 .L0 
     /tmp/ccxYSQ9Z.s:222    .text:00000000000000c4 .L0 
  src/../h/riscv.hpp:223    .text:00000000000000c4 .L0 
     /tmp/ccxYSQ9Z.s:230    .text:00000000000000cc .L0 
     /tmp/ccxYSQ9Z.s:231    .text:00000000000000cc .L0 
     /tmp/ccxYSQ9Z.s:235    .text:00000000000000d0 .L0 
     /tmp/ccxYSQ9Z.s:239    .text:00000000000000d4 .L0 
     /tmp/ccxYSQ9Z.s:240    .text:00000000000000d4 .L0 
     /tmp/ccxYSQ9Z.s:241    .text:00000000000000d4 .L0 
  src/../h/riscv.hpp:106    .text:00000000000000d4 .L0 
     /tmp/ccxYSQ9Z.s:249    .text:00000000000000dc .L0 
     /tmp/ccxYSQ9Z.s:250    .text:00000000000000dc .L0 
     /tmp/ccxYSQ9Z.s:256    .text:00000000000000e0 .L0 
     /tmp/ccxYSQ9Z.s:257    .text:00000000000000e0 .L0 
     /tmp/ccxYSQ9Z.s:259    .text:00000000000000e4 .L0 
     /tmp/ccxYSQ9Z.s:265    .text:00000000000000ec .L0 
     /tmp/ccxYSQ9Z.s:275    .text:00000000000000fc .L0 
     /tmp/ccxYSQ9Z.s:283    .text:000000000000010c .L0 
     /tmp/ccxYSQ9Z.s:284    .text:000000000000010c .L0 
     /tmp/ccxYSQ9Z.s:285    .text:000000000000010c .L0 
  src/../h/riscv.hpp:118    .text:000000000000010c .L0 
     /tmp/ccxYSQ9Z.s:293    .text:0000000000000114 .L0 
     /tmp/ccxYSQ9Z.s:294    .text:0000000000000114 .L0 
     /tmp/ccxYSQ9Z.s:301    .text:0000000000000118 .L0 
     /tmp/ccxYSQ9Z.s:302    .text:0000000000000118 .L0 
     /tmp/ccxYSQ9Z.s:303    .text:0000000000000118 .L0 
  src/../h/riscv.hpp:142    .text:0000000000000118 .L0 
     /tmp/ccxYSQ9Z.s:311    .text:0000000000000120 .L0 
     /tmp/ccxYSQ9Z.s:312    .text:0000000000000120 .L0 
     /tmp/ccxYSQ9Z.s:317    .text:0000000000000124 .L0 
     /tmp/ccxYSQ9Z.s:318    .text:0000000000000124 .L0 
     /tmp/ccxYSQ9Z.s:322    .text:0000000000000134 .L0 
GAS LISTING /tmp/ccxYSQ9Z.s 			page 42


     /tmp/ccxYSQ9Z.s:323    .text:0000000000000134 .L0 
     /tmp/ccxYSQ9Z.s:329    .text:0000000000000148 .L0 
     /tmp/ccxYSQ9Z.s:330    .text:0000000000000148 .L0 
     /tmp/ccxYSQ9Z.s:334    .text:0000000000000158 .L0 
     /tmp/ccxYSQ9Z.s:335    .text:0000000000000158 .L0 
     /tmp/ccxYSQ9Z.s:339    .text:0000000000000168 .L0 
     /tmp/ccxYSQ9Z.s:340    .text:0000000000000168 .L0 
     /tmp/ccxYSQ9Z.s:346    .text:000000000000017c .L0 
     /tmp/ccxYSQ9Z.s:347    .text:000000000000017c .L0 
     /tmp/ccxYSQ9Z.s:351    .text:000000000000018c .L0 
     /tmp/ccxYSQ9Z.s:352    .text:000000000000018c .L0 
     /tmp/ccxYSQ9Z.s:356    .text:000000000000019c .L0 
     /tmp/ccxYSQ9Z.s:357    .text:000000000000019c .L0 
     /tmp/ccxYSQ9Z.s:363    .text:00000000000001b0 .L0 
     /tmp/ccxYSQ9Z.s:364    .text:00000000000001b0 .L0 
     /tmp/ccxYSQ9Z.s:375    .text:00000000000001c0 .L0 
     /tmp/ccxYSQ9Z.s:376    .text:00000000000001c0 .L0 
     /tmp/ccxYSQ9Z.s:377    .text:00000000000001c0 .L0 
     /tmp/ccxYSQ9Z.s:387    .text:00000000000001c8 .L0 
     /tmp/ccxYSQ9Z.s:388    .text:00000000000001cc .L0 
     /tmp/ccxYSQ9Z.s:389    .text:00000000000001cc .L0 
     /tmp/ccxYSQ9Z.s:391    .text:00000000000001d0 .L0 
     /tmp/ccxYSQ9Z.s:392    .text:00000000000001d0 .L0 
     /tmp/ccxYSQ9Z.s:394    .text:00000000000001d4 .L0 
     /tmp/ccxYSQ9Z.s:396    .text:00000000000001d8 .L0 
     /tmp/ccxYSQ9Z.s:398    .text:00000000000001dc .L0 
     /tmp/ccxYSQ9Z.s:400    .text:00000000000001e0 .L0 
     /tmp/ccxYSQ9Z.s:404    .text:00000000000001e4 .L0 
     /tmp/ccxYSQ9Z.s:408    .text:00000000000001e4 .L0 
     /tmp/ccxYSQ9Z.s:409    .text:00000000000001e4 .L0 
     /tmp/ccxYSQ9Z.s:413    .text:00000000000001ec .L0 
     /tmp/ccxYSQ9Z.s:497    .text:0000000000000210 .L0 
     /tmp/ccxYSQ9Z.s:499    .text:0000000000000210 .L0 
     /tmp/ccxYSQ9Z.s:500    .text:0000000000000210 .L0 
     /tmp/ccxYSQ9Z.s:501    .text:0000000000000210 .L0 
     /tmp/ccxYSQ9Z.s:504    .text:0000000000000214 .L0 
     /tmp/ccxYSQ9Z.s:505    .text:0000000000000214 .L0 
     /tmp/ccxYSQ9Z.s:508    .text:0000000000000218 .L0 
     /tmp/ccxYSQ9Z.s:509    .text:0000000000000218 .L0 
     /tmp/ccxYSQ9Z.s:512    .text:0000000000000220 .L0 
     /tmp/ccxYSQ9Z.s:513    .text:0000000000000220 .L0 
     /tmp/ccxYSQ9Z.s:517    .text:000000000000022c .L0 
       src/riscv.cpp:87     .text:000000000000022c .L0 
     /tmp/ccxYSQ9Z.s:526    .text:0000000000000230 .L0 
     /tmp/ccxYSQ9Z.s:527    .text:0000000000000230 .L0 
     /tmp/ccxYSQ9Z.s:528    .text:0000000000000230 .L0 
  src/../h/riscv.hpp:118    .text:0000000000000230 .L0 
     /tmp/ccxYSQ9Z.s:536    .text:0000000000000238 .L0 
     /tmp/ccxYSQ9Z.s:537    .text:0000000000000238 .L0 
     /tmp/ccxYSQ9Z.s:541    .text:000000000000023c .L0 
     /tmp/ccxYSQ9Z.s:543    .text:0000000000000240 .L0 
     /tmp/ccxYSQ9Z.s:545    .text:0000000000000244 .L0 
     /tmp/ccxYSQ9Z.s:546    .text:0000000000000244 .L0 
     /tmp/ccxYSQ9Z.s:551    .text:0000000000000248 .L0 
  src/../h/riscv.hpp:124    .text:0000000000000248 .L0 
     /tmp/ccxYSQ9Z.s:558    .text:000000000000024c .L0 
     /tmp/ccxYSQ9Z.s:565    .text:0000000000000250 .L0 
GAS LISTING /tmp/ccxYSQ9Z.s 			page 43


     /tmp/ccxYSQ9Z.s:567    .text:0000000000000250 .L0 
     /tmp/ccxYSQ9Z.s:568    .text:0000000000000250 .L0 
     /tmp/ccxYSQ9Z.s:569    .text:0000000000000250 .L0 
     /tmp/ccxYSQ9Z.s:572    .text:0000000000000254 .L0 
     /tmp/ccxYSQ9Z.s:573    .text:0000000000000254 .L0 
     /tmp/ccxYSQ9Z.s:576    .text:000000000000025c .L0 
     /tmp/ccxYSQ9Z.s:577    .text:000000000000025c .L0 
     /tmp/ccxYSQ9Z.s:581    .text:0000000000000268 .L0 
       src/riscv.cpp:99     .text:0000000000000268 .L0 
     /tmp/ccxYSQ9Z.s:590    .text:000000000000026c .L0 
     /tmp/ccxYSQ9Z.s:591    .text:000000000000026c .L0 
     /tmp/ccxYSQ9Z.s:592    .text:000000000000026c .L0 
  src/../h/riscv.hpp:118    .text:000000000000026c .L0 
     /tmp/ccxYSQ9Z.s:600    .text:0000000000000274 .L0 
     /tmp/ccxYSQ9Z.s:601    .text:0000000000000274 .L0 
     /tmp/ccxYSQ9Z.s:605    .text:0000000000000278 .L0 
     /tmp/ccxYSQ9Z.s:607    .text:000000000000027c .L0 
     /tmp/ccxYSQ9Z.s:609    .text:0000000000000280 .L0 
     /tmp/ccxYSQ9Z.s:610    .text:0000000000000280 .L0 
     /tmp/ccxYSQ9Z.s:615    .text:0000000000000284 .L0 
  src/../h/riscv.hpp:124    .text:0000000000000284 .L0 
     /tmp/ccxYSQ9Z.s:622    .text:0000000000000288 .L0 
     /tmp/ccxYSQ9Z.s:629    .text:000000000000028c .L0 
     /tmp/ccxYSQ9Z.s:631    .text:000000000000028c .L0 
     /tmp/ccxYSQ9Z.s:632    .text:000000000000028c .L0 
     /tmp/ccxYSQ9Z.s:633    .text:000000000000028c .L0 
     /tmp/ccxYSQ9Z.s:634    .text:000000000000028c .L0 
     /tmp/ccxYSQ9Z.s:637    .text:0000000000000290 .L0 
     /tmp/ccxYSQ9Z.s:638    .text:0000000000000290 .L0 
     /tmp/ccxYSQ9Z.s:641    .text:0000000000000294 .L0 
     /tmp/ccxYSQ9Z.s:642    .text:0000000000000294 .L0 
     /tmp/ccxYSQ9Z.s:645    .text:0000000000000298 .L0 
     /tmp/ccxYSQ9Z.s:646    .text:0000000000000298 .L0 
     /tmp/ccxYSQ9Z.s:649    .text:000000000000029c .L0 
     /tmp/ccxYSQ9Z.s:650    .text:000000000000029c .L0 
     /tmp/ccxYSQ9Z.s:654    .text:00000000000002a8 .L0 
     /tmp/ccxYSQ9Z.s:656    .text:00000000000002ac .L0 
     /tmp/ccxYSQ9Z.s:658    .text:00000000000002b0 .L0 
     /tmp/ccxYSQ9Z.s:662    .text:00000000000002b4 .L0 
       src/riscv.cpp:136    .text:00000000000002b4 .L0 
     /tmp/ccxYSQ9Z.s:671    .text:00000000000002b8 .L0 
     /tmp/ccxYSQ9Z.s:672    .text:00000000000002b8 .L0 
     /tmp/ccxYSQ9Z.s:673    .text:00000000000002b8 .L0 
  src/../h/riscv.hpp:118    .text:00000000000002b8 .L0 
     /tmp/ccxYSQ9Z.s:682    .text:00000000000002c0 .L0 
     /tmp/ccxYSQ9Z.s:683    .text:00000000000002c0 .L0 
     /tmp/ccxYSQ9Z.s:687    .text:00000000000002c4 .L0 
     /tmp/ccxYSQ9Z.s:689    .text:00000000000002c8 .L0 
     /tmp/ccxYSQ9Z.s:691    .text:00000000000002cc .L0 
     /tmp/ccxYSQ9Z.s:692    .text:00000000000002cc .L0 
     /tmp/ccxYSQ9Z.s:697    .text:00000000000002d0 .L0 
  src/../h/riscv.hpp:124    .text:00000000000002d0 .L0 
     /tmp/ccxYSQ9Z.s:704    .text:00000000000002d4 .L0 
     /tmp/ccxYSQ9Z.s:710    .text:00000000000002d8 .L0 
     /tmp/ccxYSQ9Z.s:716    .text:00000000000002e0 .L0 
     /tmp/ccxYSQ9Z.s:718    .text:00000000000002e0 .L0 
     /tmp/ccxYSQ9Z.s:721    .text:00000000000002e0 .L0 
GAS LISTING /tmp/ccxYSQ9Z.s 			page 44


     /tmp/ccxYSQ9Z.s:722    .text:00000000000002e0 .L0 
     /tmp/ccxYSQ9Z.s:723    .text:00000000000002e0 .L0 
  src/../h/riscv.hpp:118    .text:00000000000002e0 .L0 
     /tmp/ccxYSQ9Z.s:731    .text:00000000000002e8 .L0 
     /tmp/ccxYSQ9Z.s:732    .text:00000000000002e8 .L0 
     /tmp/ccxYSQ9Z.s:736    .text:00000000000002ec .L0 
     /tmp/ccxYSQ9Z.s:738    .text:00000000000002f0 .L0 
     /tmp/ccxYSQ9Z.s:742    .text:00000000000002f4 .L0 
     /tmp/ccxYSQ9Z.s:743    .text:00000000000002f4 .L0 
     /tmp/ccxYSQ9Z.s:744    .text:00000000000002f4 .L0 
  src/../h/riscv.hpp:186    .text:00000000000002f4 .L0 
     /tmp/ccxYSQ9Z.s:752    .text:00000000000002fc .L0 
     /tmp/ccxYSQ9Z.s:753    .text:00000000000002fc .L0 
     /tmp/ccxYSQ9Z.s:757    .text:0000000000000300 .L0 
     /tmp/ccxYSQ9Z.s:760    .text:0000000000000304 .L0 
     /tmp/ccxYSQ9Z.s:761    .text:0000000000000304 .L0 
     /tmp/ccxYSQ9Z.s:762    .text:0000000000000304 .L0 
     /tmp/ccxYSQ9Z.s:769    .text:0000000000000310 .L0 
     /tmp/ccxYSQ9Z.s:770    .text:0000000000000310 .L0 
     /tmp/ccxYSQ9Z.s:776    .text:0000000000000318 .L0 
     /tmp/ccxYSQ9Z.s:777    .text:0000000000000318 .L0 
     /tmp/ccxYSQ9Z.s:780    .text:0000000000000320 .L0 
     /tmp/ccxYSQ9Z.s:781    .text:0000000000000320 .L0 
     /tmp/ccxYSQ9Z.s:787    .text:0000000000000328 .L0 
     /tmp/ccxYSQ9Z.s:789    .text:0000000000000328 .L0 
     /tmp/ccxYSQ9Z.s:794    .text:000000000000032c .L0 
  src/../h/riscv.hpp:192    .text:000000000000032c .L0 
     /tmp/ccxYSQ9Z.s:804    .text:0000000000000330 .L0 
     /tmp/ccxYSQ9Z.s:805    .text:0000000000000330 .L0 
     /tmp/ccxYSQ9Z.s:810    .text:0000000000000334 .L0 
  src/../h/riscv.hpp:124    .text:0000000000000334 .L0 
     /tmp/ccxYSQ9Z.s:817    .text:0000000000000338 .L0 
     /tmp/ccxYSQ9Z.s:824    .text:000000000000033c .L0 
     /tmp/ccxYSQ9Z.s:826    .text:000000000000033c .L0 
     /tmp/ccxYSQ9Z.s:829    .text:000000000000033c .L0 
     /tmp/ccxYSQ9Z.s:830    .text:000000000000033c .L0 
     /tmp/ccxYSQ9Z.s:831    .text:000000000000033c .L0 
  src/../h/riscv.hpp:118    .text:000000000000033c .L0 
     /tmp/ccxYSQ9Z.s:839    .text:0000000000000344 .L0 
     /tmp/ccxYSQ9Z.s:840    .text:0000000000000344 .L0 
     /tmp/ccxYSQ9Z.s:844    .text:0000000000000348 .L0 
     /tmp/ccxYSQ9Z.s:846    .text:000000000000034c .L0 
     /tmp/ccxYSQ9Z.s:850    .text:0000000000000350 .L0 
     /tmp/ccxYSQ9Z.s:851    .text:0000000000000350 .L0 
     /tmp/ccxYSQ9Z.s:852    .text:0000000000000350 .L0 
  src/../h/riscv.hpp:186    .text:0000000000000350 .L0 
     /tmp/ccxYSQ9Z.s:860    .text:0000000000000358 .L0 
     /tmp/ccxYSQ9Z.s:861    .text:0000000000000358 .L0 
     /tmp/ccxYSQ9Z.s:865    .text:000000000000035c .L0 
     /tmp/ccxYSQ9Z.s:867    .text:0000000000000360 .L0 
     /tmp/ccxYSQ9Z.s:868    .text:0000000000000360 .L0 
     /tmp/ccxYSQ9Z.s:871    .text:0000000000000368 .L0 
     /tmp/ccxYSQ9Z.s:872    .text:0000000000000368 .L0 
     /tmp/ccxYSQ9Z.s:877    .text:000000000000036c .L0 
  src/../h/riscv.hpp:192    .text:000000000000036c .L0 
     /tmp/ccxYSQ9Z.s:887    .text:0000000000000370 .L0 
     /tmp/ccxYSQ9Z.s:888    .text:0000000000000370 .L0 
GAS LISTING /tmp/ccxYSQ9Z.s 			page 45


     /tmp/ccxYSQ9Z.s:893    .text:0000000000000374 .L0 
  src/../h/riscv.hpp:124    .text:0000000000000374 .L0 
     /tmp/ccxYSQ9Z.s:900    .text:0000000000000378 .L0 
     /tmp/ccxYSQ9Z.s:907    .text:000000000000037c .L0 
     /tmp/ccxYSQ9Z.s:909    .text:000000000000037c .L0 
     /tmp/ccxYSQ9Z.s:912    .text:000000000000037c .L0 
     /tmp/ccxYSQ9Z.s:913    .text:000000000000037c .L0 
     /tmp/ccxYSQ9Z.s:914    .text:000000000000037c .L0 
  src/../h/riscv.hpp:118    .text:000000000000037c .L0 
     /tmp/ccxYSQ9Z.s:922    .text:0000000000000384 .L0 
     /tmp/ccxYSQ9Z.s:923    .text:0000000000000384 .L0 
     /tmp/ccxYSQ9Z.s:927    .text:0000000000000388 .L0 
     /tmp/ccxYSQ9Z.s:929    .text:000000000000038c .L0 
     /tmp/ccxYSQ9Z.s:931    .text:0000000000000390 .L0 
     /tmp/ccxYSQ9Z.s:932    .text:0000000000000390 .L0 
     /tmp/ccxYSQ9Z.s:933    .text:0000000000000390 .L0 
     /tmp/ccxYSQ9Z.s:936    .text:0000000000000394 .L0 
     /tmp/ccxYSQ9Z.s:937    .text:0000000000000394 .L0 
     /tmp/ccxYSQ9Z.s:940    .text:0000000000000398 .L0 
     /tmp/ccxYSQ9Z.s:941    .text:0000000000000398 .L0 
     /tmp/ccxYSQ9Z.s:945    .text:00000000000003a4 .L0 
     /tmp/ccxYSQ9Z.s:947    .text:00000000000003a8 .L0 
     /tmp/ccxYSQ9Z.s:949    .text:00000000000003ac .L0 
     /tmp/ccxYSQ9Z.s:953    .text:00000000000003b0 .L0 
       src/riscv.cpp:177    .text:00000000000003b0 .L0 
     /tmp/ccxYSQ9Z.s:959    .text:00000000000003b4 .L0 
     /tmp/ccxYSQ9Z.s:961    .text:00000000000003b4 .L0 
     /tmp/ccxYSQ9Z.s:966    .text:00000000000003b8 .L0 
  src/../h/riscv.hpp:124    .text:00000000000003b8 .L0 
     /tmp/ccxYSQ9Z.s:973    .text:00000000000003bc .L0 
     /tmp/ccxYSQ9Z.s:979    .text:00000000000003c0 .L0 
     /tmp/ccxYSQ9Z.s:985    .text:00000000000003c8 .L0 
     /tmp/ccxYSQ9Z.s:987    .text:00000000000003c8 .L0 
     /tmp/ccxYSQ9Z.s:990    .text:00000000000003c8 .L0 
     /tmp/ccxYSQ9Z.s:991    .text:00000000000003c8 .L0 
     /tmp/ccxYSQ9Z.s:992    .text:00000000000003c8 .L0 
  src/../h/riscv.hpp:118    .text:00000000000003c8 .L0 
     /tmp/ccxYSQ9Z.s:1000   .text:00000000000003d0 .L0 
     /tmp/ccxYSQ9Z.s:1001   .text:00000000000003d0 .L0 
     /tmp/ccxYSQ9Z.s:1005   .text:00000000000003d4 .L0 
     /tmp/ccxYSQ9Z.s:1007   .text:00000000000003d8 .L0 
     /tmp/ccxYSQ9Z.s:1009   .text:00000000000003dc .L0 
     /tmp/ccxYSQ9Z.s:1010   .text:00000000000003dc .L0 
     /tmp/ccxYSQ9Z.s:1013   .text:00000000000003e0 .L0 
     /tmp/ccxYSQ9Z.s:1014   .text:00000000000003e0 .L0 
     /tmp/ccxYSQ9Z.s:1017   .text:00000000000003e8 .L0 
     /tmp/ccxYSQ9Z.s:1020   .text:00000000000003ec .L0 
     /tmp/ccxYSQ9Z.s:1021   .text:00000000000003ec .L0 
     /tmp/ccxYSQ9Z.s:1026   .text:00000000000003f0 .L0 
  src/../h/riscv.hpp:124    .text:00000000000003f0 .L0 
     /tmp/ccxYSQ9Z.s:1033   .text:00000000000003f4 .L0 
     /tmp/ccxYSQ9Z.s:1040   .text:00000000000003f8 .L0 
     /tmp/ccxYSQ9Z.s:1042   .text:00000000000003f8 .L0 
     /tmp/ccxYSQ9Z.s:1045   .text:00000000000003f8 .L0 
     /tmp/ccxYSQ9Z.s:1046   .text:00000000000003f8 .L0 
     /tmp/ccxYSQ9Z.s:1047   .text:00000000000003f8 .L0 
  src/../h/riscv.hpp:118    .text:00000000000003f8 .L0 
GAS LISTING /tmp/ccxYSQ9Z.s 			page 46


     /tmp/ccxYSQ9Z.s:1055   .text:0000000000000400 .L0 
     /tmp/ccxYSQ9Z.s:1056   .text:0000000000000400 .L0 
     /tmp/ccxYSQ9Z.s:1060   .text:0000000000000404 .L0 
     /tmp/ccxYSQ9Z.s:1062   .text:0000000000000408 .L0 
     /tmp/ccxYSQ9Z.s:1066   .text:000000000000040c .L0 
     /tmp/ccxYSQ9Z.s:1067   .text:000000000000040c .L0 
     /tmp/ccxYSQ9Z.s:1068   .text:000000000000040c .L0 
  src/../h/riscv.hpp:186    .text:000000000000040c .L0 
     /tmp/ccxYSQ9Z.s:1076   .text:0000000000000414 .L0 
     /tmp/ccxYSQ9Z.s:1077   .text:0000000000000414 .L0 
     /tmp/ccxYSQ9Z.s:1081   .text:0000000000000418 .L0 
     /tmp/ccxYSQ9Z.s:1083   .text:000000000000041c .L0 
     /tmp/ccxYSQ9Z.s:1084   .text:000000000000041c .L0 
     /tmp/ccxYSQ9Z.s:1087   .text:0000000000000420 .L0 
     /tmp/ccxYSQ9Z.s:1088   .text:0000000000000420 .L0 
     /tmp/ccxYSQ9Z.s:1091   .text:0000000000000428 .L0 
     /tmp/ccxYSQ9Z.s:1092   .text:0000000000000428 .L0 
     /tmp/ccxYSQ9Z.s:1097   .text:000000000000042c .L0 
  src/../h/riscv.hpp:124    .text:000000000000042c .L0 
     /tmp/ccxYSQ9Z.s:1107   .text:0000000000000430 .L0 
     /tmp/ccxYSQ9Z.s:1108   .text:0000000000000430 .L0 
     /tmp/ccxYSQ9Z.s:1113   .text:0000000000000434 .L0 
  src/../h/riscv.hpp:192    .text:0000000000000434 .L0 
     /tmp/ccxYSQ9Z.s:1120   .text:0000000000000438 .L0 
     /tmp/ccxYSQ9Z.s:1127   .text:000000000000043c .L0 
     /tmp/ccxYSQ9Z.s:1129   .text:000000000000043c .L0 
     /tmp/ccxYSQ9Z.s:1132   .text:000000000000043c .L0 
     /tmp/ccxYSQ9Z.s:1133   .text:000000000000043c .L0 
     /tmp/ccxYSQ9Z.s:1134   .text:000000000000043c .L0 
  src/../h/riscv.hpp:118    .text:000000000000043c .L0 
     /tmp/ccxYSQ9Z.s:1142   .text:0000000000000444 .L0 
     /tmp/ccxYSQ9Z.s:1143   .text:0000000000000444 .L0 
     /tmp/ccxYSQ9Z.s:1147   .text:0000000000000448 .L0 
     /tmp/ccxYSQ9Z.s:1149   .text:000000000000044c .L0 
     /tmp/ccxYSQ9Z.s:1151   .text:0000000000000450 .L0 
     /tmp/ccxYSQ9Z.s:1152   .text:0000000000000450 .L0 
     /tmp/ccxYSQ9Z.s:1155   .text:0000000000000454 .L0 
     /tmp/ccxYSQ9Z.s:1156   .text:0000000000000454 .L0 
     /tmp/ccxYSQ9Z.s:1159   .text:000000000000045c .L0 
     /tmp/ccxYSQ9Z.s:1160   .text:000000000000045c .L0 
     /tmp/ccxYSQ9Z.s:1165   .text:0000000000000460 .L0 
  src/../h/riscv.hpp:124    .text:0000000000000460 .L0 
     /tmp/ccxYSQ9Z.s:1172   .text:0000000000000464 .L0 
     /tmp/ccxYSQ9Z.s:1179   .text:0000000000000468 .L0 
     /tmp/ccxYSQ9Z.s:1181   .text:0000000000000468 .L0 
     /tmp/ccxYSQ9Z.s:1184   .text:0000000000000468 .L0 
     /tmp/ccxYSQ9Z.s:1185   .text:0000000000000468 .L0 
     /tmp/ccxYSQ9Z.s:1186   .text:0000000000000468 .L0 
  src/../h/riscv.hpp:118    .text:0000000000000468 .L0 
     /tmp/ccxYSQ9Z.s:1194   .text:0000000000000470 .L0 
     /tmp/ccxYSQ9Z.s:1195   .text:0000000000000470 .L0 
     /tmp/ccxYSQ9Z.s:1199   .text:0000000000000474 .L0 
     /tmp/ccxYSQ9Z.s:1201   .text:0000000000000478 .L0 
     /tmp/ccxYSQ9Z.s:1203   .text:000000000000047c .L0 
     /tmp/ccxYSQ9Z.s:1204   .text:000000000000047c .L0 
     /tmp/ccxYSQ9Z.s:1207   .text:0000000000000484 .L0 
       src/riscv.cpp:231    .text:0000000000000484 .L0 
GAS LISTING /tmp/ccxYSQ9Z.s 			page 47


     /tmp/ccxYSQ9Z.s:1213   .text:0000000000000488 .L0 
     /tmp/ccxYSQ9Z.s:1215   .text:0000000000000488 .L0 
     /tmp/ccxYSQ9Z.s:1220   .text:000000000000048c .L0 
  src/../h/riscv.hpp:124    .text:000000000000048c .L0 
     /tmp/ccxYSQ9Z.s:1227   .text:0000000000000490 .L0 
     /tmp/ccxYSQ9Z.s:1234   .text:0000000000000494 .L0 
     /tmp/ccxYSQ9Z.s:1236   .text:0000000000000494 .L0 
     /tmp/ccxYSQ9Z.s:1239   .text:0000000000000494 .L0 
     /tmp/ccxYSQ9Z.s:1240   .text:0000000000000494 .L0 
     /tmp/ccxYSQ9Z.s:1241   .text:0000000000000494 .L0 
  src/../h/riscv.hpp:205    .text:0000000000000494 .L0 
     /tmp/ccxYSQ9Z.s:1249   .text:000000000000049c .L0 
     /tmp/ccxYSQ9Z.s:1250   .text:000000000000049c .L0 
     /tmp/ccxYSQ9Z.s:1257   .text:00000000000004a0 .L0 
     /tmp/ccxYSQ9Z.s:1258   .text:00000000000004a0 .L0 
     /tmp/ccxYSQ9Z.s:1259   .text:00000000000004a0 .L0 
  src/../h/riscv.hpp:118    .text:00000000000004a0 .L0 
     /tmp/ccxYSQ9Z.s:1267   .text:00000000000004a8 .L0 
     /tmp/ccxYSQ9Z.s:1268   .text:00000000000004a8 .L0 
     /tmp/ccxYSQ9Z.s:1272   .text:00000000000004ac .L0 
     /tmp/ccxYSQ9Z.s:1274   .text:00000000000004b0 .L0 
     /tmp/ccxYSQ9Z.s:1276   .text:00000000000004b4 .L0 
     /tmp/ccxYSQ9Z.s:1277   .text:00000000000004b4 .L0 
     /tmp/ccxYSQ9Z.s:1282   .text:00000000000004c0 .L0 
     /tmp/ccxYSQ9Z.s:1283   .text:00000000000004c0 .L0 
     /tmp/ccxYSQ9Z.s:1288   .text:00000000000004c4 .L0 
  src/../h/riscv.hpp:124    .text:00000000000004c4 .L0 
     /tmp/ccxYSQ9Z.s:1295   .text:00000000000004c8 .L0 
     /tmp/ccxYSQ9Z.s:1307   .text:00000000000004cc .L0 
     /tmp/ccxYSQ9Z.s:1308   .text:00000000000004cc .L0 
     /tmp/ccxYSQ9Z.s:1309   .text:00000000000004cc .L0 
     /tmp/ccxYSQ9Z.s:1316   .text:00000000000004d4 .L0 
     /tmp/ccxYSQ9Z.s:1323   .text:00000000000004d8 .L0 
     /tmp/ccxYSQ9Z.s:1324   .text:00000000000004d8 .L0 
     /tmp/ccxYSQ9Z.s:1330   .text:00000000000004e4 .L0 
     /tmp/ccxYSQ9Z.s:1340   .text:00000000000004e4 .L0 
     /tmp/ccxYSQ9Z.s:43     .text:000000000000001c .L0 
     /tmp/ccxYSQ9Z.s:107    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccxYSQ9Z.s:318    .text:0000000000000124 .L0 
     /tmp/ccxYSQ9Z.s:110    .rodata.str1.8:0000000000000010 .LC1
     /tmp/ccxYSQ9Z.s:330    .text:0000000000000148 .L0 
     /tmp/ccxYSQ9Z.s:113    .rodata.str1.8:0000000000000018 .LC2
     /tmp/ccxYSQ9Z.s:335    .text:0000000000000158 .L0 
     /tmp/ccxYSQ9Z.s:347    .text:000000000000017c .L0 
     /tmp/ccxYSQ9Z.s:116    .rodata.str1.8:0000000000000028 .LC3
     /tmp/ccxYSQ9Z.s:352    .text:000000000000018c .L0 
     /tmp/ccxYSQ9Z.s:364    .text:00000000000001b0 .L0 
     /tmp/ccxYSQ9Z.s:425    .rodata:0000000000000000 .L9
     /tmp/ccxYSQ9Z.s:417    .text:00000000000001f8 .L0 
     /tmp/ccxYSQ9Z.s:762    .text:0000000000000304 .L0 
     /tmp/ccxYSQ9Z.s:92     .text:0000000000000058 .L2
     /tmp/ccxYSQ9Z.s:55     .text:000000000000003c .L3
     /tmp/ccxYSQ9Z.s:403    .text:00000000000001e4 .L27
     /tmp/ccxYSQ9Z.s:1297   .text:00000000000004cc .L28
     /tmp/ccxYSQ9Z.s:1318   .text:00000000000004d8 .L29
     /tmp/ccxYSQ9Z.s:367    .text:00000000000001c0 .L7
     /tmp/ccxYSQ9Z.s:706    .text:00000000000002d8 .L24
GAS LISTING /tmp/ccxYSQ9Z.s 			page 48


     /tmp/ccxYSQ9Z.s:659    .text:00000000000002b4 .L20
     /tmp/ccxYSQ9Z.s:975    .text:00000000000003c0 .L30
     /tmp/ccxYSQ9Z.s:950    .text:00000000000003b0 .L21
     /tmp/ccxYSQ9Z.s:494    .text:0000000000000210 .L19
     /tmp/ccxYSQ9Z.s:560    .text:0000000000000250 .L18
     /tmp/ccxYSQ9Z.s:624    .text:000000000000028c .L17
     /tmp/ccxYSQ9Z.s:713    .text:00000000000002e0 .L16
     /tmp/ccxYSQ9Z.s:819    .text:000000000000033c .L15
     /tmp/ccxYSQ9Z.s:902    .text:000000000000037c .L14
     /tmp/ccxYSQ9Z.s:982    .text:00000000000003c8 .L13
     /tmp/ccxYSQ9Z.s:1035   .text:00000000000003f8 .L12
     /tmp/ccxYSQ9Z.s:1122   .text:000000000000043c .L11
     /tmp/ccxYSQ9Z.s:1174   .text:0000000000000468 .L10
     /tmp/ccxYSQ9Z.s:1229   .text:0000000000000494 .L8
     /tmp/ccxYSQ9Z.s:3608   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccxYSQ9Z.s:5265   .debug_str:00000000000006bc .LASF152
     /tmp/ccxYSQ9Z.s:5323   .debug_str:0000000000000902 .LASF153
     /tmp/ccxYSQ9Z.s:5273   .debug_str:000000000000079f .LASF154
     /tmp/ccxYSQ9Z.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccxYSQ9Z.s:1333   .text:00000000000004e4 .Letext0
     /tmp/ccxYSQ9Z.s:5021   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccxYSQ9Z.s:5127   .debug_str:0000000000000314 .LASF0
     /tmp/ccxYSQ9Z.s:5151   .debug_str:00000000000003e4 .LASF1
     /tmp/ccxYSQ9Z.s:5215   .debug_str:0000000000000588 .LASF2
     /tmp/ccxYSQ9Z.s:5225   .debug_str:00000000000005d0 .LASF4
     /tmp/ccxYSQ9Z.s:5135   .debug_str:0000000000000348 .LASF3
     /tmp/ccxYSQ9Z.s:5031   .debug_str:0000000000000069 .LASF5
     /tmp/ccxYSQ9Z.s:5193   .debug_str:00000000000004e3 .LASF6
     /tmp/ccxYSQ9Z.s:5143   .debug_str:00000000000003a9 .LASF7
     /tmp/ccxYSQ9Z.s:5099   .debug_str:0000000000000245 .LASF8
     /tmp/ccxYSQ9Z.s:5111   .debug_str:00000000000002a4 .LASF9
     /tmp/ccxYSQ9Z.s:5053   .debug_str:0000000000000125 .LASF10
     /tmp/ccxYSQ9Z.s:5091   .debug_str:000000000000020c .LASF11
     /tmp/ccxYSQ9Z.s:5067   .debug_str:0000000000000184 .LASF12
     /tmp/ccxYSQ9Z.s:5051   .debug_str:0000000000000115 .LASF13
     /tmp/ccxYSQ9Z.s:5249   .debug_str:0000000000000673 .LASF14
     /tmp/ccxYSQ9Z.s:5083   .debug_str:00000000000001dc .LASF15
     /tmp/ccxYSQ9Z.s:5239   .debug_str:000000000000062f .LASF16
     /tmp/ccxYSQ9Z.s:5301   .debug_str:00000000000008a7 .LASF75
     /tmp/ccxYSQ9Z.s:5207   .debug_str:000000000000055f .LASF20
     /tmp/ccxYSQ9Z.s:5153   .debug_str:00000000000003f7 .LASF17
     /tmp/ccxYSQ9Z.s:5087   .debug_str:00000000000001f7 .LASF18
     /tmp/ccxYSQ9Z.s:5325   .debug_str:0000000000000910 .LASF19
     /tmp/ccxYSQ9Z.s:5295   .debug_str:000000000000086b .LASF21
     /tmp/ccxYSQ9Z.s:5089   .debug_str:0000000000000200 .LASF22
     /tmp/ccxYSQ9Z.s:5263   .debug_str:00000000000006af .LASF23
     /tmp/ccxYSQ9Z.s:5073   .debug_str:00000000000001ab .LASF24
     /tmp/ccxYSQ9Z.s:5309   .debug_str:00000000000008df .LASF25
     /tmp/ccxYSQ9Z.s:5189   .debug_str:00000000000004c2 .LASF27
     /tmp/ccxYSQ9Z.s:5311   .debug_str:00000000000008e4 .LASF26
     /tmp/ccxYSQ9Z.s:5137   .debug_str:000000000000035a .LASF28
     /tmp/ccxYSQ9Z.s:5313   .debug_str:00000000000008e9 .LASF29
     /tmp/ccxYSQ9Z.s:5075   .debug_str:00000000000001b7 .LASF30
     /tmp/ccxYSQ9Z.s:5315   .debug_str:00000000000008ee .LASF31
     /tmp/ccxYSQ9Z.s:5347   .debug_str:00000000000009a7 .LASF32
     /tmp/ccxYSQ9Z.s:5317   .debug_str:00000000000008f3 .LASF33
     /tmp/ccxYSQ9Z.s:5275   .debug_str:00000000000007c2 .LASF34
GAS LISTING /tmp/ccxYSQ9Z.s 			page 49


     /tmp/ccxYSQ9Z.s:5319   .debug_str:00000000000008f8 .LASF35
     /tmp/ccxYSQ9Z.s:5165   .debug_str:0000000000000423 .LASF36
     /tmp/ccxYSQ9Z.s:5321   .debug_str:00000000000008fd .LASF37
     /tmp/ccxYSQ9Z.s:5105   .debug_str:000000000000026b .LASF38
     /tmp/ccxYSQ9Z.s:5117   .debug_str:00000000000002d2 .LASF71
     /tmp/ccxYSQ9Z.s:5125   .debug_str:00000000000002fc .LASF73
     /tmp/ccxYSQ9Z.s:5289   .debug_str:000000000000083c .LASF39
     /tmp/ccxYSQ9Z.s:5281   .debug_str:00000000000007e7 .LASF40
     /tmp/ccxYSQ9Z.s:5211   .debug_str:0000000000000574 .LASF43
     /tmp/ccxYSQ9Z.s:5185   .debug_str:00000000000004a8 .LASF45
     /tmp/ccxYSQ9Z.s:5201   .debug_str:0000000000000531 .LASF41
     /tmp/ccxYSQ9Z.s:5203   .debug_str:0000000000000538 .LASF42
     /tmp/ccxYSQ9Z.s:5177   .debug_str:000000000000047b .LASF44
     /tmp/ccxYSQ9Z.s:5145   .debug_str:00000000000003bc .LASF46
     /tmp/ccxYSQ9Z.s:5169   .debug_str:000000000000044a .LASF47
     /tmp/ccxYSQ9Z.s:5269   .debug_str:0000000000000785 .LASF48
     /tmp/ccxYSQ9Z.s:5173   .debug_str:0000000000000469 .LASF49
     /tmp/ccxYSQ9Z.s:5183   .debug_str:0000000000000494 .LASF50
     /tmp/ccxYSQ9Z.s:5155   .debug_str:0000000000000400 .LASF51
     /tmp/ccxYSQ9Z.s:5205   .debug_str:000000000000054b .LASF52
     /tmp/ccxYSQ9Z.s:5345   .debug_str:000000000000099f .LASF53
     /tmp/ccxYSQ9Z.s:5133   .debug_str:0000000000000334 .LASF54
     /tmp/ccxYSQ9Z.s:5245   .debug_str:000000000000065f .LASF55
     /tmp/ccxYSQ9Z.s:5229   .debug_str:00000000000005dc .LASF56
     /tmp/ccxYSQ9Z.s:5231   .debug_str:00000000000005ef .LASF57
     /tmp/ccxYSQ9Z.s:5059   .debug_str:0000000000000147 .LASF58
     /tmp/ccxYSQ9Z.s:5081   .debug_str:00000000000001d6 .LASF59
     /tmp/ccxYSQ9Z.s:5121   .debug_str:00000000000002e4 .LASF60
     /tmp/ccxYSQ9Z.s:5131   .debug_str:000000000000032e .LASF61
     /tmp/ccxYSQ9Z.s:5115   .debug_str:00000000000002c0 .LASF62
     /tmp/ccxYSQ9Z.s:5033   .debug_str:0000000000000070 .LASF63
     /tmp/ccxYSQ9Z.s:5221   .debug_str:00000000000005ad .LASF64
     /tmp/ccxYSQ9Z.s:5213   .debug_str:000000000000057d .LASF65
     /tmp/ccxYSQ9Z.s:5339   .debug_str:000000000000095e .LASF66
     /tmp/ccxYSQ9Z.s:5303   .debug_str:00000000000008ad .LASF67
     /tmp/ccxYSQ9Z.s:5331   .debug_str:0000000000000930 .LASF68
     /tmp/ccxYSQ9Z.s:5299   .debug_str:000000000000089d .LASF69
     /tmp/ccxYSQ9Z.s:5167   .debug_str:0000000000000434 .LASF70
     /tmp/ccxYSQ9Z.s:5287   .debug_str:000000000000082d .LASF72
     /tmp/ccxYSQ9Z.s:5109   .debug_str:0000000000000288 .LASF74
     /tmp/ccxYSQ9Z.s:5197   .debug_str:00000000000004ff .LASF113
     /tmp/ccxYSQ9Z.s:5141   .debug_str:0000000000000387 .LASF115
     /tmp/ccxYSQ9Z.s:5191   .debug_str:00000000000004d3 .LASF76
     /tmp/ccxYSQ9Z.s:5209   .debug_str:000000000000056a .LASF94
     /tmp/ccxYSQ9Z.s:5149   .debug_str:00000000000003df .LASF77
     /tmp/ccxYSQ9Z.s:5055   .debug_str:0000000000000134 .LASF78
     /tmp/ccxYSQ9Z.s:5327   .debug_str:0000000000000919 .LASF79
     /tmp/ccxYSQ9Z.s:5029   .debug_str:0000000000000041 .LASF80
     /tmp/ccxYSQ9Z.s:5271   .debug_str:0000000000000799 .LASF81
     /tmp/ccxYSQ9Z.s:5199   .debug_str:0000000000000514 .LASF83
     /tmp/ccxYSQ9Z.s:5161   .debug_str:0000000000000414 .LASF82
     /tmp/ccxYSQ9Z.s:5305   .debug_str:00000000000008b7 .LASF84
     /tmp/ccxYSQ9Z.s:5291   .debug_str:0000000000000845 .LASF89
     /tmp/ccxYSQ9Z.s:5175   .debug_str:0000000000000471 .LASF85
     /tmp/ccxYSQ9Z.s:5035   .debug_str:000000000000007b .LASF86
     /tmp/ccxYSQ9Z.s:5139   .debug_str:000000000000036b .LASF97
     /tmp/ccxYSQ9Z.s:5219   .debug_str:00000000000005a3 .LASF87
GAS LISTING /tmp/ccxYSQ9Z.s 			page 50


     /tmp/ccxYSQ9Z.s:5293   .debug_str:000000000000084f .LASF88
     /tmp/ccxYSQ9Z.s:5023   .debug_str:0000000000000000 .LASF90
     /tmp/ccxYSQ9Z.s:5049   .debug_str:0000000000000109 .LASF91
     /tmp/ccxYSQ9Z.s:5043   .debug_str:00000000000000aa .LASF92
     /tmp/ccxYSQ9Z.s:5159   .debug_str:000000000000040f .LASF93
     /tmp/ccxYSQ9Z.s:5255   .debug_str:000000000000068f .LASF95
     /tmp/ccxYSQ9Z.s:5227   .debug_str:00000000000005d7 .LASF96
     /tmp/ccxYSQ9Z.s:5277   .debug_str:00000000000007d3 .LASF98
     /tmp/ccxYSQ9Z.s:5257   .debug_str:0000000000000697 .LASF99
     /tmp/ccxYSQ9Z.s:5171   .debug_str:0000000000000452 .LASF100
     /tmp/ccxYSQ9Z.s:5041   .debug_str:000000000000009e .LASF101
     /tmp/ccxYSQ9Z.s:5283   .debug_str:00000000000007fc .LASF102
     /tmp/ccxYSQ9Z.s:5247   .debug_str:0000000000000666 .LASF103
     /tmp/ccxYSQ9Z.s:5297   .debug_str:000000000000087a .LASF104
     /tmp/ccxYSQ9Z.s:5063   .debug_str:000000000000016d .LASF155
     /tmp/ccxYSQ9Z.s:5261   .debug_str:00000000000006a7 .LASF156
     /tmp/ccxYSQ9Z.s:5223   .debug_str:00000000000005c5 .LASF157
     /tmp/ccxYSQ9Z.s:5341   .debug_str:0000000000000976 .LASF105
     /tmp/ccxYSQ9Z.s:5107   .debug_str:000000000000027c .LASF106
     /tmp/ccxYSQ9Z.s:5025   .debug_str:0000000000000009 .LASF107
     /tmp/ccxYSQ9Z.s:5181   .debug_str:0000000000000487 .LASF108
     /tmp/ccxYSQ9Z.s:5045   .debug_str:00000000000000df .LASF109
     /tmp/ccxYSQ9Z.s:5097   .debug_str:0000000000000239 .LASF110
     /tmp/ccxYSQ9Z.s:5237   .debug_str:000000000000061c .LASF111
     /tmp/ccxYSQ9Z.s:5217   .debug_str:0000000000000596 .LASF112
     /tmp/ccxYSQ9Z.s:5235   .debug_str:0000000000000605 .LASF158
     /tmp/ccxYSQ9Z.s:5077   .debug_str:00000000000001c8 .LASF114
     /tmp/ccxYSQ9Z.s:5061   .debug_str:000000000000015a .LASF116
     /tmp/ccxYSQ9Z.s:5071   .debug_str:000000000000019d .LASF159
     /tmp/ccxYSQ9Z.s:5027   .debug_str:0000000000000019 .LASF160
     /tmp/ccxYSQ9Z.s:5113   .debug_str:00000000000002b2 .LASF117
     /tmp/ccxYSQ9Z.s:5095   .debug_str:0000000000000220 .LASF118
     /tmp/ccxYSQ9Z.s:5069   .debug_str:0000000000000194 .LASF119
     /tmp/ccxYSQ9Z.s:5337   .debug_str:0000000000000958 .LASF120
     /tmp/ccxYSQ9Z.s:5279   .debug_str:00000000000007df .LASF121
     /tmp/ccxYSQ9Z.s:5253   .debug_str:0000000000000686 .LASF122
     /tmp/ccxYSQ9Z.s:5065   .debug_str:000000000000017c .LASF123
     /tmp/ccxYSQ9Z.s:5129   .debug_str:0000000000000321 .LASF124
     /tmp/ccxYSQ9Z.s:5101   .debug_str:0000000000000255 .LASF125
     /tmp/ccxYSQ9Z.s:5057   .debug_str:0000000000000139 .LASF161
     /tmp/ccxYSQ9Z.s:5285   .debug_str:0000000000000813 .LASF126
     /tmp/ccxYSQ9Z.s:5179   .debug_str:0000000000000482 .LASF128
     /tmp/ccxYSQ9Z.s:5047   .debug_str:00000000000000ef .LASF127
     /tmp/ccxYSQ9Z.s:5079   .debug_str:00000000000001d1 .LASF129
     /tmp/ccxYSQ9Z.s:5343   .debug_str:0000000000000983 .LASF130
     /tmp/ccxYSQ9Z.s:5251   .debug_str:000000000000067f .LASF131
     /tmp/ccxYSQ9Z.s:123    .text:0000000000000068 .LFB48
     /tmp/ccxYSQ9Z.s:1331   .text:00000000000004e4 .LFE48
     /tmp/ccxYSQ9Z.s:5241   .debug_str:0000000000000645 .LASF132
     /tmp/ccxYSQ9Z.s:4675   .debug_loc:0000000000000000 .LLST1
     /tmp/ccxYSQ9Z.s:406    .text:00000000000001e4 .LBB132
     /tmp/ccxYSQ9Z.s:1302   .text:00000000000004cc .LBE132
     /tmp/ccxYSQ9Z.s:5085   .debug_str:00000000000001f2 .LASF133
     /tmp/ccxYSQ9Z.s:4702   .debug_loc:0000000000000082 .LLST5
     /tmp/ccxYSQ9Z.s:498    .text:0000000000000210 .LBB134
     /tmp/ccxYSQ9Z.s:563    .text:0000000000000250 .LBE134
     /tmp/ccxYSQ9Z.s:4709   .debug_loc:00000000000000a5 .LLST6
GAS LISTING /tmp/ccxYSQ9Z.s 			page 51


     /tmp/ccxYSQ9Z.s:4716   .debug_loc:00000000000000c8 .LLST7
     /tmp/ccxYSQ9Z.s:5147   .debug_str:00000000000003cf .LASF134
     /tmp/ccxYSQ9Z.s:4723   .debug_loc:00000000000000eb .LLST8
     /tmp/ccxYSQ9Z.s:4730   .debug_loc:000000000000010e .LLST9
     /tmp/ccxYSQ9Z.s:5267   .debug_str:0000000000000780 .LASF135
     /tmp/ccxYSQ9Z.s:524    .text:0000000000000230 .LBB135
     /tmp/ccxYSQ9Z.s:539    .text:000000000000023c .LBE135
     /tmp/ccxYSQ9Z.s:548    .text:0000000000000248 .LBB137
     /tmp/ccxYSQ9Z.s:562    .text:0000000000000250 .LBE137
     /tmp/ccxYSQ9Z.s:4737   .debug_loc:0000000000000131 .LLST10
     /tmp/ccxYSQ9Z.s:510    .text:0000000000000220 .LVL20
     /tmp/ccxYSQ9Z.s:515    .text:000000000000022c .LVL21
     /tmp/ccxYSQ9Z.s:566    .text:0000000000000250 .LBB139
     /tmp/ccxYSQ9Z.s:627    .text:000000000000028c .LBE139
     /tmp/ccxYSQ9Z.s:5187   .debug_str:00000000000004bd .LASF136
     /tmp/ccxYSQ9Z.s:4744   .debug_loc:0000000000000154 .LLST11
     /tmp/ccxYSQ9Z.s:4751   .debug_loc:0000000000000177 .LLST12
     /tmp/ccxYSQ9Z.s:4758   .debug_loc:000000000000019a .LLST13
     /tmp/ccxYSQ9Z.s:588    .text:000000000000026c .LBB140
     /tmp/ccxYSQ9Z.s:603    .text:0000000000000278 .LBE140
     /tmp/ccxYSQ9Z.s:612    .text:0000000000000284 .LBB142
     /tmp/ccxYSQ9Z.s:626    .text:000000000000028c .LBE142
     /tmp/ccxYSQ9Z.s:4765   .debug_loc:00000000000001bd .LLST14
     /tmp/ccxYSQ9Z.s:574    .text:000000000000025c .LVL25
     /tmp/ccxYSQ9Z.s:579    .text:0000000000000268 .LVL26
     /tmp/ccxYSQ9Z.s:630    .text:000000000000028c .LBB144
     /tmp/ccxYSQ9Z.s:714    .text:00000000000002e0 .LBE144
     /tmp/ccxYSQ9Z.s:4772   .debug_loc:00000000000001e0 .LLST15
     /tmp/ccxYSQ9Z.s:5329   .debug_str:0000000000000929 .LASF137
     /tmp/ccxYSQ9Z.s:4779   .debug_loc:0000000000000203 .LLST16
     /tmp/ccxYSQ9Z.s:5335   .debug_str:0000000000000952 .LASF138
     /tmp/ccxYSQ9Z.s:4786   .debug_loc:0000000000000226 .LLST17
     /tmp/ccxYSQ9Z.s:4793   .debug_loc:0000000000000249 .LLST18
     /tmp/ccxYSQ9Z.s:4800   .debug_loc:000000000000026c .LLST19
     /tmp/ccxYSQ9Z.s:669    .text:00000000000002b8 .LBB145
     /tmp/ccxYSQ9Z.s:685    .text:00000000000002c4 .LBE145
     /tmp/ccxYSQ9Z.s:694    .text:00000000000002d0 .LBB147
     /tmp/ccxYSQ9Z.s:708    .text:00000000000002d8 .LBE147
     /tmp/ccxYSQ9Z.s:4807   .debug_loc:000000000000028f .LLST20
     /tmp/ccxYSQ9Z.s:652    .text:00000000000002a8 .LVL33
     /tmp/ccxYSQ9Z.s:717    .text:00000000000002e0 .LBB149
     /tmp/ccxYSQ9Z.s:822    .text:000000000000033c .LBE149
     /tmp/ccxYSQ9Z.s:5307   .debug_str:00000000000008d7 .LASF139
     /tmp/ccxYSQ9Z.s:4814   .debug_loc:00000000000002b2 .LLST21
     /tmp/ccxYSQ9Z.s:719    .text:00000000000002e0 .LBB150
     /tmp/ccxYSQ9Z.s:734    .text:00000000000002ec .LBE150
     /tmp/ccxYSQ9Z.s:740    .text:00000000000002f4 .LBB152
     /tmp/ccxYSQ9Z.s:755    .text:0000000000000300 .LBE152
     /tmp/ccxYSQ9Z.s:765    .text:0000000000000310 .LBB154
     /tmp/ccxYSQ9Z.s:774    .text:0000000000000318 .LBE154
     /tmp/ccxYSQ9Z.s:4823   .debug_loc:00000000000002d7 .LLST22
     /tmp/ccxYSQ9Z.s:4831   .debug_loc:00000000000002fb .LLST23
     /tmp/ccxYSQ9Z.s:791    .text:000000000000032c .LBB156
     /tmp/ccxYSQ9Z.s:802    .text:0000000000000330 .LBE156
     /tmp/ccxYSQ9Z.s:4838   .debug_loc:000000000000031e .LLST24
     /tmp/ccxYSQ9Z.s:807    .text:0000000000000334 .LBB158
     /tmp/ccxYSQ9Z.s:821    .text:000000000000033c .LBE158
GAS LISTING /tmp/ccxYSQ9Z.s 			page 52


     /tmp/ccxYSQ9Z.s:4845   .debug_loc:0000000000000341 .LLST25
     /tmp/ccxYSQ9Z.s:778    .text:0000000000000320 .LVL42
     /tmp/ccxYSQ9Z.s:825    .text:000000000000033c .LBB160
     /tmp/ccxYSQ9Z.s:905    .text:000000000000037c .LBE160
     /tmp/ccxYSQ9Z.s:827    .text:000000000000033c .LBB161
     /tmp/ccxYSQ9Z.s:842    .text:0000000000000348 .LBE161
     /tmp/ccxYSQ9Z.s:848    .text:0000000000000350 .LBB163
     /tmp/ccxYSQ9Z.s:863    .text:000000000000035c .LBE163
     /tmp/ccxYSQ9Z.s:874    .text:000000000000036c .LBB165
     /tmp/ccxYSQ9Z.s:885    .text:0000000000000370 .LBE165
     /tmp/ccxYSQ9Z.s:4852   .debug_loc:0000000000000364 .LLST26
     /tmp/ccxYSQ9Z.s:890    .text:0000000000000374 .LBB167
     /tmp/ccxYSQ9Z.s:904    .text:000000000000037c .LBE167
     /tmp/ccxYSQ9Z.s:4859   .debug_loc:0000000000000387 .LLST27
     /tmp/ccxYSQ9Z.s:869    .text:0000000000000368 .LVL47
     /tmp/ccxYSQ9Z.s:908    .text:000000000000037c .LBB169
     /tmp/ccxYSQ9Z.s:983    .text:00000000000003c8 .LBE169
     /tmp/ccxYSQ9Z.s:4866   .debug_loc:00000000000003aa .LLST28
     /tmp/ccxYSQ9Z.s:4873   .debug_loc:00000000000003cd .LLST29
     /tmp/ccxYSQ9Z.s:5039   .debug_str:0000000000000099 .LASF140
     /tmp/ccxYSQ9Z.s:4880   .debug_loc:00000000000003f0 .LLST30
     /tmp/ccxYSQ9Z.s:910    .text:000000000000037c .LBB170
     /tmp/ccxYSQ9Z.s:925    .text:0000000000000388 .LBE170
     /tmp/ccxYSQ9Z.s:963    .text:00000000000003b8 .LBB172
     /tmp/ccxYSQ9Z.s:977    .text:00000000000003c0 .LBE172
     /tmp/ccxYSQ9Z.s:4887   .debug_loc:0000000000000413 .LLST31
     /tmp/ccxYSQ9Z.s:943    .text:00000000000003a4 .LVL54
     /tmp/ccxYSQ9Z.s:986    .text:00000000000003c8 .LBB174
     /tmp/ccxYSQ9Z.s:1038   .text:00000000000003f8 .LBE174
     /tmp/ccxYSQ9Z.s:4894   .debug_loc:0000000000000436 .LLST32
     /tmp/ccxYSQ9Z.s:988    .text:00000000000003c8 .LBB175
     /tmp/ccxYSQ9Z.s:1003   .text:00000000000003d4 .LBE175
     /tmp/ccxYSQ9Z.s:1023   .text:00000000000003f0 .LBB177
     /tmp/ccxYSQ9Z.s:1037   .text:00000000000003f8 .LBE177
     /tmp/ccxYSQ9Z.s:4901   .debug_loc:0000000000000459 .LLST33
     /tmp/ccxYSQ9Z.s:1041   .text:00000000000003f8 .LBB179
     /tmp/ccxYSQ9Z.s:1125   .text:000000000000043c .LBE179
     /tmp/ccxYSQ9Z.s:4908   .debug_loc:000000000000047c .LLST34
     /tmp/ccxYSQ9Z.s:1043   .text:00000000000003f8 .LBB180
     /tmp/ccxYSQ9Z.s:1058   .text:0000000000000404 .LBE180
     /tmp/ccxYSQ9Z.s:1064   .text:000000000000040c .LBB182
     /tmp/ccxYSQ9Z.s:1079   .text:0000000000000418 .LBE182
     /tmp/ccxYSQ9Z.s:1094   .text:000000000000042c .LBB184
     /tmp/ccxYSQ9Z.s:1105   .text:0000000000000430 .LBE184
     /tmp/ccxYSQ9Z.s:4915   .debug_loc:000000000000049f .LLST35
     /tmp/ccxYSQ9Z.s:1110   .text:0000000000000434 .LBB186
     /tmp/ccxYSQ9Z.s:1124   .text:000000000000043c .LBE186
     /tmp/ccxYSQ9Z.s:4922   .debug_loc:00000000000004c2 .LLST36
     /tmp/ccxYSQ9Z.s:1089   .text:0000000000000428 .LVL64
     /tmp/ccxYSQ9Z.s:1128   .text:000000000000043c .LBB188
     /tmp/ccxYSQ9Z.s:1177   .text:0000000000000468 .LBE188
     /tmp/ccxYSQ9Z.s:4929   .debug_loc:00000000000004e5 .LLST37
     /tmp/ccxYSQ9Z.s:1130   .text:000000000000043c .LBB189
     /tmp/ccxYSQ9Z.s:1145   .text:0000000000000448 .LBE189
     /tmp/ccxYSQ9Z.s:1162   .text:0000000000000460 .LBB191
     /tmp/ccxYSQ9Z.s:1176   .text:0000000000000468 .LBE191
     /tmp/ccxYSQ9Z.s:4936   .debug_loc:0000000000000508 .LLST38
GAS LISTING /tmp/ccxYSQ9Z.s 			page 53


     /tmp/ccxYSQ9Z.s:1157   .text:000000000000045c .LVL70
     /tmp/ccxYSQ9Z.s:1180   .text:0000000000000468 .LBB193
     /tmp/ccxYSQ9Z.s:1232   .text:0000000000000494 .LBE193
     /tmp/ccxYSQ9Z.s:4943   .debug_loc:000000000000052b .LLST39
     /tmp/ccxYSQ9Z.s:1182   .text:0000000000000468 .LBB194
     /tmp/ccxYSQ9Z.s:1197   .text:0000000000000474 .LBE194
     /tmp/ccxYSQ9Z.s:1217   .text:000000000000048c .LBB196
     /tmp/ccxYSQ9Z.s:1231   .text:0000000000000494 .LBE196
     /tmp/ccxYSQ9Z.s:4950   .debug_loc:000000000000054e .LLST40
     /tmp/ccxYSQ9Z.s:1205   .text:0000000000000484 .LVL73
     /tmp/ccxYSQ9Z.s:1235   .text:0000000000000494 .LBB198
     /tmp/ccxYSQ9Z.s:1300   .text:00000000000004cc .LBE198
     /tmp/ccxYSQ9Z.s:4957   .debug_loc:0000000000000571 .LLST41
     /tmp/ccxYSQ9Z.s:1237   .text:0000000000000494 .LBB199
     /tmp/ccxYSQ9Z.s:1253   .text:00000000000004a0 .LBE199
     /tmp/ccxYSQ9Z.s:1255   .text:00000000000004a0 .LBB201
     /tmp/ccxYSQ9Z.s:1270   .text:00000000000004ac .LBE201
     /tmp/ccxYSQ9Z.s:1285   .text:00000000000004c4 .LBB203
     /tmp/ccxYSQ9Z.s:1299   .text:00000000000004cc .LBE203
     /tmp/ccxYSQ9Z.s:4964   .debug_loc:0000000000000594 .LLST42
     /tmp/ccxYSQ9Z.s:1280   .text:00000000000004c0 .LVL78
     /tmp/ccxYSQ9Z.s:279    .text:000000000000010c .LBB123
     /tmp/ccxYSQ9Z.s:368    .text:00000000000001c0 .LBE123
     /tmp/ccxYSQ9Z.s:4971   .debug_loc:00000000000005b7 .LLST2
     /tmp/ccxYSQ9Z.s:5123   .debug_str:00000000000002f6 .LASF141
     /tmp/ccxYSQ9Z.s:4978   .debug_loc:00000000000005da .LLST3
     /tmp/ccxYSQ9Z.s:281    .text:000000000000010c .LBB124
     /tmp/ccxYSQ9Z.s:297    .text:0000000000000118 .LBE124
     /tmp/ccxYSQ9Z.s:299    .text:0000000000000118 .LBB126
     /tmp/ccxYSQ9Z.s:315    .text:0000000000000124 .LBE126
     /tmp/ccxYSQ9Z.s:320    .text:0000000000000134 .LVL5
     /tmp/ccxYSQ9Z.s:327    .text:0000000000000148 .LVL6
     /tmp/ccxYSQ9Z.s:332    .text:0000000000000158 .LVL7
     /tmp/ccxYSQ9Z.s:337    .text:0000000000000168 .LVL8
     /tmp/ccxYSQ9Z.s:344    .text:000000000000017c .LVL9
     /tmp/ccxYSQ9Z.s:349    .text:000000000000018c .LVL10
     /tmp/ccxYSQ9Z.s:354    .text:000000000000019c .LVL11
     /tmp/ccxYSQ9Z.s:361    .text:00000000000001b0 .LVL12
     /tmp/ccxYSQ9Z.s:366    .text:00000000000001c0 .LVL13
     /tmp/ccxYSQ9Z.s:142    .text:0000000000000084 .LBB108
     /tmp/ccxYSQ9Z.s:157    .text:0000000000000090 .LBE108
     /tmp/ccxYSQ9Z.s:161    .text:0000000000000094 .LBB110
     /tmp/ccxYSQ9Z.s:176    .text:00000000000000a0 .LBE110
     /tmp/ccxYSQ9Z.s:180    .text:00000000000000a4 .LBB112
     /tmp/ccxYSQ9Z.s:195    .text:00000000000000b0 .LBE112
     /tmp/ccxYSQ9Z.s:199    .text:00000000000000b4 .LBB114
     /tmp/ccxYSQ9Z.s:214    .text:00000000000000c0 .LBE114
     /tmp/ccxYSQ9Z.s:218    .text:00000000000000c4 .LBB116
     /tmp/ccxYSQ9Z.s:233    .text:00000000000000d0 .LBE116
     /tmp/ccxYSQ9Z.s:237    .text:00000000000000d4 .LBB118
     /tmp/ccxYSQ9Z.s:253    .text:00000000000000e0 .LBE118
     /tmp/ccxYSQ9Z.s:1305   .text:00000000000004cc .LBB128
     /tmp/ccxYSQ9Z.s:1320   .text:00000000000004d8 .LBE128
     /tmp/ccxYSQ9Z.s:4985   .debug_loc:00000000000005fd .LLST4
     /tmp/ccxYSQ9Z.s:373    .text:00000000000001c0 .LBB208
     /tmp/ccxYSQ9Z.s:385    .text:00000000000001c8 .LBE208
     /tmp/ccxYSQ9Z.s:4993   .debug_loc:0000000000000621 .LLST43
GAS LISTING /tmp/ccxYSQ9Z.s 			page 54


     /tmp/ccxYSQ9Z.s:1325   .text:00000000000004e0 .LVL82
     /tmp/ccxYSQ9Z.s:5259   .debug_str:00000000000006a2 .LASF142
     /tmp/ccxYSQ9Z.s:10     .text:0000000000000000 .LFB47
     /tmp/ccxYSQ9Z.s:103    .text:0000000000000068 .LFE47
     /tmp/ccxYSQ9Z.s:22     .text:000000000000000c .LBB104
     /tmp/ccxYSQ9Z.s:38     .text:0000000000000018 .LBE104
     /tmp/ccxYSQ9Z.s:60     .text:0000000000000040 .LBB106
     /tmp/ccxYSQ9Z.s:71     .text:0000000000000044 .LBE106
     /tmp/ccxYSQ9Z.s:5001   .debug_loc:0000000000000645 .LLST0
     /tmp/ccxYSQ9Z.s:5093   .debug_str:000000000000021b .LASF162
     /tmp/ccxYSQ9Z.s:5163   .debug_str:000000000000041c .LASF143
     /tmp/ccxYSQ9Z.s:5037   .debug_str:0000000000000094 .LASF144
     /tmp/ccxYSQ9Z.s:5119   .debug_str:00000000000002dd .LASF145
     /tmp/ccxYSQ9Z.s:5157   .debug_str:0000000000000408 .LASF146
     /tmp/ccxYSQ9Z.s:5243   .debug_str:000000000000064c .LASF147
     /tmp/ccxYSQ9Z.s:5333   .debug_str:0000000000000946 .LASF148
     /tmp/ccxYSQ9Z.s:5233   .debug_str:00000000000005f6 .LASF149
     /tmp/ccxYSQ9Z.s:5195   .debug_str:00000000000004f6 .LASF150
     /tmp/ccxYSQ9Z.s:5103   .debug_str:000000000000025b .LASF151
     /tmp/ccxYSQ9Z.s:251    .text:00000000000000e0 .LVL2
     /tmp/ccxYSQ9Z.s:402    .text:00000000000001e4 .LVL15
     /tmp/ccxYSQ9Z.s:502    .text:0000000000000214 .LVL18
     /tmp/ccxYSQ9Z.s:559    .text:0000000000000250 .LVL23
     /tmp/ccxYSQ9Z.s:570    .text:0000000000000254 .LVL24
     /tmp/ccxYSQ9Z.s:623    .text:000000000000028c .LVL28
     /tmp/ccxYSQ9Z.s:635    .text:0000000000000290 .LVL29
     /tmp/ccxYSQ9Z.s:712    .text:00000000000002e0 .LVL38
     /tmp/ccxYSQ9Z.s:934    .text:0000000000000394 .LVL52
     /tmp/ccxYSQ9Z.s:981    .text:00000000000003c8 .LVL58
     /tmp/ccxYSQ9Z.s:411    .text:00000000000001ec .LVL16
     /tmp/ccxYSQ9Z.s:416    .text:00000000000001f8 .LVL17
     /tmp/ccxYSQ9Z.s:506    .text:0000000000000218 .LVL19
     /tmp/ccxYSQ9Z.s:547    .text:0000000000000248 .LVL22
     /tmp/ccxYSQ9Z.s:611    .text:0000000000000284 .LVL27
     /tmp/ccxYSQ9Z.s:660    .text:00000000000002b4 .LVL34
     /tmp/ccxYSQ9Z.s:678    .text:00000000000002bc .LVL35
     /tmp/ccxYSQ9Z.s:639    .text:0000000000000294 .LVL30
     /tmp/ccxYSQ9Z.s:643    .text:0000000000000298 .LVL31
     /tmp/ccxYSQ9Z.s:647    .text:000000000000029c .LVL32
     /tmp/ccxYSQ9Z.s:693    .text:00000000000002d0 .LVL36
     /tmp/ccxYSQ9Z.s:705    .text:00000000000002d8 .LVL37
     /tmp/ccxYSQ9Z.s:759    .text:0000000000000304 .LVL39
     /tmp/ccxYSQ9Z.s:818    .text:000000000000033c .LVL46
     /tmp/ccxYSQ9Z.s:764    .text:0000000000000310 .LVL40
     /tmp/ccxYSQ9Z.s:772    .text:0000000000000318 .LVL41
     /tmp/ccxYSQ9Z.s:790    .text:000000000000032c .LVL43
     /tmp/ccxYSQ9Z.s:799    .text:0000000000000330 .LVL44
     /tmp/ccxYSQ9Z.s:806    .text:0000000000000334 .LVL45
     /tmp/ccxYSQ9Z.s:873    .text:000000000000036c .LVL48
     /tmp/ccxYSQ9Z.s:882    .text:0000000000000370 .LVL49
     /tmp/ccxYSQ9Z.s:889    .text:0000000000000374 .LVL50
     /tmp/ccxYSQ9Z.s:901    .text:000000000000037c .LVL51
     /tmp/ccxYSQ9Z.s:951    .text:00000000000003b0 .LVL55
     /tmp/ccxYSQ9Z.s:962    .text:00000000000003b8 .LVL56
     /tmp/ccxYSQ9Z.s:938    .text:0000000000000398 .LVL53
     /tmp/ccxYSQ9Z.s:974    .text:00000000000003c0 .LVL57
     /tmp/ccxYSQ9Z.s:1011   .text:00000000000003e0 .LVL59
GAS LISTING /tmp/ccxYSQ9Z.s 			page 55


     /tmp/ccxYSQ9Z.s:1018   .text:00000000000003ec .LVL60
     /tmp/ccxYSQ9Z.s:1022   .text:00000000000003f0 .LVL61
     /tmp/ccxYSQ9Z.s:1034   .text:00000000000003f8 .LVL62
     /tmp/ccxYSQ9Z.s:1085   .text:0000000000000420 .LVL63
     /tmp/ccxYSQ9Z.s:1093   .text:000000000000042c .LVL65
     /tmp/ccxYSQ9Z.s:1102   .text:0000000000000430 .LVL66
     /tmp/ccxYSQ9Z.s:1109   .text:0000000000000434 .LVL67
     /tmp/ccxYSQ9Z.s:1121   .text:000000000000043c .LVL68
     /tmp/ccxYSQ9Z.s:1153   .text:0000000000000454 .LVL69
     /tmp/ccxYSQ9Z.s:1161   .text:0000000000000460 .LVL71
     /tmp/ccxYSQ9Z.s:1173   .text:0000000000000468 .LVL72
     /tmp/ccxYSQ9Z.s:1228   .text:0000000000000494 .LVL75
     /tmp/ccxYSQ9Z.s:1216   .text:000000000000048c .LVL74
     /tmp/ccxYSQ9Z.s:1251   .text:00000000000004a0 .LVL76
     /tmp/ccxYSQ9Z.s:1278   .text:00000000000004b8 .LVL77
     /tmp/ccxYSQ9Z.s:1284   .text:00000000000004c4 .LVL79
     /tmp/ccxYSQ9Z.s:1296   .text:00000000000004cc .LVL80
     /tmp/ccxYSQ9Z.s:295    .text:0000000000000118 .LVL3
     /tmp/ccxYSQ9Z.s:313    .text:0000000000000124 .LVL4
     /tmp/ccxYSQ9Z.s:1317   .text:00000000000004d8 .LVL81
     /tmp/ccxYSQ9Z.s:382    .text:00000000000001c8 .LVL14
     /tmp/ccxYSQ9Z.s:59     .text:0000000000000040 .LVL0
     /tmp/ccxYSQ9Z.s:68     .text:0000000000000044 .LVL1
     /tmp/ccxYSQ9Z.s:1341   .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN3TCB7runningE
_Z11printStringPKc
_Z8printIntiii
_ZN15MemoryAllocator15createAllocatorEv
_ZN15MemoryAllocator5allocEm
_ZN15MemoryAllocator7deallocEPv
_ZN3TCB12createThreadEPFvPvES0_Pmb
_ZN3TCB8dispatchEv
_ZN13SemaforKernel4openEi
_ZN13SemaforKernel4waitEv
_ZN13SemaforKernel6signalEv
__getc
__putc
console_handler
